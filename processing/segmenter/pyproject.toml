[tool.poetry]
name = "planktoscope-processing-segmenter"
# Note: PEP 440 requires pre-releases to be formatted like "2023.7.0b0" rather than
# "2023.7.0-beta.0", which is different from the Semantic Versioning schema
version = "2024.0.0b1"
description = "Data processor to segment objects from raw PlanktoScope data"
# For simplicity, we follow the definition of "Maintainer" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Maintainers: Contributors who are responsible for driving the vision and managing the
# organizational aspects of the project".
# Here, we only list the current maintainers of the PlanktoScope backend software.
maintainers = [
  "Ethan Li <lietk12@gmail.com>",
]
# For simplicity, we follow the definition of "Author" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Author: The person/s or organization that created the project".
# Here, we only list the authors of the PlanktoScope backend software.
authors = [
  "Romain Bazile <romain@oceantrotter.org>",
]
license = "GPL-3.0-or-later"
readme = "README.md"
homepage = "https://www.planktoscope.org"
repository = "https://github.com/PlanktoScope/device-backend"
# FIXME: once we have the docs up at docs.fairscope.com, we should update this URL
documentation = "https://planktoscope.github.io/PlanktoScope/"
keywords = ["planktoscope"]
classifiers = [
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Topic :: Scientific/Engineering",
]


[[tool.poetry.source]]
name = "pypi"
priority = "supplemental"

[[tool.poetry.source]]
name = "piwheels"
url = "https://www.piwheels.org/simple/"
priority = "primary"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "~3.9.2"
paho-mqtt = [
  { version = "==1.6.1", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==1.6.1", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
numpy = [
  { version = "==1.22.4", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==1.22.4", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
pandas = [
  { version = "==2.1.4", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==2.1.4", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
loguru = [
  { version = "==0.5.3", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==0.5.3", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
opencv-python-headless = [
  { version = "==4.6.0.66", source = "pypi", markers = "platform_machine != 'armv7l'"},
  { version = "==4.6.0.66", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
scikit-image = [
  { version = "==0.19.3", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==0.19.3", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
# note: the following packages are only indirect dependencies, but we need to download wheels from
# the appropriate sources, so we must explicitly select them here
scipy = [
  { version = "==1.11.4", source = "pypi", markers = "platform_machine != 'armv7l'"},
  { version = "==1.11.4", source = "piwheels", markers = "platform_machine == 'armv7l'"},
]
pillow = [
  { version = "==10.2.0", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==10.2.0", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
pywavelets = [
  { version = "==1.5.0", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==1.5.0", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
