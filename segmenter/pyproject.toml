[project]
name = "planktoscope-segmenter"
version = "0.0.1"
description = "Data processor to segment objects from raw PlanktoScope data"
requires-python = ">=3.13.5,<4.0"
readme = "README.md"
license = "GPL-3.0-or-later"
keywords = ["planktoscope"]
classifiers = [
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "paho-mqtt>=2.1.0,<3",
    "numpy>=2.3.3,<3",
    "pandas>=2.3.3,<3",
    "loguru>=0.7.3,<0.8",
    "opencv-python-headless>=4.6.0.66,<5",
    "scikit-image>=0.25.2,<0.26",
]

[project.urls]
Homepage = "https://www.planktoscope.org"
Repository = "https://github.com/PlanktoScope/PlanktoScope/tree/main/segmenter"
Documentation = "https://docs.planktoscope.community/"

[dependency-groups]
dev = [
    "poethepoet>=0.37.0,<0.38",
    "mypy>=1.18.2,<2",
    "types-paho-mqtt>=1.6.0.20240106,<2",
    "ruff>=0.13.3,<0.14",
]

[tool.uv]
package = false

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100

[tool.mypy]
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
# We are gradually introducing type-checking as we rewrite each module; we have to rewrite some
# modules before we can enable these flags:
# disallow_untyped_calls = true
# disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true

[tool.poe.tasks]
fmt = "ruff format"
lint-mypy = "mypy ."
lint-ruff = "ruff check"
lint = ["lint-ruff"]
fmt-check = "ruff format --check"
check = ["fmt-check", "lint"]
