[
    {
        "id": "1b667c6443413ced",
        "type": "tab",
        "label": "Home dashboard2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ab58b3fd0e6bcd77",
        "type": "tab",
        "label": "Preview",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "190b0c9aa75e8843",
        "type": "tab",
        "label": "Metadata",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "35d7387466dd0bc0",
        "type": "tab",
        "label": "Acquisition",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0fd76ac156d78937",
        "type": "tab",
        "label": "Segmentation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14f8c9b5ce1235cc",
        "type": "tab",
        "label": "Visualization",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2d14eef8a9f51595",
        "type": "tab",
        "label": "Export",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae92a0a869ca847f",
        "type": "tab",
        "label": "Dev Kit",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "83b2474231efac73",
        "type": "tab",
        "label": "Cron",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8555b76c53e789e0",
        "type": "tab",
        "label": "[TEST] EcoTaxa",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8018bd5586fd4054",
        "type": "tab",
        "label": "Calibration",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6426e7bea6900426",
        "type": "tab",
        "label": "Calibration - Saturation Level",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14c685bd04db8be5",
        "type": "tab",
        "label": "Calibration - Lightness",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3afb1d2b21be9114",
        "type": "tab",
        "label": "Calibration - Pixel size",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d5b2c64b84f8ed4f",
        "type": "tab",
        "label": "Calibration - Pump",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a02961610bc3982a",
        "type": "tab",
        "label": "[TEST] PlanktoScope nodes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4ed26b8b.253504",
        "type": "subflow",
        "name": "Save hardware config",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "53d163be.47cf24"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b7861ce703215a01",
        "type": "subflow",
        "name": "Load hardware config",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "0f16258953fae292"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 40,
                "wires": [
                    {
                        "id": "d0fbcd200cd09981",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "63c85b96537b7355",
        "type": "subflow",
        "name": "Config",
        "info": "An input to this subflow will get the configuration to be saved to disk.\n\nOn startup, this node outputs the loaded configuration",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 160,
                "wires": [
                    {
                        "id": "5248e5e225d854d1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1040,
                "y": 60,
                "wires": [
                    {
                        "id": "f1c0a882a9e3d927",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "349e8016ec7515c6",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Text Fields",
        "style": {
            "label": true
        },
        "nodes": [
            "f9b137cda6a41cc8",
            "e42e71164274acdc",
            "a2eff4bb38731253"
        ],
        "x": 48,
        "y": 273,
        "w": 844,
        "h": 174
    },
    {
        "id": "224fcab0880dd093",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Slider",
        "style": {
            "label": true
        },
        "nodes": [
            "b2b82b3ee278d4bc",
            "cead53fe6d7fe793"
        ],
        "x": 34,
        "y": 659,
        "w": 232,
        "h": 122
    },
    {
        "id": "951b589e9ecbbb70",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Button toggles",
        "style": {
            "label": true
        },
        "nodes": [
            "7777baf58bd1bc87",
            "a43e9d9c640f6a51"
        ],
        "x": 34,
        "y": 799,
        "w": 292,
        "h": 122
    },
    {
        "id": "0d9513e4fa8e671f",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "generic",
        "style": {
            "label": true
        },
        "nodes": [
            "6d725e9d6e6752bd"
        ],
        "x": 34,
        "y": 19,
        "w": 192,
        "h": 82
    },
    {
        "id": "9ac62e47f20b26b7",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Preview",
        "style": {
            "label": true
        },
        "nodes": [
            "eeeea47645f9daca",
            "55bf230acc0db31a"
        ],
        "x": 34,
        "y": 939,
        "w": 232,
        "h": 122
    },
    {
        "id": "f6e28f1fc85830b2",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Textareas",
        "style": {
            "label": true
        },
        "nodes": [
            "ff04e338f28791c1",
            "a1de4783b40b22c7"
        ],
        "x": 34,
        "y": 1079,
        "w": 252,
        "h": 122
    },
    {
        "id": "c4dc9bdc60c02255",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Home",
        "style": {
            "label": true
        },
        "nodes": [
            "af21295c7ed58d76",
            "0666ca0a7a83550a"
        ],
        "x": 34,
        "y": 119,
        "w": 232,
        "h": 122
    },
    {
        "id": "f8c01569bc2d2351",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Loading methods",
        "style": {
            "label": true
        },
        "nodes": [
            "bdd5061dc2808c7b",
            "c7af759e6348052a",
            "f8450ada286a255f",
            "05f282f697c8d264",
            "1c2b9fbce068ea00",
            "9496c5ceae312a6b"
        ],
        "x": 34,
        "y": 1239,
        "w": 1192,
        "h": 162
    },
    {
        "id": "c0721ac2a3ae24b9",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "name": "Get and set variable in Global",
        "style": {
            "label": true
        },
        "nodes": [
            "bdef59faea812013",
            "5a9af1c11b3c3c31",
            "fc73d6b9b216ac9c",
            "e3f11510712aac2d",
            "be327c38d0d4571c",
            "ade743e5b35d1353"
        ],
        "x": 14,
        "y": 1419,
        "w": 732,
        "h": 202
    },
    {
        "id": "910e195536aea223",
        "type": "group",
        "z": "83b2474231efac73",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a197bfa71c1761b4",
            "495e1733d60d5651",
            "0fdba9b9b11427db",
            "019662c5bf05e430",
            "8dc5b8c9bfd7cc87",
            "1c782af30d1ff770",
            "5f5dec5ac53119ae",
            "61dde05d9a3f805e",
            "b17728471bdfc61e",
            "e4719fcedaa61149",
            "9301eaa353ece507",
            "67bcd7bd5a4c38cc",
            "2a55ae214f1e7273",
            "8447c9830c3aed1e"
        ],
        "x": -6,
        "y": 19,
        "w": 1412,
        "h": 577
    },
    {
        "id": "751429d7682830be",
        "type": "group",
        "z": "83b2474231efac73",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "caf377d323526d14",
            "316dae6f231575b7",
            "9e169af039fc8031",
            "1bc303a19fc9e38b",
            "ff83a2795f988098",
            "fd3ae27267703c27",
            "527165cd7171fe26",
            "50629a570b41196e",
            "0aef9a09d59e574c",
            "a9701575d8df4ce1",
            "60d1ad2a7e54e60e",
            "f8df009e737eb044",
            "e6eb3b16a1d6bf22",
            "1997fd46811f0331",
            "5f091b11b5c9fa40",
            "0650e037776b3d8a"
        ],
        "x": 14,
        "y": 739,
        "w": 1812,
        "h": 522
    },
    {
        "id": "19c3570e48774bd0",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "3829aff60cdc5be4"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "631f3e38acec1bc6",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 1. Reset the value of the gains",
        "style": {
            "label": true
        },
        "nodes": [
            "ea8c4596e202f964",
            "4c7717ee07b97e8b",
            "0fa68c34208c36d2",
            "958aac3964d0faf4",
            "857257c8697a3b76"
        ],
        "x": 34,
        "y": 359,
        "w": 552,
        "h": 222
    },
    {
        "id": "b04534747af369bb",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 4. Adjust White Balance Settings",
        "style": {
            "label": true
        },
        "nodes": [
            "f13c467a5f891268",
            "3b5d942eccbc14ba",
            "3574f41671e9c607",
            "0e406c9af3e5a51e",
            "6d6fdc0c504bbc26",
            "cab52c68fd58220b",
            "06e4799523ede341",
            "801d9c0cb77d4caa"
        ],
        "x": 34,
        "y": 799,
        "w": 672,
        "h": 182
    },
    {
        "id": "a885abc248b6ba6e",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 2. Measure the Current Saturation Level",
        "style": {
            "label": true
        },
        "nodes": [
            "a99be895898a4f2f",
            "f7aececeb25feee2",
            "4a99ebbebc9e7d65",
            "a6cfdc06c50e2b7c",
            "69f90516888fb4c2",
            "bc2f402f6cdd8434",
            "6104a1880402810c",
            "224eba65a1a42b91"
        ],
        "x": 34,
        "y": 599,
        "w": 1442,
        "h": 82
    },
    {
        "id": "64fb52a5fc759893",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step 3. Display White Balance Settings",
        "style": {
            "label": true
        },
        "nodes": [
            "f3d25e1060563ac8",
            "45f2ad943cee341f"
        ],
        "x": 34,
        "y": 699,
        "w": 392,
        "h": 82
    },
    {
        "id": "f591255fbfc6c466",
        "type": "group",
        "z": "6426e7bea6900426",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "062a3af5e12e8445",
            "e5da27b9abdcb156"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "0dcebaf2b57a4374",
        "type": "group",
        "z": "14c685bd04db8be5",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "300c2d2496f1d12d"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "da1cb3ed0c90bb56",
        "type": "group",
        "z": "3afb1d2b21be9114",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "05a5a9c4530d07ea",
            "419cccaf23eb2548"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "d7c2ea70e05a360f",
        "type": "group",
        "z": "3afb1d2b21be9114",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "5b95342353581bba"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "0861054b07c3373d",
        "type": "group",
        "z": "d5b2c64b84f8ed4f",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "c92cd7e25b01278d",
            "f8db1578262f6bc8"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "508d01c8283ee722",
        "type": "group",
        "z": "d5b2c64b84f8ed4f",
        "name": "Streaming",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "71ba57a25304e08f"
        ],
        "x": 34,
        "y": 119,
        "w": 192,
        "h": 82
    },
    {
        "id": "426f6cef77fbb290",
        "type": "group",
        "z": "14c685bd04db8be5",
        "name": "Step Bar",
        "style": {
            "label": true
        },
        "nodes": [
            "5fbdba7e61973f9a",
            "25cb0163587aee15"
        ],
        "x": 34,
        "y": 19,
        "w": 372,
        "h": 82
    },
    {
        "id": "f5929f8fbe9df063",
        "type": "group",
        "z": "6426e7bea6900426",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ec5d9fecc6b0cece",
            "5c444b714f250678",
            "cb467ae07b125bcc",
            "aad16ea9eae8d3dd",
            "97541b0d6dcf6747"
        ],
        "x": 34,
        "y": 219,
        "w": 562,
        "h": 122
    },
    {
        "id": "3bb20cd87e85a6b8",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "92b6d6d7a823b598",
            "abc662f31074fc22",
            "a7eccf2fc3cf8bec",
            "e3c230f24ea098cf",
            "d082d59bfaddcd80",
            "9f5061a034f606a3",
            "1f6f854383bffbc8",
            "0e1835e8b7c470ee"
        ],
        "x": 14,
        "y": 19,
        "w": 752,
        "h": 202
    },
    {
        "id": "153af3e4645145a8",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "508b0be07fd290ca",
            "7ccb5c8c66ad170a",
            "882b8a7ce4992849",
            "7bf0f35f3f491657",
            "89c198d4d49eca98",
            "2fe0de4d0d304630",
            "3be16a3aa46029b1",
            "bcdab829fb50bc57"
        ],
        "x": 14,
        "y": 239,
        "w": 812,
        "h": 202
    },
    {
        "id": "cef91df1f697848e",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "29b3163c363f83d7",
            "19da48e7c9119862",
            "28f8ab1b6c179786",
            "063d4a75b1911dfd",
            "7acf590b123400aa",
            "6f03eb804423f73c",
            "4966524cdc764174",
            "f640495d00bb68b9"
        ],
        "x": 14,
        "y": 459,
        "w": 932,
        "h": 182
    },
    {
        "id": "3fe3efd04fb1a41a",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bb0c7a3f2e240756",
            "1433d7bb97c2b52e",
            "58b352badddb48f5",
            "1f1c86a14bf3ac61"
        ],
        "x": 14,
        "y": 659,
        "w": 552,
        "h": 142
    },
    {
        "id": "9c49d230dea06fdf",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "79d35d7ad73f89f9",
            "39cd9534b43ef484",
            "bb7a7793827bb9d6",
            "7e293f564d4fbfc4"
        ],
        "x": 14,
        "y": 819,
        "w": 372,
        "h": 142
    },
    {
        "id": "27e22d982f0bcb2f",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "959839bc2c390088",
            "0d10e66bb2b9d1cc",
            "221ce111a005980c",
            "53516cda8e4f5a3c"
        ],
        "x": 434,
        "y": 819,
        "w": 372,
        "h": 142
    },
    {
        "id": "fc6b573a63d6dfaa",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c34bff0e83b45e68",
            "dc07c747a235da10",
            "f12fd63508bb1b63",
            "2babe27c1bf9d6ef",
            "15f16463c05bb479",
            "b552ca516cc07737",
            "94a433cec8b54203"
        ],
        "x": 934,
        "y": 39,
        "w": 352,
        "h": 262
    },
    {
        "id": "dc792afbab434446",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "50128147f802f133",
            "76fd33c347db95b0",
            "b9c2e0abaad12bd9",
            "61ebceb724041fb2"
        ],
        "x": 994,
        "y": 339,
        "w": 392,
        "h": 142
    },
    {
        "id": "dc307bb5d26c60f4",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "300343e6b56f088e",
            "743aaf81267c0a04",
            "da645aa8ebbed646",
            "7d1f9414be49d7c3"
        ],
        "x": 994,
        "y": 519,
        "w": 412,
        "h": 142
    },
    {
        "id": "855d9ef468b5db0f",
        "type": "group",
        "z": "a02961610bc3982a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f7c18ab2aa687120",
            "ede7a86fd97b5e1b",
            "389e0cdd7d3853b0",
            "af8ce4702c170449"
        ],
        "x": 14,
        "y": 979,
        "w": 412,
        "h": 142
    },
    {
        "id": "239ace7a73b8b6df",
        "type": "group",
        "z": "6426e7bea6900426",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "23a52935692ecb49",
            "746c989af736cb33",
            "7da6b39ccb75384c",
            "2451da81a82f7915",
            "66756e43efce9726",
            "ac01daf9daeecf2a",
            "4441ba5d435ed9d7",
            "7cf9eaa2eb0776bf"
        ],
        "x": 994,
        "y": 99,
        "w": 592,
        "h": 262
    },
    {
        "id": "979647e2e34284fb",
        "type": "group",
        "z": "14f8c9b5ce1235cc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f530763503fdc7d1",
            "e5a0432fc7b35b29",
            "ba8045b3448d5bbf",
            "f0313532a2b77337",
            "e045f6939008f23f",
            "68fe28f50beb2add",
            "a20376f0ac08af8e",
            "694187e7d85faec3",
            "693e1ad09770bdf5",
            "82a3257cd0a3815d",
            "44ef242ece9b6b4b",
            "7433aae2400b7f78",
            "a90099cfe7a37a37",
            "df0dcb1175b8bd5f"
        ],
        "x": 14,
        "y": 279,
        "w": 1172,
        "h": 542
    },
    {
        "id": "f9b137cda6a41cc8",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "g": "349e8016ec7515c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f142197f943e06c3",
            "ba32092924c21704"
        ],
        "x": 74,
        "y": 299,
        "w": 252,
        "h": 122
    },
    {
        "id": "e42e71164274acdc",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "g": "349e8016ec7515c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "09145421eca576b2",
            "96d4f5ed69c26184"
        ],
        "x": 334,
        "y": 299,
        "w": 272,
        "h": 122
    },
    {
        "id": "a2eff4bb38731253",
        "type": "group",
        "z": "ae92a0a869ca847f",
        "g": "349e8016ec7515c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f467dd95ca327abe",
            "9460aed131d64851"
        ],
        "x": 614,
        "y": 299,
        "w": 252,
        "h": 122
    },
    {
        "id": "e6ae26617c24c3ea",
        "type": "ui-base",
        "name": "PlanktoScope GUI v.2",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": true,
        "headerContent": "dashpage",
        "navigationStyle": "icon",
        "titleBarStyle": "fixed",
        "showReconnectNotification": true,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "8dc3722c.06efa8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "0.0.0.0",
        "port": "1883",
        "clientid": "Client_node",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "81a80e32347ff991",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#5900ce",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#5900ce",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#7e1bff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#5900ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "PlanktoScope",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "Y-MM-DD",
            "sizes": {
                "sx": 55,
                "sy": 55,
                "gx": 4,
                "gy": 4,
                "cx": 4,
                "cy": 4,
                "px": 4,
                "py": 4
            }
        }
    },
    {
        "id": "f7770f0b818c3a67",
        "type": "ui-theme",
        "name": "PlanktoScope GUI 2",
        "colors": {
            "surface": "#ffffff",
            "primary": "#1976d2",
            "bgPage": "#dedede",
            "groupBg": "#ffffff",
            "groupOutline": "#9c9c9c"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "11px",
            "groupBorderRadius": "4px",
            "widgetGap": "13px"
        }
    },
    {
        "id": "73070e06474249b4",
        "type": "ui-page",
        "name": "Metadata",
        "ui": "e6ae26617c24c3ea",
        "path": "/metadata",
        "icon": "information-outline",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "dd015fda7456b9b0",
        "type": "ui-group",
        "name": "Navigation Top",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "69c772603e9cec0d",
        "type": "ui-group",
        "name": "Sample Information",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6fab47af451c6d95",
        "type": "ui-group",
        "name": "Starting point",
        "page": "73070e06474249b4",
        "width": "6",
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1cfe3062a8353012",
        "type": "ui-group",
        "name": "Ending point",
        "page": "73070e06474249b4",
        "width": "6",
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "cb3521392eb4e9ed",
        "type": "ui-group",
        "name": "Net Specificity",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "dd4d9707051041c9",
        "type": "ui-group",
        "name": "Other informations",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 6,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "59ce6abfbb7f8683",
        "type": "ui-group",
        "name": "Navigation Bottom",
        "page": "73070e06474249b4",
        "width": "12",
        "height": 1,
        "order": 7,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7a4e042a60b734a6",
        "type": "ui-page",
        "name": "Segmentation",
        "ui": "e6ae26617c24c3ea",
        "path": "/segmentation",
        "icon": "crop",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 5,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "bfd4acb7b243514f",
        "type": "ui-group",
        "name": "Table",
        "page": "7a4e042a60b734a6",
        "width": "8",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c8bb5168bda76add",
        "type": "ui-page",
        "name": "Cron Experiment",
        "ui": "e6ae26617c24c3ea",
        "path": "/plots",
        "icon": "sync",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 9,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "4a8738206c62b02e",
        "type": "ui-group",
        "name": "Plots",
        "page": "c8bb5168bda76add",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7edf5f14f6ca0bdd",
        "type": "ui-group",
        "name": "Feed",
        "page": "c8bb5168bda76add",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e41267c4a14ba4af",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 4,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "9d9ac37fd36c358e",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 7,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "db02fe254c34125f",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 10,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "ff024f7a460585b4",
        "type": "ui-spacer",
        "group": "4a8738206c62b02e",
        "name": "spacer",
        "tooltip": "",
        "order": 1,
        "width": "6",
        "height": 1,
        "className": ""
    },
    {
        "id": "f22f627015431032",
        "type": "ui-page",
        "name": "Calibration - Lightness",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_lightness",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 12,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "705156ec7eedfb1e",
        "type": "ui-group",
        "name": "Preview",
        "page": "f22f627015431032",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "728c7ed3d63dfcee",
        "type": "ui-group",
        "name": "Settings",
        "page": "f22f627015431032",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "aa9ba6cedf56d2cd",
        "type": "ui-page",
        "name": "Calibration - Pixel size",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_pixel_size",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 13,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "c966455a52d121c0",
        "type": "ui-group",
        "name": "Settings",
        "page": "aa9ba6cedf56d2cd",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c9933f7d77fc6f01",
        "type": "ui-group",
        "name": "Preview",
        "page": "aa9ba6cedf56d2cd",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "48216bc1f7c53a75",
        "type": "ui-page",
        "name": "Calibration - Pump",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_pump",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 14,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "0c3ae4988f81c2ac",
        "type": "ui-group",
        "name": "Preview",
        "page": "48216bc1f7c53a75",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6039d653304537af",
        "type": "ui-group",
        "name": "Settings",
        "page": "48216bc1f7c53a75",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "803aa402d5c66b73",
        "type": "ui-page",
        "name": "Calibration - Saturation Level",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration_saturation_level",
        "icon": "target-variant",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 11,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "297b9a8eaa0287e2",
        "type": "ui-group",
        "name": "Preview",
        "page": "803aa402d5c66b73",
        "width": "4",
        "height": "6",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "af8acdfe9afbad74",
        "type": "ui-group",
        "name": "Settings",
        "page": "803aa402d5c66b73",
        "width": "8",
        "height": "8",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f8dd620721c6d70b",
        "type": "ui-page",
        "name": "Calibration",
        "ui": "e6ae26617c24c3ea",
        "path": "/calibration",
        "icon": "mdi-tune",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 10,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c29c835a70533b69",
        "type": "ui-group",
        "name": "header",
        "page": "f8dd620721c6d70b",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "822cdc5b6ef13f39",
        "type": "ui-group",
        "name": "body",
        "page": "f8dd620721c6d70b",
        "width": "12",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "518a4242f548c1f2",
        "type": "ui-group",
        "name": "links",
        "page": "f8dd620721c6d70b",
        "width": "12",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bcc78241b99ba27f",
        "type": "ui-page",
        "name": "Preview",
        "ui": "e6ae26617c24c3ea",
        "path": "/preview",
        "icon": "mdi-eye",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "58ab4d5e3dd68192",
        "type": "ui-group",
        "name": "Streaming",
        "page": "bcc78241b99ba27f",
        "width": "7",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "39cbd2658f16d608",
        "type": "ui-group",
        "name": "Settings",
        "page": "bcc78241b99ba27f",
        "width": "5",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5c3e73c675caac42",
        "type": "ui-page",
        "name": "Acquisition",
        "ui": "e6ae26617c24c3ea",
        "path": "/acquisition",
        "icon": "video-image",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "b274327af3807b79",
        "type": "ui-group",
        "name": "Streaming",
        "page": "5c3e73c675caac42",
        "width": "7",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d2f77573ed4317e4",
        "type": "ui-group",
        "name": "Acquisition settings",
        "page": "5c3e73c675caac42",
        "width": "5",
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "b9f88d899abc43e6",
        "type": "ui-page",
        "name": "Dev Kit",
        "ui": "e6ae26617c24c3ea",
        "path": "/devkit",
        "icon": "mdi-database-plus",
        "layout": "tabs",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 8,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3496e96aaf509c63",
        "type": "ui-group",
        "name": "Generic",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0b938df814df6f89",
        "type": "ui-group",
        "name": "Text fields",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4b77e32bb8af68b1",
        "type": "ui-group",
        "name": "Loading methods",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "42ad8472e579096e",
        "type": "ui-group",
        "name": "Sliders",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 7,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e461e16bf6fe45b0",
        "type": "ui-group",
        "name": "Button toggles",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 8,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c503a4c01451fec2",
        "type": "ui-group",
        "name": "Preview",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 9,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9919d82f68c7a152",
        "type": "ui-group",
        "name": "Textareas",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 10,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2ca4adc305fbadd5",
        "type": "ui-group",
        "name": "Landing Page",
        "page": "b9f88d899abc43e6",
        "width": "6",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "72483a7aac978971",
        "type": "ui-group",
        "name": "Get and set variable in Global",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "632260133d581caa",
        "type": "ui-page",
        "name": "Home",
        "ui": "e6ae26617c24c3ea",
        "path": "/home",
        "icon": "home",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "713fd4c3b9030f45",
        "type": "ui-group",
        "name": "body",
        "page": "632260133d581caa",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5d39a98563150f22",
        "type": "ui-group",
        "name": "header",
        "page": "632260133d581caa",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "cf3554d2bdb02f22",
        "type": "ui-group",
        "name": "links",
        "page": "632260133d581caa",
        "width": "12",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7572915171e440cd",
        "type": "ui-group",
        "name": "Navigation Top",
        "page": "bcc78241b99ba27f",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "3ae252a2e5abca89",
        "type": "ui-group",
        "name": "Navigation Top",
        "page": "5c3e73c675caac42",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1c1efabff5115209",
        "type": "ui-group",
        "name": "Number field",
        "page": "b9f88d899abc43e6",
        "width": "12",
        "height": 1,
        "order": 6,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "55c2fe64e681037d",
        "type": "ui-group",
        "name": "Navigation bottom",
        "page": "bcc78241b99ba27f",
        "width": "12",
        "height": 1,
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "3d88a1872dbbf8a7",
        "type": "ui-group",
        "name": "Navigation bottom",
        "page": "5c3e73c675caac42",
        "width": "12",
        "height": 1,
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9b992ca6515ed058",
        "type": "ui-group",
        "name": "Navigation Top",
        "page": "7a4e042a60b734a6",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9f00807878a32dd5",
        "type": "ui-group",
        "name": "Navigation Bottom",
        "page": "7a4e042a60b734a6",
        "width": "12",
        "height": 1,
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d129fac8e7742d5b",
        "type": "ui-page",
        "name": "Visualization",
        "ui": "e6ae26617c24c3ea",
        "path": "/visualization",
        "icon": "chart-scatter-plot",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 6,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "b570f76ef526af45",
        "type": "ui-group",
        "name": "Navigation Top",
        "page": "d129fac8e7742d5b",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1d3abb201c51ff47",
        "type": "ui-group",
        "name": "Navigation Bottom",
        "page": "d129fac8e7742d5b",
        "width": "12",
        "height": 1,
        "order": 5,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "fa6393a7d7e3b7d7",
        "type": "ui-group",
        "name": "Plots Left",
        "page": "d129fac8e7742d5b",
        "width": 6,
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d9e5a1ba9059ca02",
        "type": "ui-page",
        "name": "Export",
        "ui": "e6ae26617c24c3ea",
        "path": "/export",
        "icon": "export",
        "layout": "grid",
        "theme": "f7770f0b818c3a67",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 7,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "1c2cd2bf4d4ab815",
        "type": "ui-group",
        "name": "Navigation Top",
        "page": "d9e5a1ba9059ca02",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5d3c24612267b256",
        "type": "ui-group",
        "name": "Navigation bottom",
        "page": "d9e5a1ba9059ca02",
        "width": "12",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d1c2dcd580716d02",
        "type": "ui-group",
        "name": "Viewer",
        "page": "d9e5a1ba9059ca02",
        "width": "12",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ed357f41cdf951bc",
        "type": "ui-group",
        "name": "x vs y",
        "page": "d129fac8e7742d5b",
        "width": "12",
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bdcb68c6cff2da73",
        "type": "ui-group",
        "name": "Plot Right",
        "page": "d129fac8e7742d5b",
        "width": 6,
        "height": 1,
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "402b3d24c87ab0d2",
        "type": "ui-group",
        "name": "Group 53",
        "page": "7a4e042a60b734a6",
        "width": "4",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "82099021.9ceb08",
        "type": "file",
        "z": "4ed26b8b.253504",
        "name": "",
        "filename": "/home/pi/PlanktoScope/hardware.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 660,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bb0a8725.a1849",
        "type": "json",
        "z": "4ed26b8b.253504",
        "name": "Create JSON",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 490,
        "y": 40,
        "wires": [
            [
                "82099021.9ceb08"
            ]
        ]
    },
    {
        "id": "53d163be.47cf24",
        "type": "function",
        "z": "4ed26b8b.253504",
        "name": "Update and retrieve hardware_conf",
        "func": "// change global\nhardware_conf = global.get(\"hardware_conf\");\n\nif (msg.topic == \"process_pixel_fixed\" && msg.payload == 0){\n    delete hardware_conf[msg.topic]\n    delete msg.topic\n}\n\nif (msg.topic !== null && msg.topic !== undefined){\n    hardware_conf[msg.topic] = msg.payload;\n    global.set(\"hardware_conf\", hardware_conf);\n}\n\nreturn {\"payload\": hardware_conf};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            [
                "bb0a8725.a1849"
            ]
        ]
    },
    {
        "id": "0f16258953fae292",
        "type": "file in",
        "z": "b7861ce703215a01",
        "name": "",
        "filename": "/home/pi/PlanktoScope/hardware.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 250,
        "y": 40,
        "wires": [
            [
                "81c516291ab19acd"
            ]
        ],
        "info": "# PlanktoScope Help\nThis Node will read the content of the file named **config.txt** containing all the input placeholders.\n"
    },
    {
        "id": "81c516291ab19acd",
        "type": "json",
        "z": "b7861ce703215a01",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 40,
        "wires": [
            [
                "d0fbcd200cd09981"
            ]
        ]
    },
    {
        "id": "d0fbcd200cd09981",
        "type": "change",
        "z": "b7861ce703215a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hardware_conf",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "730b2780ac215a52",
        "type": "file in",
        "z": "63c85b96537b7355",
        "name": "",
        "filename": "/home/pi/PlanktoScope/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "e0b7238a0c5d4ed0"
            ]
        ],
        "info": "# PlanktoScope Help\nThis Node will read the content of the file named **config.txt** containing all the input placeholders.\n"
    },
    {
        "id": "e0b7238a0c5d4ed0",
        "type": "json",
        "z": "63c85b96537b7355",
        "name": "config.json",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 60,
        "wires": [
            [
                "f1c0a882a9e3d927"
            ]
        ]
    },
    {
        "id": "b8109badf5f39d35",
        "type": "file",
        "z": "63c85b96537b7355",
        "name": "",
        "filename": "/home/pi/PlanktoScope/config.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "31ae9b857627673c",
        "type": "json",
        "z": "63c85b96537b7355",
        "name": "config.json",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "b8109badf5f39d35"
            ]
        ]
    },
    {
        "id": "f1c0a882a9e3d927",
        "type": "function",
        "z": "63c85b96537b7355",
        "name": "Global Set",
        "func": "global.set(\"config_keys\", Object.keys(msg.payload));\n\nfor (const key in msg.payload) {\n    global.set(key, msg.payload[key]);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "24ea99bb02eeffa2",
        "type": "inject",
        "z": "63c85b96537b7355",
        "name": "Load config",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "730b2780ac215a52"
            ]
        ]
    },
    {
        "id": "5248e5e225d854d1",
        "type": "function",
        "z": "63c85b96537b7355",
        "name": "get config payload",
        "func": "keys = global.get(\"config_keys\")\n\nvar payload = {}\n\nkeys.forEach(function(item, index, array) {\n  payload[item] = global.get(item);\n})\n\nreturn {\"payload\": payload};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [
                "31ae9b857627673c"
            ]
        ]
    },
    {
        "id": "97f8a94e71055782",
        "type": "ui_ui_control",
        "z": "63c85b96537b7355",
        "name": "Connect Event",
        "events": "connect",
        "x": 220,
        "y": 100,
        "wires": [
            [
                "730b2780ac215a52"
            ]
        ]
    },
    {
        "id": "39c370d8a50f3acc",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "713fd4c3b9030f45",
        "page": "",
        "ui": "",
        "name": "body",
        "order": 1,
        "width": "12",
        "height": "8",
        "head": "",
        "format": "<template>\n    <v-container>\n      <v-row>\n        <!-- First Row: Larger cards with icon centered above title -->\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"preview\"\n            class=\"text-center py-2\"\n            variant=\"flat\"\n          >\n            <v-icon size=\"64\" color=\"primary\">mdi-eye</v-icon>\n            <v-card-title class=\"text-h6\">Launch the Preview</v-card-title>\n            <v-card-text>Access a real-time, high-resolution preview to inspect the contents of your current water sample.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"metadata\"\n            class=\"text-center py-2\"\n            variant=\"outlined\"\n          >\n            <v-icon size=\"64\" color=\"primary\">mdi-play-circle</v-icon>\n            <v-card-title class=\"text-h6\">Start Acquisition</v-card-title>\n            <v-card-text>Start a new acquisition process to continuously collect images and metadata from your PlanktoScope.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"visualization\"\n            target=\"_blank\"\n            class=\"text-center py-2\"\n            variant=\"outlined\"\n          >\n            <v-icon size=\"64\" color=\"primary\">mdi-database-search</v-icon>\n            <v-card-title class=\"text-h6\">Explore Your Data</v-card-title>\n            <v-card-text>Open the data explorer to review, categorize, and interpret all previously captured sample information.</v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- Second Row: Standard size cards -->\n      <v-row>\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"/ps/docs/operation/protocol-v4.pdf\"\n            target=\"_blank\"\n            variant=\"outlined\"\n          >\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-book-open-variant</v-icon>\n              Learn the Basics\n            </v-card-title>\n            <v-card-text>Find detailed instructions on using your PlanktoScope.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"http://pkscope-rich-kettle-10463.local/admin/grafana/d/host-summary/host-summary?orgId=1&from=now-5m&to=now&timezone=browser&var-DS_PROMETHEUS=PBFA97CFB590B2093&var-job=node-exporter&var-node=host.docker.internal:9100&var-diskdevices=%5Ba-z%5D%2B%7Cnvme%5B0-9%5D%2Bn%5B0-9%5D%2B%7Cmmcblk%5B0-9%5D%2B&refresh=5s\"\n            target=\"_blank\"\n            variant=\"outlined\"\n          >\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-speedometer</v-icon>\n              Monitoring\n            </v-card-title>\n            <v-card-text>Keep track of system status and performance metrics.</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <v-card\n            href=\"calibration\"\n            variant=\"outlined\"\n          >\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-tune</v-icon>\n              Calibration\n            </v-card-title>\n            <v-card-text>Adjust and verify settings for consistent results.</v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- Third Row: Standard size cards -->\n      <v-row>\n        <v-col :cols=\"12\" :md=\"msg.payload.machine_info.serial_number ? 3 : 4\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-cube-outline</v-icon>\n              Model of your machine\n            </v-card-title>\n            <v-card-text>{{ msg.payload.machine_info.hardware_version }}</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"3\" v-if=\"msg.payload.machine_info.serial_number\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-barcode-scan</v-icon>\n              Serial number\n            </v-card-title>\n            <v-card-text>{{ msg.payload.machine_info.serial_number }}</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col :cols=\"12\" :md=\"msg.payload.machine_info.serial_number ? 3 : 4\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-label-outline</v-icon>\n              Name of your machine\n            </v-card-title>\n            <v-card-text>{{ msg.payload.machine_info.machine_name }}</v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col :cols=\"12\" :md=\"msg.payload.machine_info.serial_number ? 3 : 4\">\n          <v-card variant=\"tonal\">\n            <v-card-title>\n              <v-icon class=\"mr-2\" color=\"primary\">mdi-code-tags</v-icon>\n              Software version\n            </v-card-title>\n            <v-card-text>{{ msg.payload.machine_info.software_version }}</v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n    </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1cf1b20e425ec126",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "",
        "page": "",
        "ui": "e6ae26617c24c3ea",
        "name": "footer",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-footer class=\"pa-0\" color=\"grey-darken-4\">\n    <v-container>\n      <v-row justify=\"space-between\">\n        <!-- Branding Section -->\n        <v-col cols=\"12\" md=\"12\" class=\"text-center text-md-start\">\n          <h4 class=\"text-white\">PlanktoScope</h4>\n          <p class=\"text-grey-lighten-1\">\n            Open and Affordable Quantitative Imaging Platform.\n          </p>\n        </v-col>\n      </v-row>\n      <v-divider class=\"my-3\"></v-divider>\n      <v-row justify=\"space-between\">\n        <!-- Branding Section -->\n        <v-col cols=\"12\" md=\"12\" class=\"text-center text-md-start\">\n          <h4 class=\"text-white\">Thanks to:</h4>\n          <p class=\"text-grey-lighten-1\">\n            <v-chip\n              v-for=\"contributor in contributors\"\n              :key=\"contributor.id\"\n              class=\"mx-2\"\n              small\n              outlined\n            >\n              <v-avatar left>\n                <img :src=\"contributor.avatar_url\" :alt=\"contributor.login\" />\n              </v-avatar>\n              <a\n                :href=\"contributor.html_url\"\n                target=\"_blank\"\n                class=\"text-decoration-none text-grey-lighten-1\"\n              >\n                {{ contributor.login }}\n              </a>\n            </v-chip>\n          </p>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-footer>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        contributors: [], // Array to hold contributors' data\n      }\n    },\n    mounted() {\n      this.fetchContributors()\n    },\n    methods: {\n      async fetchContributors() {\n        try {\n          const response = await fetch(\n            'https://api.github.com/orgs/PlanktoScope/people'\n          )\n          if (response.ok) {\n            this.contributors = await response.json()\n          } else {\n            console.error('Failed to fetch contributors')\n          }\n        } catch (error) {\n          console.error('Error fetching contributors:', error)\n        }\n      },\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:ui",
        "className": "",
        "x": 390,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "cd5cd3a0277b8dba",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "5d39a98563150f22",
        "page": "",
        "ui": "",
        "name": "header",
        "order": 1,
        "width": "12",
        "height": "6",
        "head": "",
        "format": "<template>\n  <v-empty-state\n    headline=\"Welcome on the PlanktoScope GUI,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n  </v-empty-state>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f9058a8a58084207",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "cf3554d2bdb02f22",
        "page": "",
        "ui": "",
        "name": "links",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <v-row justify=\"center\" class=\"my-2\">\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://www.figma.com/design/KXH3qkalr7eeFbyGsutZKt/PlanktoScope-Dashboard-v2?node-id=6-2&m=dev&t=Nn2N1o9OJveQCSco-1\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"primary\" class=\"mr-1\">mdi-image</v-icon>Figma Design\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues/new?template=bug_report.md\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"red\" class=\"mr-1\">mdi-bug</v-icon>Report a Bug\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"orange\" class=\"mr-1\">mdi-information-outline</v-icon>Open\n        issues\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"black\" class=\"mr-1\">mdi-github</v-icon>View on GitHub\n      </v-chip>\n    </v-row>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "67b871e8f9c64c2b",
        "type": "switch",
        "z": "1b667c6443413ced",
        "name": "msg.payload.page.path === \"/home\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/home",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 40,
        "wires": [
            [
                "abe86c4e9dedb557"
            ]
        ]
    },
    {
        "id": "e74e4d04e4a79458",
        "type": "switch",
        "z": "1b667c6443413ced",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "67b871e8f9c64c2b"
            ]
        ]
    },
    {
        "id": "7c16cbd0b2c40ea4",
        "type": "ui-event",
        "z": "1b667c6443413ced",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "e74e4d04e4a79458"
            ]
        ]
    },
    {
        "id": "5d4e95854b504124",
        "type": "ui-template",
        "z": "1b667c6443413ced",
        "group": "",
        "page": "",
        "ui": "e6ae26617c24c3ea",
        "name": "CSS (All Pages)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "  .v-btn--variant-outlined.v-btn--active {\n    background-color: #1976d2 !important;\n    color: white !important;\n  }\n\n\n.v-row+.v-row {\n    margin-top: 0px !important;\n}\n\n.v-row {\n    margin: 0px !important;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 1300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "abe86c4e9dedb557",
        "type": "get machine info",
        "z": "1b667c6443413ced",
        "name": "",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "39c370d8a50f3acc"
            ]
        ]
    },
    {
        "id": "a57a165cd0ce511b",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "58ab4d5e3dd68192",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "7",
        "height": "18",
        "head": "",
        "format": "  <iframe \n    src=\"http://pkscope-rich-kettle-10463/preview\" \n    title=\"Page Node-RED\"\n    allowfullscreen>\n  </iframe>\n  <style>\n    iframe {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      border:none;\n      background:red;\n    }\n  </style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1310,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c8de0186a0a927e8",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "Get Global Variables",
        "func": "const keys = global.keys(); // Get all global variable keys\nmsg.payload = {}; // Initialize the payload object\n\nkeys.forEach(key => {\n    // Ignore keys that start with \"$\"\n    if (!key.startsWith('$')) {\n        msg.payload[key] = global.get(key);\n    }\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 140,
        "wires": [
            [
                "f514a138d38d3c61"
            ]
        ]
    },
    {
        "id": "927b92eee9edfcbe",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "7572915171e440cd",
        "page": "",
        "ui": "",
        "name": "Navigation Top",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Home -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"home\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Home\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Metadata -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"metadata\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Metadata\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8d5eadf60a2fd54b",
        "type": "switch",
        "z": "ab58b3fd0e6bcd77",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "6074fc31218f9a74"
            ]
        ]
    },
    {
        "id": "da4fbaab826b0d62",
        "type": "ui-event",
        "z": "ab58b3fd0e6bcd77",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "8d5eadf60a2fd54b"
            ]
        ]
    },
    {
        "id": "6074fc31218f9a74",
        "type": "switch",
        "z": "ab58b3fd0e6bcd77",
        "name": "msg.payload.page.path === \"/preview\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/preview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 40,
        "wires": [
            [
                "c8de0186a0a927e8"
            ]
        ]
    },
    {
        "id": "6d0408bb7ca6e5f3",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "set pump settings",
        "func": "if (msg.topic) {\n    global.set(\"pump_flowrate\", msg.payload.pump_flowrate);\n    global.set(\"pump_manual_volume\", msg.payload.pump_manual_volume);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4a208e0233bea4ae",
        "type": "function",
        "z": "ab58b3fd0e6bcd77",
        "name": "set focus settings",
        "func": "if (msg.topic) {\n    global.set(\"focus_distance\", msg.payload.focus_distance);\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ea8e81951587e46d",
        "type": "mqtt out",
        "z": "ab58b3fd0e6bcd77",
        "name": "MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "4112a93b1b129756",
        "type": "switch",
        "z": "ab58b3fd0e6bcd77",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "set_global/pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "actuator/pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "set_global/focus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "actuator/focus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "light",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 550,
        "y": 160,
        "wires": [
            [
                "6d0408bb7ca6e5f3"
            ],
            [
                "ea8e81951587e46d"
            ],
            [
                "4a208e0233bea4ae"
            ],
            [
                "ea8e81951587e46d"
            ],
            [
                "ea8e81951587e46d"
            ]
        ]
    },
    {
        "id": "f514a138d38d3c61",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "39cbd2658f16d608",
        "page": "",
        "ui": "",
        "name": "Settings",
        "order": 1,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template>\n  <v-container fluid>\n    <!-- PUMP CONTROL -->\n    <v-card class=\"mb-6\" variant=\"outlined\">\n      <v-card-title>\n        <v-icon class=\"mr-2\" color=\"primary\" size=\"large\">mdi-pump</v-icon>\n        Pump Control\n      </v-card-title>\n      <v-card-text>\n        <!-- Flowrate -->\n        <v-row align=\"center\">\n          <v-col :cols=\"isTablet ? 4 : 8\">\n            <v-slider\n              v-model.number=\"pump_flowrate\"\n              :min=\"minFlow\"\n              :max=\"maxFlow\"\n              :step=\"0.2\"\n              hide-details\n              :thumb-size=\"isTablet ? 12 : 20\"\n              :track-size=\"isTablet ? 2 : 4\"\n            />\n          </v-col>\n          <v-col :cols=\"isTablet ? 8 : 4\">\n            <v-text-field\n              v-model.number=\"pump_flowrate\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n              suffix=\"ml/min\"\n              :density=\"isTablet ? 'comfortable' : 'default'\"\n              :style=\"isTablet ? 'font-size: 1.3rem; width: 100%;' : ''\"\n              append-icon=\"mdi-information\"\n              @click:append=\"showInfo('pump_flowrate')\"\n            />\n          </v-col>\n        </v-row>\n\n        <!-- Flowrate presets -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-btn-toggle\n              v-model=\"pump_flowrate_preset\"\n              class=\"d-flex justify-space-between\"\n              color=\"primary\"\n              variant=\"outlined\"\n              divided\n              shaped\n              mandatory\n              @update:model-value=\"onFlowrateToggle\"\n            >\n              <v-btn\n                v-for=\"value in pump_flowrate_presets\"\n                :key=\"'flowrate-' + value\"\n                :value=\"value\"\n                class=\"flex-grow-1\"\n              >\n                {{ value }}\n              </v-btn>\n            </v-btn-toggle>\n          </v-col>\n        </v-row>\n\n        <!-- Volume -->\n        <v-row align=\"center\">\n          <v-col :cols=\"isTablet ? 4 : 8\">\n            <v-slider\n              v-model.number=\"pump_manual_volume\"\n              :min=\"minFlow\"\n              :max=\"maxFlow\"\n              :step=\"0.2\"\n              hide-details\n              :thumb-size=\"isTablet ? 12 : 20\"\n              :track-size=\"isTablet ? 2 : 4\"\n            />\n          </v-col>\n          <v-col :cols=\"isTablet ? 8 : 4\">\n            <v-text-field\n              v-model.number=\"pump_manual_volume\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n              suffix=\"ml\"\n              :density=\"isTablet ? 'comfortable' : 'default'\"\n              :style=\"isTablet ? 'font-size: 1.3rem; width: 100%;' : ''\"\n              append-icon=\"mdi-information\"\n              @click:append=\"showInfo('pump_manual_volume')\"\n            />\n          </v-col>\n        </v-row>\n\n        <!-- Volume presets -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-btn-toggle\n              v-model=\"pump_volume_preset\"\n              class=\"d-flex justify-space-between\"\n              variant=\"outlined\"\n              color=\"primary\"\n              divided\n              shaped\n              mandatory\n              @update:model-value=\"onVolumeToggle\"\n            >\n              <v-btn\n                v-for=\"value in pump_volume_presets\"\n                :key=\"'volume-' + value\"\n                :value=\"value\"\n                class=\"flex-grow-1\"\n              >\n                {{ value }}\n              </v-btn>\n            </v-btn-toggle>\n          </v-col>\n        </v-row>\n\n        <!-- Pump direction -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-btn-toggle\n              variant=\"outlined\"\n              v-model=\"pump_direction\"\n              color=\"primary\"\n              mandatory\n              divided\n              shaped\n              class=\"d-flex justify-space-between\"\n              @update:model-value=\"on_pump_direction_change\"\n            >\n              <v-btn class=\"flex-grow-1\" :value=\"'backward'\">Backward</v-btn>\n              <v-btn class=\"flex-grow-1\" :value=\"'stop'\">Stop</v-btn>\n              <v-btn class=\"flex-grow-1\" :value=\"'forward'\">Forward</v-btn>\n            </v-btn-toggle>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n\n    <!-- FOCUS CONTROL -->\n    <v-card class=\"mb-6\" variant=\"outlined\">\n      <v-card-title>\n        <v-icon class=\"mr-2\" color=\"primary\" size=\"large\">mdi-camera-control</v-icon>\n        Focus Control\n      </v-card-title>\n      <v-card-text>\n        <!-- Focus slider -->\n        <v-row align=\"center\">\n          <v-col :cols=\"isTablet ? 4 : 8\">\n            <v-slider\n              v-model.number=\"focus_distance\"\n              :max=\"maxFocus\"\n              :min=\"minFocus\"\n              :step=\"25\"\n              hide-details\n              :thumb-size=\"isTablet ? 12 : 20\"\n              :track-size=\"isTablet ? 2 : 4\"\n            />\n          </v-col>\n          <v-col :cols=\"isTablet ? 8 : 4\">\n            <v-text-field\n              v-model.number=\"focus_distance\"\n              type=\"number\"\n              variant=\"outlined\"\n              hide-details\n              suffix=\"μm\"\n              :density=\"isTablet ? 'comfortable' : 'default'\"\n              :style=\"isTablet ? 'font-size: 1.3rem; width: 100%;' : ''\"\n              append-icon=\"mdi-information\"\n              @click:append=\"showInfo('focus_speed')\"\n            />\n          </v-col>\n        </v-row>\n\n        <!-- Presets -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-btn-toggle\n              variant=\"outlined\"\n              v-model=\"focus_distance_preset\"\n              divided\n              shaped\n              color=\"primary\"\n              class=\"d-flex justify-space-between\"\n              mandatory\n              @update:model-value=\"on_focus_distance_toggle\"\n            >\n              <v-btn\n                v-for=\"value in focus_distance_presets\"\n                :key=\"'distance-' + value\"\n                :value=\"value\"\n                class=\"flex-grow-1\"\n              >\n                {{ value }}\n              </v-btn>\n            </v-btn-toggle>\n          </v-col>\n        </v-row>\n\n        <!-- Focus direction -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-btn-toggle\n              variant=\"outlined\"\n              v-model=\"focus_direction\"\n              color=\"primary\"\n              mandatory\n              divided\n              shaped\n              class=\"d-flex justify-space-between\"\n              @update:model-value=\"on_focus_direction_change\"\n            >\n              <v-btn class=\"flex-grow-1\" :value=\"'UP'\">UP</v-btn>\n              <v-btn class=\"flex-grow-1\" :value=\"'stop'\">Stop</v-btn>\n              <v-btn class=\"flex-grow-1\" :value=\"'DOWN'\">DOWN</v-btn>\n            </v-btn-toggle>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n\n    <!-- LED CONTROL -->\n    <v-card class=\"mb-6\" variant=\"outlined\">\n      <v-card-title>\n        <v-icon class=\"mr-2\" color=\"primary\" size=\"large\">mdi-lightbulb</v-icon>\n        LED Control\n      </v-card-title>\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\">\n            <v-btn-toggle\n              variant=\"outlined\"\n              v-model=\"led_state\"\n              color=\"primary\"\n              mandatory\n              divided\n              shaped\n              class=\"d-flex justify-space-between\"\n              @update:model-value=\"on_led_toggle\"\n            >\n              <v-btn class=\"flex-grow-1\" :value=\"'off'\">Off</v-btn>\n              <v-btn class=\"flex-grow-1\" :value=\"'on'\">On</v-btn>\n            </v-btn-toggle>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n    \n<!-- CALIBRATION INFO -->\n<v-card variant=\"tonal\">\n  <v-card-title>\n    <v-icon class=\"mr-2\" color=\"primary\" size=\"large\">mdi-tune</v-icon>\n    Calibration\n  </v-card-title>\n  <v-card-text>\n    Modify your camera settings through the\n    <a href=\"calibration\" style=\"color: primary; text-decoration: underline;\">\n      calibration page\n    </a>.\n    Adjust optical parameters to ensure accurate imaging.\n  </v-card-text>\n</v-card>\n\n\n\n\n    <!-- INFO DIALOG -->\n    <v-dialog v-model=\"infoDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h6\">{{ infoContent.title }}</v-card-title>\n        <v-card-text>\n          <p><strong>Unit:</strong> {{ infoContent.unit }}</p>\n          <p><strong>Description:</strong> {{ infoContent.description }}</p>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"infoDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: { msg: { type: Object, default: () => ({}) } },\n  data() {\n    return {\n      minFlow: 0.02,\n      maxFlow: 30,\n      pump_flowrate: 0,\n      pump_manual_volume: 0,\n      pump_flowrate_presets: [0.02, 0.2, 2, 20],\n      pump_volume_presets: [0.004, 0.2, 2, 20],\n      pump_flowrate_preset: null,\n      pump_volume_preset: null,\n      pump_direction: \"stop\",\n      minFocus: 25,\n      maxFocus: 5000,\n      focus_distance: 25,\n      focus_distance_presets: [25, 150, 500, 5000],\n      focus_distance_preset: null,\n      focus_direction: \"stop\",\n      led_state: \"off\",\n      infoDialog: false,\n      infoContent: { title: \"\", unit: \"\", description: \"\" },\n    };\n  },\n  computed: {\n    isTablet() {\n      return this.$vuetify.display.mdAndDown;\n    },\n  },\n  created() {\n    this.hydrateFromMsg(this.msg);\n  },\n  watch: {\n    msg: { handler(newMsg) { this.hydrateFromMsg(newMsg); }, deep: true },\n    pump_flowrate(newVal) {\n      this.pump_flowrate_preset =\n        this.pump_flowrate_presets.find((val) => val === newVal) ?? null;\n      this.sendPumpParams();\n    },\n    pump_manual_volume(newVal) {\n      this.pump_volume_preset =\n        this.pump_volume_presets.find((val) => val === newVal) ?? null;\n      this.sendPumpParams();\n    },\n    focus_distance(newVal) {\n      this.focus_distance_preset =\n        this.focus_distance_presets.find((val) => val === newVal) ?? null;\n      this.sendFocusParams();\n    },\n  },\n  methods: {\n    hydrateFromMsg(m) {\n      const p = m?.payload ?? {};\n\n      // ✅ Handle status messages FIRST so toggle reverts correctly\n      if (m.topic === \"status/pump\" && p.status === \"Done\") {\n        this.pump_direction = \"stop\";\n        return;\n      }\n      if (m.topic === \"status/focus\" && p.status === \"Done\") {\n        this.focus_direction = \"stop\";\n        return;\n      }\n\n      // 🔸 Regular actuator/global messages\n      this.pump_flowrate = p.flowrate ?? p.pump_flowrate ?? this.pump_flowrate;\n      this.pump_manual_volume = p.volume ?? p.pump_manual_volume ?? this.pump_manual_volume;\n\n      if ([\"backward\", \"stop\", \"forward\"].includes(p.command)) {\n        this.pump_direction = p.command;\n      }\n\n      this.focus_distance =\n        typeof p.focus_distance === \"number\" ? p.focus_distance : this.focus_distance;\n\n      if ([\"UP\", \"stop\", \"DOWN\"].includes(p.command)) {\n        this.focus_direction = p.command;\n      }\n\n      if (typeof p.ledState === \"string\") this.led_state = p.ledState;\n      else if (typeof p.action === \"string\" && [\"on\", \"off\"].includes(p.action))\n        this.led_state = p.action;\n    },\n    onFlowrateToggle(val) { if (val != null) this.pump_flowrate = val; },\n    onVolumeToggle(val) { if (val != null) this.pump_manual_volume = val; },\n    sendPumpParams() {\n      this.send({\n        topic: \"set_global/pump\",\n        payload: {\n          pump_flowrate: Number(this.pump_flowrate) || 0,\n          pump_manual_volume: Number(this.pump_manual_volume) || 0,\n        },\n      });\n    },\n    on_pump_direction_change(val) {\n      this.pump_direction = val;\n      if (val === \"stop\") {\n        this.send({ topic: \"actuator/pump\", payload: { action: \"stop\" } });\n      } else {\n        const dirUpper = val === \"forward\" ? \"FORWARD\" : \"BACKWARD\";\n        this.send({\n          topic: \"actuator/pump\",\n          payload: {\n            action: \"move\",\n            direction: dirUpper,\n            volume: Number(this.pump_manual_volume) || 0,\n            flowrate: Number(this.pump_flowrate) || 0,\n          },\n        });\n      }\n    },\n    on_focus_distance_toggle(val) { if (val != null) this.focus_distance = val; },\n    speedFromDistance(d) {\n      const x1 = 100, y1 = 1000, x2 = 1000, y2 = 2000, x3 = 5000, y3 = 5000;\n      if (d <= x1) return y1;\n      if (d >= x3) return y3;\n      if (d <= x2) {\n        const m = (y2 - y1) / (x2 - x1);\n        return Math.round(y1 + m * (d - x1));\n      }\n      const m = (y3 - y2) / (x3 - x2);\n      return Math.round(y2 + m * (d - x2));\n    },\n    sendFocusParams() {\n      const d = Number(this.focus_distance) || 25;\n      const speed = this.speedFromDistance(d);\n      this.send({\n        topic: \"set_global/focus\",\n        payload: { focus_distance: d, focus_speed: speed },\n      });\n    },\n    on_focus_direction_change(val) {\n      this.focus_direction = val;\n      if (val === \"stop\") {\n        this.send({ topic: \"actuator/focus\", payload: { action: \"stop\" } });\n      } else {\n        const d = Number(this.focus_distance) || 25;\n        const speed = this.speedFromDistance(d);\n        this.send({\n          topic: \"actuator/focus\",\n          payload: {\n            action: \"move\",\n            direction: val,\n            distance: d / 1000,\n            speed: speed / 1000,\n          },\n        });\n      }\n    },\n    on_led_toggle(val) {\n      if (!val) return;\n      this.led_state = val;\n      this.send({ topic: \"light\", payload: { action: val } });\n    },\n    showInfo(type) {\n      const infoMap = {\n        pump_flowrate: {\n          title: \"Flowrate (ml/min)\",\n          unit: \"ml/min\",\n          description: \"Flowrate of the pump during manual exploration\",\n        },\n        pump_manual_volume: {\n          title: \"Volume to pass (ml)\",\n          unit: \"ml\",\n          description: \"Volume displaced by the pump during manual exploration\",\n        },\n        focus_speed: {\n          title: \"Focus Speed (µm/sec)\",\n          unit: \"μm/s\",\n          description: \"Speed of the displacement by the focus plate during manual exploration\",\n        },\n      };\n      this.infoContent = infoMap[type] || {};\n      this.infoDialog = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n@media (max-width: 1024px) {\n  .v-text-field input {\n    font-size: 1.3rem !important;\n  }\n  .v-slider {\n    height: 2px !important;\n  }\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "4112a93b1b129756"
            ]
        ]
    },
    {
        "id": "cf663463da2a47a1",
        "type": "mqtt in",
        "z": "ab58b3fd0e6bcd77",
        "name": "",
        "topic": "status/pump",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 200,
        "wires": [
            [
                "f514a138d38d3c61"
            ]
        ]
    },
    {
        "id": "1b2c14f14bbf80c2",
        "type": "mqtt in",
        "z": "ab58b3fd0e6bcd77",
        "name": "",
        "topic": "status/focus",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "f514a138d38d3c61"
            ]
        ]
    },
    {
        "id": "44438204d4b0d21e",
        "type": "mqtt in",
        "z": "ab58b3fd0e6bcd77",
        "name": "",
        "topic": "status/light",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 320,
        "wires": [
            [
                "f514a138d38d3c61"
            ]
        ]
    },
    {
        "id": "2321977c636b9849",
        "type": "ui-template",
        "z": "ab58b3fd0e6bcd77",
        "group": "55c2fe64e681037d",
        "page": "",
        "ui": "",
        "name": "Navigation Bottom",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Home -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"home\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Home\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Metadata -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"metadata\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Metadata\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1290,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "349d0f7644f26a62",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "dd015fda7456b9b0",
        "page": "",
        "ui": "",
        "name": "Navigation Top",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"preview\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Preview\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"acquisition\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Acquisition\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "279f3ddada9cadaa",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "69c772603e9cec0d",
        "page": "",
        "ui": "",
        "name": "Sample Information",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <!-- Project Metadata Inputs -->\n  <v-row class=\"mt-2\">\n    <!-- Project Name -->\n    <v-col cols=\"12\" md=\"4\">\n      <v-text-field\n        v-model=\"sample_project\"\n        label=\"Name of the project\"\n        placeholder=\"ex : Tara Pacifique\"\n        variant=\"outlined\"\n        hint=\"Enter the research project or expedition name this sample is part of.\"\n        @input=\"sendUpdate\"\n      >\n        <template #append>\n          <v-icon\n            class=\"cursor-pointer\"\n            @click=\"openHint(\n              'Name of the project',\n              'Enter the research project or expedition name this sample is part of.'\n            )\"\n          >\n            mdi-information\n          </v-icon>\n        </template>\n      </v-text-field>\n    </v-col>\n\n    <!-- Sample ID -->\n    <v-col cols=\"12\" md=\"4\">\n      <v-text-field\n        v-model=\"sample_id\"\n        label=\"Sample ID\"\n        placeholder=\"ex : S001\"\n        variant=\"outlined\"\n        hint=\"Provide a unique identifier for this sample (e.g., S001).\"\n        @input=\"sendUpdate\"\n      >\n        <template #append>\n          <v-icon\n            class=\"cursor-pointer\"\n            @click=\"openHint(\n              'Sample ID',\n              'Provide a unique identifier for this sample (e.g., S001).'\n            )\"\n          >\n            mdi-information\n          </v-icon>\n        </template>\n      </v-text-field>\n    </v-col>\n\n    <!-- Operator Name -->\n    <v-col cols=\"12\" md=\"4\">\n      <v-text-field\n        v-model=\"sample_operator_name\"\n        label=\"Operator name\"\n        placeholder=\"ex : Manu Prakash\"\n        variant=\"outlined\"\n        hint=\"Name of the person who collected the sample.\"\n        @input=\"sendUpdate\"\n      >\n        <template #append>\n          <v-icon\n            class=\"cursor-pointer\"\n            @click=\"openHint(\n              'Operator name',\n              'Name of the person who collected the sample.'\n            )\"\n          >\n            mdi-information\n          </v-icon>\n        </template>\n      </v-text-field>\n    </v-col>\n  </v-row>\n\n  <!-- Sampling Gear Selector -->\n  <v-row class=\"mt-4\">\n    <v-col cols=\"12\">\n      <div class=\"d-flex align-center mb-2\">\n        <label class=\"text-subtitle-2 font-weight-medium me-2\">\n          Sampling Gear\n        </label>\n        <v-icon\n          class=\"cursor-pointer\"\n          color=\"#666666\"\n          @click=\"openHint(\n            'Sampling Gear',\n            'The type of gear used to collect the sample. This field describes the specific equipment used during the sampling process and provides context about the sampling method and conditions.'\n          )\"\n        >\n          mdi-information\n        </v-icon>\n      </div>\n\n      <div style=\"overflow-x: auto;\">\n        <v-btn-toggle\n          v-model=\"sample_gear\"\n          variant=\"outlined\"\n          mandatory\n          divided\n          shaped\n          class=\"d-flex\"\n          style=\"min-width: max-content; min-height: 100px\"\n          @update:model-value=\"sendUpdate\"\n        >\n          <v-btn value=\"Horizontal Net\" prepend-icon=\"mdi-arrow-right-bold\" stacked>\n            Horizontal Net\n          </v-btn>\n          <v-btn value=\"Vertical Net\" prepend-icon=\"mdi-arrow-up-bold\" stacked>\n            Vertical Net\n          </v-btn>\n          <v-btn value=\"Niskin bottle\" prepend-icon=\"mdi-bottle-tonic\" stacked>\n            Niskin bottle\n          </v-btn>\n          <v-btn value=\"Lab culture\" prepend-icon=\"mdi-flask-outline\" stacked>\n            Lab culture\n          </v-btn>\n          <v-btn value=\"Demo / Test\" prepend-icon=\"mdi-beaker-outline\" stacked>\n            Demo / Test\n          </v-btn>\n        </v-btn-toggle>\n      </div>\n\n      <div class=\"text-caption text-medium-emphasis mt-1\">\n        The type of gear used to collect the sample. This field describes the specific equipment used during the sampling process and provides context about the sampling method and conditions.\n      </div>\n    </v-col>\n  </v-row>\n\n  <!-- Hint Popup -->\n  <v-dialog v-model=\"hintDialog\" max-width=\"400\">\n    <v-card>\n      <v-card-title class=\"text-h6\">{{ hintTitle }}</v-card-title>\n      <v-card-text>{{ hintText }}</v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn text color=\"primary\" @click=\"hintDialog = false\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: [\"msg\"],\n  data() {\n    return {\n      sample_project: \"\",\n      sample_id: \"\",\n      sample_operator_name: \"\",\n      sample_gear: null,\n      hintDialog: false,\n      hintTitle: \"\",\n      hintText: \"\",\n      topic: \"sample_project_meta\", // single topic\n    };\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        const p = newMsg?.payload || {};\n        if (p.sample_project !== undefined) this.sample_project = p.sample_project;\n        if (p.sample_id !== undefined) this.sample_id = p.sample_id;\n        if (p.sample_operator_name !== undefined)\n          this.sample_operator_name = p.sample_operator_name;\n        if (p.sample_gear !== undefined) this.sample_gear = p.sample_gear;\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    /**\n     * Send grouped payload for all fields under one topic.\n     */\n    sendUpdate(extra = {}) {\n      this.send({\n        topic: this.topic,\n        payload: {\n          sample_project: this.sample_project || \"\",\n          sample_id: this.sample_id || \"\",\n          sample_operator_name: this.sample_operator_name || \"\",\n          sample_gear: this.sample_gear || \"\",\n          ...extra,\n        },\n      });\n    },\n\n    openHint(title, text) {\n      this.hintTitle = title;\n      this.hintText = text;\n      this.hintDialog = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cursor-pointer {\n  cursor: pointer;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "13f96cf49ae6d6a6"
            ]
        ]
    },
    {
        "id": "96550b272e3da513",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "6fab47af451c6d95",
        "page": "",
        "ui": "",
        "name": "Starting point",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container class=\"pa-4\">\n    <!-- Date & Time -->\n    <v-row>\n      <v-col cols=\"12\"><strong>Date and Time</strong></v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          v-model=\"object_date\"\n          label=\"Date (UTC)\"\n          variant=\"outlined\"\n          type=\"date\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          :style=\"isTablet ? 'font-size:1.2rem;width:100%;' : ''\"\n          @input=\"sendUpdate('object_datetime')\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          v-model=\"object_time\"\n          label=\"Time (UTC)\"\n          variant=\"outlined\"\n          type=\"time\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          :style=\"isTablet ? 'font-size:1.2rem;width:100%;' : ''\"\n          @input=\"sendUpdate('object_datetime')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('datetime')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- LATITUDE SECTION -->\n    <v-row>\n      <v-col cols=\"12\"><strong>Latitude</strong></v-col>\n    </v-row>\n    <v-row class=\"mt-4\" align=\"start\">\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"latitude_D\"\n          label=\"°\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"90\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"syncDecimal\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"latitude_M\"\n          label=\"′\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"syncDecimal\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-text-field\n          v-model=\"latitude_S\"\n          label=\"″\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          step=\"0.001\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"syncDecimal\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-select\n          v-model=\"latDir\"\n          :items=\"['N','S']\"\n          label=\"Dir\"\n          variant=\"outlined\"\n          hide-details\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @update:model-value=\"syncDecimal\"\n        />\n      </v-col>\n\n      <!-- Latitude Decimal -->\n      <v-col cols=\"12\" lg=\"6\">\n        <v-text-field\n          v-model.number=\"object_lat\"\n          label=\"Latitude (decimal)\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"-90\"\n          max=\"90\"\n          step=\"0.000001\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          :style=\"isTablet ? 'font-size:1.2rem;width:100%;' : ''\"\n          @input=\"updateFromDecimal('lat')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('latitude')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- LONGITUDE SECTION -->\n    <v-row>\n      <v-col cols=\"12\"><strong>Longitude</strong></v-col>\n    </v-row>\n    <v-row class=\"mt-4\" align=\"start\">\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"longitude_D\"\n          label=\"°\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"180\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"syncDecimal\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"longitude_M\"\n          label=\"′\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"syncDecimal\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-text-field\n          v-model=\"longitude_S\"\n          label=\"″\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          step=\"0.001\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"syncDecimal\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-select\n          v-model=\"lonDir\"\n          :items=\"['E','W']\"\n          label=\"Dir\"\n          variant=\"outlined\"\n          hide-details\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @update:model-value=\"syncDecimal\"\n        />\n      </v-col>\n\n      <!-- Longitude Decimal -->\n      <v-col cols=\"12\" lg=\"6\">\n        <v-text-field\n          v-model.number=\"object_lon\"\n          label=\"Longitude (decimal)\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"-180\"\n          max=\"180\"\n          step=\"0.000001\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          :style=\"isTablet ? 'font-size:1.2rem;width:100%;' : ''\"\n          @input=\"updateFromDecimal('lon')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('longitude')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- Canvas Map -->\n    <v-row class=\"mt-6\" style=\"position: relative;\">\n      <v-col cols=\"12\" class=\"text-center\" style=\"position: relative;\">\n        <canvas\n          id=\"mapCanvas\"\n          width=\"800\"\n          height=\"500\"\n          style=\"width:100%;max-width:1200px;border:1px solid #999;border-radius:8px;background:#c5ecff;cursor:grab;\"\n          @wheel.prevent=\"onWheel\"\n        ></canvas>\n\n        <!-- Zoom controls -->\n        <div\n          style=\"position:absolute;bottom:25px;right:18px;display:flex;flex-direction:column;gap:6px;\"\n        >\n          <v-btn icon :size=\"isTablet ? 'large' : 'default'\" @click=\"zoomIn\"><span>+</span></v-btn>\n          <v-btn icon :size=\"isTablet ? 'large' : 'default'\" @click=\"zoomOut\"><span>−</span></v-btn>\n        </div>\n      </v-col>\n    </v-row>\n\n    <!-- MID-INFO POPUP -->\n    <v-dialog v-model=\"hintDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h6\">{{ hintTitle }}</v-card-title>\n        <v-card-text>{{ hintText }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"hintDialog = false\">Got it</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: [\"msg\"],\n  data() {\n    return {\n      object_date: \"\",\n      object_time: \"\",\n      object_lat: 0,\n      object_lon: 0,\n      latitude_D: \"0\",\n      latitude_M: \"0\",\n      latitude_S: \"0\",\n      latDir: \"N\",\n      longitude_D: \"0\",\n      longitude_M: \"0\",\n      longitude_S: \"0\",\n      lonDir: \"E\",\n      ctx: null,\n      mapImage: null,\n      imageLoaded: false,\n      zoom: 1,\n      offsetX: 0,\n      offsetY: 0,\n      sample_gear: \"\", // ajouté\n      hintDialog: false,\n      hintTitle: \"\",\n      hintText: \"\",\n    };\n  },\n  computed: {\n    isTablet() {\n      return this.$vuetify.display.mdAndDown;\n    },\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        const p = newMsg?.payload || {};\n        if (p.sample_gear !== undefined) {\n          this.sample_gear = p.sample_gear;\n\n          // ✅ Si \"Lab culture\" ou \"Demo / Test\", remplir automatiquement date/heure et GPS\n          if ([\"Lab culture\", \"Demo / Test\"].includes(this.sample_gear)) {\n            const now = new Date();\n            this.object_date = now.toISOString().split(\"T\")[0];\n            this.object_time = now.toISOString().split(\"T\")[1].slice(0, 5);\n            this.object_lat = 0;\n            this.object_lon = 0;\n            this.updateFromDecimal(\"lat\");\n            this.updateFromDecimal(\"lon\");\n            this.sendUpdate(\"object_datetime\", {\n              object_lat: 0,\n              object_lon: 0,\n            });\n          }\n        }\n\n        if (p.object_date !== undefined) this.object_date = p.object_date;\n        if (p.object_time !== undefined) this.object_time = p.object_time;\n        if (p.object_lat !== undefined)\n          this.object_lat = parseFloat(p.object_lat.toFixed(6));\n        if (p.object_lon !== undefined)\n          this.object_lon = parseFloat(p.object_lon.toFixed(6));\n        if (p.object_lat !== undefined || p.object_lon !== undefined) {\n          this.updateFromDecimal(\"lat\");\n          this.updateFromDecimal(\"lon\");\n        }\n        this.centerOnMarker();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    const canvas = document.getElementById(\"mapCanvas\");\n    this.ctx = canvas.getContext(\"2d\");\n    this.mapImage = new Image();\n    this.mapImage.src = \"/world-map.svg\";\n    this.mapImage.onload = () => {\n      this.imageLoaded = true;\n      this.centerOnMarker();\n    };\n  },\n  methods: {\n    openHint(type) {\n      if (type === \"datetime\") {\n        this.hintTitle = \"Date and Time (UTC)\";\n        this.hintText =\n          \"Enter the observation timestamp in Coordinated Universal Time (UTC). \" +\n          \"Use YYYY-MM-DD for date and HH:MM (24-hour) for time.\";\n      } else if (type === \"latitude\") {\n        this.hintTitle = \"Latitude\";\n        this.hintText =\n          \"Latitude defines how far north or south you are from the equator.\";\n      } else if (type === \"longitude\") {\n        this.hintTitle = \"Longitude\";\n        this.hintText =\n          \"Longitude defines how far east or west you are from the Prime Meridian.\";\n      }\n      this.hintDialog = true;\n    },\n    sendUpdate(topic, extra = {}) {\n      this.send({\n        topic,\n        payload: {\n          object_date: this.object_date,\n          object_time: this.object_time,\n          ...extra,\n        },\n      });\n    },\n    syncDecimal() {\n      this.object_lon = parseFloat(\n        this.toDecimal(this.longitude_D, this.longitude_M, this.longitude_S, this.lonDir).toFixed(6)\n      );\n      this.object_lat = parseFloat(\n        this.toDecimal(this.latitude_D, this.latitude_M, this.latitude_S, this.latDir).toFixed(6)\n      );\n      this.centerOnMarker();\n      this.sendUpdate(\"object_latlon\", {\n        object_lat: this.object_lat,\n        object_lon: this.object_lon,\n      });\n    },\n    updateFromDecimal(which) {\n      if (which === \"lon\") {\n        this.object_lon = parseFloat(this.object_lon.toFixed(6));\n        const { D, M, S, dir } = this.fromDecimal(this.object_lon, \"lon\");\n        this.longitude_D = D;\n        this.longitude_M = M;\n        this.longitude_S = S;\n        this.lonDir = dir;\n      } else {\n        this.object_lat = parseFloat(this.object_lat.toFixed(6));\n        const { D, M, S, dir } = this.fromDecimal(this.object_lat, \"lat\");\n        this.latitude_D = D;\n        this.latitude_M = M;\n        this.latitude_S = S;\n        this.latDir = dir;\n      }\n      this.centerOnMarker();\n      this.sendUpdate(\"object_latlon\", {\n        object_lat: this.object_lat,\n        object_lon: this.object_lon,\n      });\n    },\n    toDecimal(D, M, S, dir) {\n      const d = parseFloat(D) || 0;\n      const m = parseFloat(M) || 0;\n      const s = parseFloat(S) || 0;\n      let val = d + m / 60 + s / 3600;\n      if (dir === \"S\" || dir === \"W\") val *= -1;\n      return val;\n    },\n    fromDecimal(dec, type) {\n      const dirPositive = type === \"lat\" ? \"N\" : \"E\";\n      const dirNegative = type === \"lat\" ? \"S\" : \"W\";\n      const absVal = Math.abs(dec);\n      const D = Math.floor(absVal);\n      const M = Math.floor((absVal - D) * 60);\n      const S = ((absVal - D - M / 60) * 3600).toFixed(3);\n      const dir = dec >= 0 ? dirPositive : dirNegative;\n      return { D, M, S, dir };\n    },\n    onWheel(e) {\n      if (e.deltaY < 0) this.zoomIn();\n      else this.zoomOut();\n    },\n    zoomIn() {\n      this.zoom = Math.min(this.zoom * 1.25, 10);\n      this.centerOnMarker();\n    },\n    zoomOut() {\n      this.zoom = Math.max(this.zoom / 1.25, 0.5);\n      this.centerOnMarker();\n    },\n    centerOnMarker() {\n      const w = 800;\n      const h = 500;\n      const lat = this.object_lat;\n      const lon = this.object_lon;\n      const x = w / 2 + (lon / 180) * (w / 2);\n      const y = h / 2 - (lat / 90) * (h / 2);\n      this.offsetX = w / 2 - x;\n      this.offsetY = h / 2 - y;\n      this.drawPoint();\n    },\n    drawMap(w, h) {\n      const ctx = this.ctx;\n      ctx.clearRect(0, 0, w, h);\n      ctx.save();\n      ctx.translate(\n        this.offsetX * this.zoom + (w / 2) * (1 - this.zoom),\n        this.offsetY * this.zoom + (h / 2) * (1 - this.zoom)\n      );\n      ctx.scale(this.zoom, this.zoom);\n      if (this.imageLoaded) ctx.drawImage(this.mapImage, 0, 0, w, h);\n      else {\n        ctx.fillStyle = \"#000\";\n        ctx.fillRect(0, 0, w, h);\n      }\n      ctx.restore();\n    },\n    drawPoint() {\n      const w = 800;\n      const h = 500;\n      const ctx = this.ctx;\n      if (!ctx) return;\n      this.drawMap(w, h);\n      const lat = this.object_lat;\n      const lon = this.object_lon;\n      const x = w / 2 + (lon / 180) * (w / 2);\n      const y = h / 2 - (lat / 90) * (h / 2);\n      ctx.save();\n      ctx.translate(\n        this.offsetX * this.zoom + (w / 2) * (1 - this.zoom),\n        this.offsetY * this.zoom + (h / 2) * (1 - this.zoom)\n      );\n      ctx.scale(this.zoom, this.zoom);\n      ctx.fillStyle = \"blue\";\n      ctx.beginPath();\n      ctx.arc(x, y, 6 / this.zoom, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = \"black\";\n      ctx.font = `${13 / this.zoom}px sans-serif`;\n      ctx.fillText(`${lat.toFixed(4)}°, ${lon.toFixed(4)}°`, x + 10 / this.zoom, y - 10 / this.zoom);\n      ctx.restore();\n    },\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "9780c3e7b1792160"
            ]
        ]
    },
    {
        "id": "1c90e219a749e53e",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "1cfe3062a8353012",
        "page": "",
        "ui": "",
        "name": "Ending point",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <!-- Le conteneur principal devient désactivé si sample_gear n'est pas \"Horizontal Net\" -->\n  <v-container\n    class=\"pa-4\"\n    :disabled=\"isDisabled\"\n    :style=\"{\n      pointerEvents: isDisabled ? 'none' : 'auto',\n      opacity: isDisabled ? 0.5 : 1,\n    }\"\n  >\n    <!-- Date & Time (End) -->\n    <v-row>\n      <v-col cols=\"12\"><strong>End Date and Time</strong></v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          v-model=\"object_date_end\"\n          label=\"Date (UTC)\"\n          variant=\"outlined\"\n          type=\"date\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          :style=\"isTablet ? 'font-size:1.2rem;width:100%;' : ''\"\n          @input=\"sendUpdateEnd('object_datetime_end')\"\n        />\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          v-model=\"object_time_end\"\n          label=\"Time (UTC)\"\n          variant=\"outlined\"\n          type=\"time\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          :style=\"isTablet ? 'font-size:1.2rem;width:100%;' : ''\"\n          @input=\"sendUpdateEnd('object_datetime_end')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHintEnd('datetime')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- LATITUDE END SECTION -->\n    <v-row>\n      <v-col cols=\"12\"><strong>Latitude (End)</strong></v-col>\n    </v-row>\n    <v-row class=\"mt-4\" align=\"start\">\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"latitude_D_end\"\n          label=\"°\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"90\"\n          @input=\"syncDecimalEnd\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"latitude_M_end\"\n          label=\"′\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          @input=\"syncDecimalEnd\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-text-field\n          v-model=\"latitude_S_end\"\n          label=\"″\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          step=\"0.001\"\n          @input=\"syncDecimalEnd\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-select\n          v-model=\"latDir_end\"\n          :items=\"['N','S']\"\n          label=\"Dir\"\n          variant=\"outlined\"\n          hide-details\n          @update:model-value=\"syncDecimalEnd\"\n        />\n      </v-col>\n\n      <!-- Latitude Decimal -->\n      <v-col cols=\"12\" lg=\"6\">\n        <v-text-field\n          v-model.number=\"object_lat_end\"\n          label=\"Latitude (decimal)\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"-90\"\n          max=\"90\"\n          step=\"0.000001\"\n          @input=\"updateFromDecimalEnd('lat')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHintEnd('latitude')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- LONGITUDE END SECTION -->\n    <v-row>\n      <v-col cols=\"12\"><strong>Longitude (End)</strong></v-col>\n    </v-row>\n    <v-row class=\"mt-4\" align=\"start\">\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"longitude_D_end\"\n          label=\"°\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"180\"\n          @input=\"syncDecimalEnd\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 1\">\n        <v-text-field\n          v-model=\"longitude_M_end\"\n          label=\"′\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          @input=\"syncDecimalEnd\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-text-field\n          v-model=\"longitude_S_end\"\n          label=\"″\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          step=\"0.001\"\n          @input=\"syncDecimalEnd\"\n        />\n      </v-col>\n      <v-col :cols=\"isTablet ? 3 : 2\">\n        <v-select\n          v-model=\"lonDir_end\"\n          :items=\"['E','W']\"\n          label=\"Dir\"\n          variant=\"outlined\"\n          hide-details\n          @update:model-value=\"syncDecimalEnd\"\n        />\n      </v-col>\n\n      <!-- Longitude Decimal -->\n      <v-col cols=\"12\" lg=\"6\">\n        <v-text-field\n          v-model.number=\"object_lon_end\"\n          label=\"Longitude (decimal)\"\n          variant=\"outlined\"\n          hide-details\n          type=\"number\"\n          min=\"-180\"\n          max=\"180\"\n          step=\"0.000001\"\n          @input=\"updateFromDecimalEnd('lon')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHintEnd('longitude')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- Canvas Map (End) -->\n    <v-row class=\"mt-6\" style=\"position: relative;\">\n      <v-col cols=\"12\" class=\"text-center\" style=\"position: relative;\">\n        <canvas\n          id=\"mapCanvas_end\"\n          width=\"800\"\n          height=\"500\"\n          style=\"width:100%;max-width:1200px;border:1px solid #999;border-radius:8px;background:#c5ecff;cursor:grab;\"\n          @wheel.prevent=\"onWheelEnd\"\n        ></canvas>\n\n        <!-- Zoom controls -->\n        <div\n          style=\"position:absolute;bottom:25px;right:18px;display:flex;flex-direction:column;gap:6px;\"\n        >\n          <v-btn icon :size=\"isTablet ? 'large' : 'default'\" @click=\"zoomInEnd\"><span>+</span></v-btn>\n          <v-btn icon :size=\"isTablet ? 'large' : 'default'\" @click=\"zoomOutEnd\"><span>−</span></v-btn>\n        </div>\n      </v-col>\n    </v-row>\n\n    <!-- MID-INFO POPUP -->\n    <v-dialog v-model=\"hintDialogEnd\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h6\">{{ hintTitleEnd }}</v-card-title>\n        <v-card-text>{{ hintTextEnd }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"hintDialogEnd = false\">Got it</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: [\"msg\"],\n  data() {\n    return {\n      object_date_end: \"\",\n      object_time_end: \"\",\n      object_lat_end: 0,\n      object_lon_end: 0,\n      latitude_D_end: \"0\",\n      latitude_M_end: \"0\",\n      latitude_S_end: \"0\",\n      latDir_end: \"N\",\n      longitude_D_end: \"0\",\n      longitude_M_end: \"0\",\n      longitude_S_end: \"0\",\n      lonDir_end: \"E\",\n      ctx_end: null,\n      mapImage_end: null,\n      imageLoaded_end: false,\n      zoom_end: 1,\n      offsetX_end: 0,\n      offsetY_end: 0,\n      sample_gear: \"\", // <-- ajouté ici\n      // Popup fields\n      hintDialogEnd: false,\n      hintTitleEnd: \"\",\n      hintTextEnd: \"\",\n    };\n  },\n  computed: {\n    isTablet() {\n      return this.$vuetify.display.mdAndDown;\n    },\n    isDisabled() {\n      // Désactive tout le formulaire si sample_gear n’est pas \"Horizontal Net\"\n      return this.sample_gear !== \"Horizontal Net\";\n    },\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        const p = newMsg?.payload || {};\n        if (p.sample_gear !== undefined) this.sample_gear = p.sample_gear; // <-- surveille la valeur reçue\n        if (p.object_date_end !== undefined) this.object_date_end = p.object_date_end;\n        if (p.object_time_end !== undefined) this.object_time_end = p.object_time_end;\n        if (p.object_lat_end !== undefined)\n          this.object_lat_end = parseFloat(p.object_lat_end.toFixed(6));\n        if (p.object_lon_end !== undefined)\n          this.object_lon_end = parseFloat(p.object_lon_end.toFixed(6));\n        if (p.object_lat_end !== undefined || p.object_lon_end !== undefined) {\n          this.updateFromDecimalEnd(\"lat\");\n          this.updateFromDecimalEnd(\"lon\");\n        }\n        this.centerOnMarkerEnd();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    const canvas = document.getElementById(\"mapCanvas_end\");\n    this.ctx_end = canvas.getContext(\"2d\");\n    this.mapImage_end = new Image();\n    this.mapImage_end.src = \"/world-map.svg\";\n    this.mapImage_end.onload = () => {\n      this.imageLoaded_end = true;\n      this.centerOnMarkerEnd();\n    };\n  },\n  methods: {\n    /** Info Popup **/\n    openHintEnd(type) {\n      if (type === \"datetime\") {\n        this.hintTitleEnd = \"End Date and Time (UTC)\";\n        this.hintTextEnd =\n          \"Enter the end time of your observation in Coordinated Universal Time (UTC). \" +\n          \"Use YYYY-MM-DD for date and HH:MM (24-hour) for time.\";\n      } else if (type === \"latitude\") {\n        this.hintTitleEnd = \"End Latitude\";\n        this.hintTextEnd =\n          \"Latitude specifies how far north or south your end location is from the equator. \" +\n          \"Use degrees (°), minutes (′), and seconds (″) with N/S direction, or directly enter a decimal between -90 and +90.\";\n      } else if (type === \"longitude\") {\n        this.hintTitleEnd = \"End Longitude\";\n        this.hintTextEnd =\n          \"Longitude specifies how far east or west your end location is from the Prime Meridian. \" +\n          \"You can enter DMS (° ′ ″) with E/W direction or a decimal between -180 and +180.\";\n      }\n      this.hintDialogEnd = true;\n    },\n\n    sendUpdateEnd(topic, extra = {}) {\n      this.send({\n        topic,\n        payload: {\n          object_date_end: this.object_date_end,\n          object_time_end: this.object_time_end,\n          ...extra,\n        },\n      });\n    },\n    syncDecimalEnd() {\n      this.object_lon_end = parseFloat(\n        this.toDecimal(this.longitude_D_end, this.longitude_M_end, this.longitude_S_end, this.lonDir_end).toFixed(6)\n      );\n      this.object_lat_end = parseFloat(\n        this.toDecimal(this.latitude_D_end, this.latitude_M_end, this.latitude_S_end, this.latDir_end).toFixed(6)\n      );\n      this.centerOnMarkerEnd();\n      this.sendUpdateEnd(\"object_latlon_end\", {\n        object_lat_end: this.object_lat_end,\n        object_lon_end: this.object_lon_end,\n      });\n    },\n    updateFromDecimalEnd(which) {\n      if (which === \"lon\") {\n        this.object_lon_end = parseFloat(this.object_lon_end.toFixed(6));\n        const { D, M, S, dir } = this.fromDecimal(this.object_lon_end, \"lon\");\n        this.longitude_D_end = D;\n        this.longitude_M_end = M;\n        this.longitude_S_end = S;\n        this.lonDir_end = dir;\n      } else {\n        this.object_lat_end = parseFloat(this.object_lat_end.toFixed(6));\n        const { D, M, S, dir } = this.fromDecimal(this.object_lat_end, \"lat\");\n        this.latitude_D_end = D;\n        this.latitude_M_end = M;\n        this.latitude_S_end = S;\n        this.latDir_end = dir;\n      }\n      this.centerOnMarkerEnd();\n      this.sendUpdateEnd(\"object_latlon_end\", {\n        object_lat_end: this.object_lat_end,\n        object_lon_end: this.object_lon_end,\n      });\n    },\n    toDecimal(D, M, S, dir) {\n      const d = parseFloat(D) || 0;\n      const m = parseFloat(M) || 0;\n      const s = parseFloat(S) || 0;\n      let val = d + m / 60 + s / 3600;\n      if (dir === \"S\" || dir === \"W\") val *= -1;\n      return val;\n    },\n    fromDecimal(dec, type) {\n      const dirPositive = type === \"lat\" ? \"N\" : \"E\";\n      const dirNegative = type === \"lat\" ? \"S\" : \"W\";\n      const absVal = Math.abs(dec);\n      const D = Math.floor(absVal);\n      const M = Math.floor((absVal - D) * 60);\n      const S = ((absVal - D - M / 60) * 3600).toFixed(3);\n      const dir = dec >= 0 ? dirPositive : dirNegative;\n      return { D, M, S, dir };\n    },\n    onWheelEnd(e) {\n      if (e.deltaY < 0) this.zoomInEnd();\n      else this.zoomOutEnd();\n    },\n    zoomInEnd() {\n      this.zoom_end = Math.min(this.zoom_end * 1.25, 10);\n      this.centerOnMarkerEnd();\n    },\n    zoomOutEnd() {\n      this.zoom_end = Math.max(this.zoom_end / 1.25, 0.5);\n      this.centerOnMarkerEnd();\n    },\n    centerOnMarkerEnd() {\n      const w = 800;\n      const h = 500;\n      const lat = this.object_lat_end;\n      const lon = this.object_lon_end;\n      const x = w / 2 + (lon / 180) * (w / 2);\n      const y = h / 2 - (lat / 90) * (h / 2);\n      this.offsetX_end = w / 2 - x;\n      this.offsetY_end = h / 2 - y;\n      this.drawPointEnd();\n    },\n    drawMapEnd(w, h) {\n      const ctx = this.ctx_end;\n      ctx.clearRect(0, 0, w, h);\n      ctx.save();\n      ctx.translate(\n        this.offsetX_end * this.zoom_end + (w / 2) * (1 - this.zoom_end),\n        this.offsetY_end * this.zoom_end + (h / 2) * (1 - this.zoom_end)\n      );\n      ctx.scale(this.zoom_end, this.zoom_end);\n      if (this.imageLoaded_end) ctx.drawImage(this.mapImage_end, 0, 0, w, h);\n      else {\n        ctx.fillStyle = \"#000\";\n        ctx.fillRect(0, 0, w, h);\n      }\n      ctx.restore();\n    },\n    drawPointEnd() {\n      const w = 800;\n      const h = 500;\n      const ctx = this.ctx_end;\n      if (!ctx) return;\n      this.drawMapEnd(w, h);\n      const lat = this.object_lat_end;\n      const lon = this.object_lon_end;\n      const x = w / 2 + (lon / 180) * (w / 2);\n      const y = h / 2 - (lat / 90) * (h / 2);\n      ctx.save();\n      ctx.translate(\n        this.offsetX_end * this.zoom_end + (w / 2) * (1 - this.zoom_end),\n        this.offsetY_end * this.zoom_end + (h / 2) * (1 - this.zoom_end)\n      );\n      ctx.scale(this.zoom_end, this.zoom_end);\n      ctx.fillStyle = \"red\";\n      ctx.beginPath();\n      ctx.arc(x, y, 6 / this.zoom_end, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = \"black\";\n      ctx.font = `${13 / this.zoom_end}px sans-serif`;\n      ctx.fillText(`${lat.toFixed(4)}°, ${lon.toFixed(4)}°`, x + 10 / this.zoom_end, y - 10 / this.zoom_end);\n      ctx.restore();\n    },\n  },\n};\n</script>\n\n<style scoped>\n@media (max-width: 1024px) {\n  .v-text-field input,\n  .v-select input {\n    font-size: 1.2rem !important;\n  }\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "1d06a5e5a5877d24"
            ]
        ]
    },
    {
        "id": "09b551fa202d8029",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "cb3521392eb4e9ed",
        "page": "",
        "ui": "",
        "name": "Net Specificity",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <!-- Conteneur principal désactivé si sample_gear n'est ni Horizontal Net ni Vertical Net -->\n    <v-container\n      fluid\n      class=\"pa-2\"\n      :disabled=\"isDisabled\"\n      :style=\"{\n        pointerEvents: isDisabled ? 'none' : 'auto',\n        opacity: isDisabled ? 0.5 : 1,\n        width: '100%',\n      }\"\n    >\n\n    <v-row class=\"mt-2\">\n      <!-- Net Mouth Diameter -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Mouth Opening Diameter\"\n          v-model.number=\"sample_net_mouth_diameter\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"cm\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_net_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('mouth_diameter')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n\n      <!-- Net Length -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Length of the Net\"\n          v-model.number=\"sample_net_length\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"cm\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_net_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('net_length')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n\n      <!-- Mesh Size -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Net Mesh Size\"\n          v-model.number=\"sample_net_mesh_size\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"μm\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_net_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('mesh_size')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n\n      <!-- Collector Volume -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Volume of the Collector\"\n          v-model.number=\"sample_collected_volume\"\n          :min=\"0\"\n          :max=\"1000\"\n          :step=\"1\"\n          suffix=\"mL\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_net_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('collector_volume')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- MID-INFO POPUP -->\n    <v-dialog v-model=\"hintDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h6\">{{ hintTitle }}</v-card-title>\n        <v-card-text>{{ hintText }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"hintDialog = false\">Got it</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: [\"msg\"],\n  data() {\n    return {\n      sample_net_mouth_diameter: \"\",\n      sample_net_length: \"\",\n      sample_net_mesh_size: \"\",\n      sample_collected_volume: \"\",\n      sample_gear: \"\",\n      hintDialog: false,\n      hintTitle: \"\",\n      hintText: \"\",\n    };\n  },\n  computed: {\n    isTablet() {\n      return this.$vuetify.display.mdAndDown;\n    },\n    isDisabled() {\n      // Désactiver si sample_gear n'est pas \"Horizontal Net\" ou \"Vertical Net\"\n      return ![\"Horizontal Net\", \"Vertical Net\"].includes(this.sample_gear);\n    },\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        const p = newMsg?.payload || {};\n        if (p.sample_gear !== undefined) this.sample_gear = p.sample_gear; // <-- récupère la valeur reçue\n        if (p.sample_net_mouth_diameter !== undefined)\n          this.sample_net_mouth_diameter = Number(p.sample_net_mouth_diameter);\n        if (p.sample_net_length !== undefined)\n          this.sample_net_length = Number(p.sample_net_length);\n        if (p.sample_net_mesh_size !== undefined)\n          this.sample_net_mesh_size = Number(p.sample_net_mesh_size);\n        if (p.sample_collected_volume !== undefined)\n          this.sample_collected_volume = Number(p.sample_collected_volume);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    /**\n     * Send updates (ensures all values are numbers)\n     */\n    sendUpdate(topic, extra = {}) {\n      this.send({\n        topic,\n        payload: {\n          sample_net_mouth_diameter: Number(this.sample_net_mouth_diameter) || 0,\n          sample_net_length: Number(this.sample_net_length) || 0,\n          sample_net_mesh_size: Number(this.sample_net_mesh_size) || 0,\n          sample_collected_volume: Number(this.sample_collected_volume) || 0,\n          ...extra,\n        },\n      });\n    },\n\n    /**\n     * Info popup — consistent with previous templates\n     */\n    openHint(type) {\n      if (type === \"mouth_diameter\") {\n        this.hintTitle = \"Mouth Opening Diameter\";\n        this.hintText =\n          \"Enter the diameter of the net’s mouth — the circular opening where water enters the net — measured in centimeters (cm). \" +\n          \"Typical plankton nets range from 20–60 cm in diameter. Larger diameters capture more water volume.\";\n      } else if (type === \"net_length\") {\n        this.hintTitle = \"Length of the Net\";\n        this.hintText =\n          \"Specify the total length of the net from the mouth opening to the collector. \" +\n          \"Measure in centimeters (cm). This helps calculate the water volume filtered and affects flow resistance.\";\n      } else if (type === \"mesh_size\") {\n        this.hintTitle = \"Net Mesh Size\";\n        this.hintText =\n          \"Enter the mesh size of the net in micrometers (μm). \" +\n          \"This defines the smallest particles or plankton that can pass through. For example, a 20 μm mesh captures microplankton but not bacteria.\";\n      } else if (type === \"collector_volume\") {\n        this.hintTitle = \"Volume of the Collector\";\n        this.hintText =\n          \"Specify the amount of sample collected after towing or pumping, measured in milliliters (mL). \" +\n          \"It should correspond to the water filtered and ensures proper concentration calculations.\";\n      }\n      this.hintDialog = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n@media (max-width: 1024px) {\n  .v-text-field input,\n  .v-select input {\n    font-size: 1.2rem !important;\n  }\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "2ef0ae85c43d66d6"
            ]
        ]
    },
    {
        "id": "93a68ffbce74d70d",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "dd4d9707051041c9",
        "page": "",
        "ui": "",
        "name": "Other Informations",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"pa-2\">\n    <v-row class=\"mt-2\">\n      <!-- Filtered Volume -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Filtered Volume\"\n          v-model.number=\"sample_filtered_volume\"\n          :min=\"0\"\n          :max=\"100000\"\n          :step=\"1\"\n          suffix=\"L\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :disabled=\"isDisabled\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_water_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('filtered_volume')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n\n      <!-- Concentration Factor -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Concentration Factor\"\n          v-model.number=\"sample_concentration_factor\"\n          :min=\"0\"\n          :max=\"100\"\n          :step=\"0.01\"\n          suffix=\"×\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :disabled=\"isDisabled\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_water_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('concentration_factor')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n\n      <!-- Sieve Mesh Size -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Sieve Mesh Size\"\n          v-model.number=\"sample_sieve_mesh_size\"\n          :min=\"1\"\n          :max=\"1000\"\n          :step=\"10\"\n          suffix=\"μm\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :disabled=\"isDisabled\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_water_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('sieve_mesh_size')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n\n      <!-- Sample Depth -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-text-field\n          label=\"Depth of the Sample\"\n          v-model.number=\"sample_depth\"\n          :min=\"0\"\n          :max=\"10935\"\n          :step=\"1\"\n          suffix=\"m\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details=\"auto\"\n          :disabled=\"isDisabled\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_water_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('sample_depth')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- Sample Comment (Toujours actif) -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-textarea\n          label=\"Sample Comment\"\n          v-model=\"sample_comment\"\n          variant=\"outlined\"\n          rows=\"2\"\n          :density=\"isTablet ? 'comfortable' : 'default'\"\n          @input=\"sendUpdate('sample_water_params')\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint('sample_comment')\">\n              mdi-information\n            </v-icon>\n          </template>\n        </v-textarea>\n      </v-col>\n    </v-row>\n\n    <!-- MID-INFO POPUP -->\n    <v-dialog v-model=\"hintDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h6\">{{ hintTitle }}</v-card-title>\n        <v-card-text>{{ hintText }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"hintDialog = false\">Got it</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: [\"msg\"],\n  data() {\n    return {\n      sample_filtered_volume: 1500,\n      sample_concentration_factor: 1,\n      sample_sieve_mesh_size: 200,\n      sample_depth: 1,\n      sample_comment: \"\",\n      sample_gear: \"\", // <-- ajout\n      hintDialog: false,\n      hintTitle: \"\",\n      hintText: \"\",\n    };\n  },\n  computed: {\n    isTablet() {\n      return this.$vuetify.display.mdAndDown;\n    },\n    // ✅ Disable fields if Lab culture or Demo / Test\n    isDisabled() {\n      return [\"Lab culture\", \"Demo / Test\"].includes(this.sample_gear);\n    },\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        const p = newMsg?.payload || {};\n        if (p.sample_gear !== undefined) this.sample_gear = p.sample_gear;\n        if (p.sample_filtered_volume !== undefined)\n          this.sample_filtered_volume = Number(p.sample_filtered_volume);\n        if (p.sample_concentration_factor !== undefined)\n          this.sample_concentration_factor = Number(p.sample_concentration_factor);\n        if (p.sample_sieve_mesh_size !== undefined)\n          this.sample_sieve_mesh_size = Number(p.sample_sieve_mesh_size);\n        if (p.sample_depth !== undefined)\n          this.sample_depth = Number(p.sample_depth);\n        if (p.sample_comment !== undefined)\n          this.sample_comment = String(p.sample_comment);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    sendUpdate(topic, extra = {}) {\n      this.send({\n        topic,\n        payload: {\n          sample_filtered_volume: Number(this.sample_filtered_volume) || 0,\n          sample_concentration_factor: Number(this.sample_concentration_factor) || 0,\n          sample_sieve_mesh_size: Number(this.sample_sieve_mesh_size) || 0,\n          sample_depth: Number(this.sample_depth) || 0,\n          sample_comment: this.sample_comment || \"\",\n          ...extra,\n        },\n      });\n    },\n\n    openHint(type) {\n      if (type === \"filtered_volume\") {\n        this.hintTitle = \"Filtered Volume\";\n        this.hintText =\n          \"Enter the total volume of water that passed through the net or filter during sampling, measured in liters (L).\";\n      } else if (type === \"concentration_factor\") {\n        this.hintTitle = \"Concentration Factor\";\n        this.hintText =\n          \"Specify the ratio by which the filtered water volume was concentrated into the final collected sample.\";\n      } else if (type === \"sieve_mesh_size\") {\n        this.hintTitle = \"Sieve Mesh Size\";\n        this.hintText =\n          \"Indicate the mesh size of the sieve used to separate particles or organisms, in micrometers (μm).\";\n      } else if (type === \"sample_depth\") {\n        this.hintTitle = \"Depth of the Sample\";\n        this.hintText =\n          \"Specify the depth (in meters) at which the sample was collected.\";\n      } else if (type === \"sample_comment\") {\n        this.hintTitle = \"Sample Comment\";\n        this.hintText =\n          \"Add any notes or context about the sample (e.g., weather, color, debris, issues).\";\n      }\n      this.hintDialog = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n@media (max-width: 1024px) {\n  .v-text-field input,\n  .v-textarea textarea {\n    font-size: 1.2rem !important;\n  }\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "d216b35a8b521fe5"
            ]
        ]
    },
    {
        "id": "8e3eed5be42ad41f",
        "type": "ui-template",
        "z": "190b0c9aa75e8843",
        "group": "59ce6abfbb7f8683",
        "page": "",
        "ui": "",
        "name": "Navigation Bottom",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"preview\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Preview\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"acquisition\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Acquisition\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1290,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a6bc59e4c830d424",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "Get Global Variables",
        "func": "const keys = global.keys(); // Get all global variable keys\nmsg.payload = {}; // Initialize the payload object\n\nkeys.forEach(key => {\n    // Ignore keys that start with \"$\"\n    if (!key.startsWith('$')) {\n        msg.payload[key] = global.get(key);\n    }\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 140,
        "wires": [
            [
                "279f3ddada9cadaa",
                "96550b272e3da513",
                "1c90e219a749e53e",
                "09b551fa202d8029",
                "93a68ffbce74d70d"
            ]
        ]
    },
    {
        "id": "0931106adf64b43d",
        "type": "ui-event",
        "z": "190b0c9aa75e8843",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "a68e52177173f690"
            ]
        ]
    },
    {
        "id": "a68e52177173f690",
        "type": "switch",
        "z": "190b0c9aa75e8843",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "b1a74fe5569d418a"
            ]
        ]
    },
    {
        "id": "b1a74fe5569d418a",
        "type": "switch",
        "z": "190b0c9aa75e8843",
        "name": "msg.payload.page.path === \"/metadata\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/metadata",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 40,
        "wires": [
            [
                "a6bc59e4c830d424"
            ]
        ]
    },
    {
        "id": "9780c3e7b1792160",
        "type": "switch",
        "z": "190b0c9aa75e8843",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "object_datetime",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "object_latlon",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "ae90b33dfda74614"
            ],
            [
                "875b74e16870159d"
            ]
        ]
    },
    {
        "id": "875b74e16870159d",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "set object_latlon",
        "func": "if (msg.topic) {\n    global.set(\"object_lat\", msg.payload.object_lat);\n    global.set(\"object_lon\", msg.payload.object_lon);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ae90b33dfda74614",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "set object_datetime",
        "func": "if (msg.topic) {\n    global.set(\"object_date\", msg.payload.object_date);\n    global.set(\"object_time\", msg.payload.object_time);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1d06a5e5a5877d24",
        "type": "switch",
        "z": "190b0c9aa75e8843",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "object_datetime_end",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "object_latlon_end",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "42d27ae01c6fd201"
            ],
            [
                "23f3059257ce93f6"
            ]
        ]
    },
    {
        "id": "23f3059257ce93f6",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "set object_latlon_end",
        "func": "if (msg.topic) {\n    global.set(\"object_lat_end\", msg.payload.object_lat_end);\n    global.set(\"object_lon_end\", msg.payload.object_lon_end);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "42d27ae01c6fd201",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "set object_datetime_end",
        "func": "if (msg.topic) {\n    global.set(\"object_date_end\", msg.payload.object_date_end);\n    global.set(\"object_time_end\", msg.payload.object_time_end);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2ef0ae85c43d66d6",
        "type": "switch",
        "z": "190b0c9aa75e8843",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sample_net_params",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "e32fbe7bc4987b3c"
            ]
        ]
    },
    {
        "id": "e32fbe7bc4987b3c",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "set sample_net_params",
        "func": "if (msg.topic) {\n    global.set(\"sample_net_mouth_diameter\", msg.payload.sample_net_mouth_diameter);\n    global.set(\"sample_net_length\", msg.payload.sample_net_length);\n    global.set(\"sample_net_mesh_size\", msg.payload.sample_net_mesh_size);\n    global.set(\"sample_collected_volume\", msg.payload.sample_collected_volume);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d216b35a8b521fe5",
        "type": "switch",
        "z": "190b0c9aa75e8843",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sample_water_params",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 460,
        "wires": [
            [
                "419e682def601ef5"
            ]
        ]
    },
    {
        "id": "419e682def601ef5",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "set sample_water_params",
        "func": "if (msg.topic) {\n    global.set(\"sample_filtered_volume\", msg.payload.sample_filtered_volume);\n    global.set(\"sample_concentration_factor\", msg.payload.sample_concentration_factor);\n    global.set(\"sample_sieve_mesh_size\", msg.payload.sample_sieve_mesh_size);\n    global.set(\"sample_depth\", msg.payload.sample_depth);\n    global.set(\"sample_comment\", msg.payload.sample_comment);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "13f96cf49ae6d6a6",
        "type": "switch",
        "z": "190b0c9aa75e8843",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sample_project_meta",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 140,
        "wires": [
            [
                "da13300e5bcb0c26",
                "1c90e219a749e53e",
                "09b551fa202d8029",
                "96550b272e3da513",
                "93a68ffbce74d70d"
            ]
        ]
    },
    {
        "id": "da13300e5bcb0c26",
        "type": "function",
        "z": "190b0c9aa75e8843",
        "name": "set sample_project_meta",
        "func": "if (msg.topic) {\n    global.set(\"sample_project\", msg.payload.sample_project);\n    global.set(\"sample_operator_name\", msg.payload.sample_operator_name);\n    global.set(\"sample_id\", msg.payload.sample_id);\n    global.set(\"sample_gear\", msg.payload.sample_gear);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ffe728d961068c62",
        "type": "ui-template",
        "z": "35d7387466dd0bc0",
        "group": "b274327af3807b79",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "7",
        "height": "18",
        "head": "",
        "format": "  <iframe \n    src=\"http://pkscope-rich-kettle-10463/preview\" \n    title=\"Page Node-RED\"\n    allowfullscreen>\n  </iframe>\n  <style>\n    iframe {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      border:none;\n      background:red;\n    }\n  </style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1310,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "aa6924c7e0aff26c",
        "type": "ui-template",
        "z": "35d7387466dd0bc0",
        "group": "d2f77573ed4317e4",
        "page": "",
        "ui": "",
        "name": "Acquisition settings",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-container fluid class=\"pa-2\">\n    <!-- Acquisition ID -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-text-field\n          v-model=\"acq_id\"\n          label=\"Acquisition ID\"\n          variant=\"outlined\"\n          placeholder=\"ex : A001\"\n          hint=\"A unique identifier assigned to each acquisition. Multiple acquisitions are sometimes required to adjust parameters.\"\n          @input=\"sendUpdate\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint(\n              'Acquisition ID',\n              'A unique identifier assigned to each acquisition. Multiple acquisitions are sometimes required to adjust parameters.'\n            )\">mdi-information</v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- Number of Images -->\n    <v-row>\n      <v-col cols=\"12\" sm=\"8\">\n        <v-slider\n          v-model.number=\"acq_number_image_acquired\"\n          :max=\"10000\"\n          :min=\"1\"\n          :step=\"1\"\n          label=\"Number of Images\"\n          hide-details\n          @update:model-value=\"sendUpdate\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"4\">\n        <v-text-field\n          v-model.number=\"acq_number_image_acquired\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"img\"\n          @input=\"sendUpdate\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint(\n              'Number of Images',\n              'The number of individual images captured during this acquisition process.'\n            )\">mdi-information</v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- Interframe Volume -->\n    <v-row>\n      <v-col cols=\"12\" sm=\"8\">\n        <v-slider\n          v-model.number=\"acq_interframe_volume\"\n          :max=\"100\"\n          :min=\"1\"\n          :step=\"1\"\n          label=\"Volume between frames\"\n          hide-details\n          @update:model-value=\"sendUpdate\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"4\">\n        <v-text-field\n          v-model.number=\"acq_interframe_volume\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"µL\"\n          @input=\"sendUpdate\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint(\n              'Volume between frames',\n              'The volume of sample displaced between each image capture, expressed in microliters (µL).'\n            )\">mdi-information</v-icon>\n          </template>\n        </v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- Calculated Volumes -->\n    <v-row>\n      <v-col cols=\"12\" sm=\"8\">\n        <span class=\"text-subtitle-1 text-medium-emphasis ma-2\">Volume Imaged :</span>\n      </v-col>\n      <v-col cols=\"12\" sm=\"4\">\n        <v-text-field\n          v-model.number=\"acq_imaged_volume\"\n          type=\"number\"\n          hide-details\n          suffix=\"mL\"\n          variant=\"plain\"\n          readonly\n        />\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"12\" sm=\"8\">\n        <span class=\"text-subtitle-1 text-medium-emphasis ma-2\">Total Volume Displaced :</span>\n      </v-col>\n      <v-col cols=\"12\" sm=\"4\">\n        <v-text-field\n          v-model.number=\"acq_pumped_volume\"\n          type=\"number\"\n          hide-details\n          suffix=\"mL\"\n          variant=\"plain\"\n          readonly\n        />\n      </v-col>\n    </v-row>\n\n    <!-- Acquisition Comment -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-textarea\n          v-model=\"acq_comment\"\n          clearable\n          label=\"Acquisition Comment\"\n          variant=\"outlined\"\n          rows=\"2\"\n          hint=\"Additional comments or notes related to the acquisition process.\"\n          @input=\"sendUpdate\"\n        >\n          <template #append>\n            <v-icon class=\"cursor-pointer\" @click=\"openHint(\n              'Acquisition Comment',\n              'Any additional notes or remarks related to the acquisition setup, process, or context.'\n            )\">mdi-information</v-icon>\n          </template>\n        </v-textarea>\n      </v-col>\n    </v-row>\n\n    <!-- Progress -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-progress-linear\n          v-model=\"acq_progression\"\n          striped\n          color=\"primary\"\n          height=\"25\"\n        >\n          <template #default=\"{ value }\">\n            <strong>{{ Math.ceil(value) }}%</strong>\n          </template>\n        </v-progress-linear>\n      </v-col>\n    </v-row>\n\n    <!-- Duration -->\n    <v-row>\n      <v-col cols=\"12\" sm=\"8\">\n        <span class=\"text-subtitle-1 text-medium-emphasis ma-2\">Estimated duration left :</span>\n      </v-col>\n      <v-col cols=\"12\" sm=\"4\">\n        <v-text-field\n          v-model.number=\"acq_duration_left\"\n          type=\"number\"\n          hide-details\n          suffix=\"min\"\n          variant=\"plain\"\n          readonly\n        />\n      </v-col>\n    </v-row>\n\n    <!-- Acquisition Status -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-alert\n          v-if=\"acq_status_message\"\n          :type=\"statusType\"\n          :color=\"statusColor\"\n          border=\"start\"\n          variant=\"tonal\"\n          class=\"text-subtitle-1\"\n          prominent\n        >\n          <v-icon left>{{ statusIcon }}</v-icon>\n          {{ formattedStatus }}\n        </v-alert>\n      </v-col>\n    </v-row>\n\n    <!-- History -->\n    <v-row v-if=\"status_history.length\">\n      <v-col cols=\"12\">\n        <v-expansion-panels>\n          <v-expansion-panel>\n            <v-expansion-panel-title>\n              <v-icon left>mdi-history</v-icon>\n              Acquisition Log\n            </v-expansion-panel-title>\n            <v-expansion-panel-text>\n              <v-list density=\"compact\">\n                <v-list-item v-for=\"(msg, i) in status_history\" :key=\"i\">\n                  <v-list-item-content>\n                    <v-list-item-title>{{ msg }}</v-list-item-title>\n                  </v-list-item-content>\n                </v-list-item>\n              </v-list>\n            </v-expansion-panel-text>\n          </v-expansion-panel>\n        </v-expansion-panels>\n      </v-col>\n    </v-row>\n\n    <!-- Start / Stop -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn-toggle\n          v-model=\"acq_status\"\n          variant=\"outlined\"\n          mandatory\n          divided\n          shaped\n          class=\"d-flex justify-space-between\"\n          @update:model-value=\"handleAcqStatusChange\"\n        >\n          <v-btn class=\"flex-grow-1\" value=\"off\" color=\"red\">Stop</v-btn>\n          <v-btn class=\"flex-grow-1\" value=\"on\" color=\"green\">Start</v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n\n    <!-- Hint -->\n    <v-dialog v-model=\"hintDialog\" max-width=\"400\">\n      <v-card>\n        <v-card-title class=\"text-h6\">{{ hintTitle }}</v-card-title>\n        <v-card-text>{{ hintText }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn text color=\"primary\" @click=\"hintDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: [\"msg\"],\n  data() {\n    return {\n      acq_id: \"\",\n      acq_number_image_acquired: 1,\n      acq_interframe_volume: 1,\n      acq_imaged_volume: 0,\n      acq_pumped_volume: 0,\n      acq_comment: \"\",\n      acq_progression: 0,\n      acq_duration_left: 0,\n      acq_status: \"off\",\n      acq_status_message: \"\",\n      status_history: [],\n      hintDialog: false,\n      hintTitle: \"\",\n      hintText: \"\",\n      topic: \"acq_params\",\n    };\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        const p = newMsg?.payload || {};\n        if (p.acq_id !== undefined) this.acq_id = p.acq_id;\n        if (p.acq_number_image_acquired !== undefined)\n          this.acq_number_image_acquired = p.acq_number_image_acquired;\n        if (p.acq_interframe_volume !== undefined)\n          this.acq_interframe_volume = p.acq_interframe_volume;\n        if (p.acq_imaged_volume !== undefined)\n          this.acq_imaged_volume = p.acq_imaged_volume;\n        if (p.acq_pumped_volume !== undefined)\n          this.acq_pumped_volume = p.acq_pumped_volume;\n        if (p.acq_comment !== undefined) this.acq_comment = p.acq_comment;\n        if (p.acq_progression !== undefined) this.acq_progression = p.acq_progression;\n        if (p.acq_duration_left !== undefined)\n          this.acq_duration_left = p.acq_duration_left;\n        if (p.acq_status !== undefined) this.acq_status = p.acq_status;\n        if (p.status !== undefined) this.updateStatus(p.status);\n      },\n      deep: true,\n    },\n  },\n  computed: {\n    formattedStatus() {\n      const s = this.acq_status_message;\n      if (s === \"Started\") return \"Image capture process has started successfully.\";\n      if (s === \"Done\") return \"Acquisition completed successfully.\";\n      return s;\n    },\n    statusColor() {\n      const s = this.acq_status_message;\n      if (!s) return \"grey\";\n      if (s.startsWith(\"Error\")) return \"red\";\n      if (s.startsWith(\"Configuration update error\")) return \"orange\";\n      if (s.includes(\"WAS NOT CAPTURED\")) return \"red\";\n      if (s.startsWith(\"Image\") || s === \"Started\" || s === \"Done\") return \"green\";\n      return \"grey\";\n    },\n    statusType() {\n      return this.statusColor === \"green\"\n        ? \"success\"\n        : this.statusColor === \"orange\"\n        ? \"warning\"\n        : this.statusColor === \"red\"\n        ? \"error\"\n        : \"info\";\n    },\n    statusIcon() {\n      const s = this.acq_status_message;\n      if (s.startsWith(\"Error\")) return \"mdi-alert-circle\";\n      if (s.startsWith(\"Configuration update error\")) return \"mdi-cog-alert\";\n      if (s.includes(\"WAS NOT CAPTURED\")) return \"mdi-close-circle\";\n      if (s.startsWith(\"Image\")) return \"mdi-check-circle\";\n      if (s === \"Started\") return \"mdi-camera\";\n      if (s === \"Done\") return \"mdi-check-bold\";\n      return \"mdi-information\";\n    },\n  },\n  methods: {\n    sendUpdate(extra = {}) {\n      this.send({\n        topic: this.topic,\n        payload: {\n          acq_id: this.acq_id,\n          acq_number_image_acquired: this.acq_number_image_acquired,\n          acq_interframe_volume: this.acq_interframe_volume,\n          acq_imaged_volume: this.acq_imaged_volume,\n          acq_pumped_volume: this.acq_pumped_volume,\n          acq_comment: this.acq_comment,\n          acq_progression: this.acq_progression,\n          acq_duration_left: this.acq_duration_left,\n          acq_status: this.acq_status,\n          status: this.acq_status_message,\n          ...extra,\n        },\n      });\n    },\n    handleAcqStatusChange(value) {\n      this.acq_status = value;\n      this.send({\n        topic: \"imager/image\",\n        payload: { status: value },\n      });\n    },\n    updateStatus(status) {\n      this.acq_status_message = status;\n      const log = `${new Date().toLocaleTimeString()} — ${status}`;\n      this.status_history.unshift(log);\n      if (this.status_history.length > 10) this.status_history.pop();\n\n      // --- 🔁 Synchronisation du bouton Start/Stop selon le statut reçu ---\n      if (status === \"Started\") {\n        this.acq_status = \"on\";\n      } else if (\n        status === \"Done\" ||\n        status.startsWith(\"Error\") ||\n        status.startsWith(\"Configuration update error\") ||\n        status.includes(\"WAS NOT CAPTURED\")\n      ) {\n        this.acq_status = \"off\";\n      }\n    },\n    openHint(title, text) {\n      this.hintTitle = title;\n      this.hintText = text;\n      this.hintDialog = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cursor-pointer {\n  cursor: pointer;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "56b3c60c6d4ffd87"
            ]
        ]
    },
    {
        "id": "a39e07fd1a86ac84",
        "type": "ui-template",
        "z": "35d7387466dd0bc0",
        "group": "3ae252a2e5abca89",
        "page": "",
        "ui": "",
        "name": "Navigation Top",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"metadata\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Metadata\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"segmentation\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Segmentation\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "56b3c60c6d4ffd87",
        "type": "switch",
        "z": "35d7387466dd0bc0",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "acq_params",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "imager/image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 140,
        "wires": [
            [
                "f841ebf999dd8cb3"
            ],
            [
                "09ecc922fe2214a8"
            ]
        ]
    },
    {
        "id": "f841ebf999dd8cb3",
        "type": "function",
        "z": "35d7387466dd0bc0",
        "name": "set acq_params",
        "func": "if (msg.topic) {\n    global.set(\"acq_id\", msg.payload.acq_id);\n    global.set(\"acq_number_image_acquired\", msg.payload.acq_number_image_acquired);\n    global.set(\"acq_interframe_volume\", msg.payload.acq_interframe_volume);\n    global.set(\"acq_imaged_volume\", msg.payload.acq_imaged_volume);\n    global.set(\"acq_pumped_volume\", msg.payload.acq_pumped_volume);\n    global.set(\"acq_comment\", msg.payload.acq_comment);\n    global.set(\"acq_progression\", msg.payload.acq_progression);\n    global.set(\"acq_duration_left\", msg.payload.acq_duration_left);\n    global.set(\"acq_status\", msg.payload.acq_status);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e3c084164002f23f",
        "type": "ui-event",
        "z": "35d7387466dd0bc0",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "5bea829ec02ded61"
            ]
        ]
    },
    {
        "id": "5bea829ec02ded61",
        "type": "switch",
        "z": "35d7387466dd0bc0",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "54ae95ca6088f307"
            ]
        ]
    },
    {
        "id": "54ae95ca6088f307",
        "type": "switch",
        "z": "35d7387466dd0bc0",
        "name": "msg.payload.page.path === \"/acquisition\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/acquisition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "113085f8dd63df0c"
            ]
        ]
    },
    {
        "id": "113085f8dd63df0c",
        "type": "function",
        "z": "35d7387466dd0bc0",
        "name": "Get Global Variables",
        "func": "const keys = global.keys(); // Get all global variable keys\nmsg.payload = {}; // Initialize the payload object\n\nkeys.forEach(key => {\n    // Ignore keys that start with \"$\"\n    if (!key.startsWith('$')) {\n        msg.payload[key] = global.get(key);\n    }\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 140,
        "wires": [
            [
                "aa6924c7e0aff26c"
            ]
        ]
    },
    {
        "id": "8ceee00f68df186c",
        "type": "mqtt in",
        "z": "35d7387466dd0bc0",
        "name": "",
        "topic": "status/imager",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 200,
        "wires": [
            [
                "aa6924c7e0aff26c"
            ]
        ]
    },
    {
        "id": "425d72ed91ea264e",
        "type": "ui-template",
        "z": "35d7387466dd0bc0",
        "group": "3d88a1872dbbf8a7",
        "page": "",
        "ui": "",
        "name": "Navigation Bottom",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"metadata\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Metadata\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"segmentation\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Segmentation\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1290,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "46b98c54eb680c2e",
        "type": "mqtt out",
        "z": "35d7387466dd0bc0",
        "name": "MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 1070,
        "y": 200,
        "wires": []
    },
    {
        "id": "7d28a539738ca73a",
        "type": "function",
        "z": "35d7387466dd0bc0",
        "name": "update_config",
        "func": "const keys = global.keys(); // Récupère toutes les clés des variables globales\nlet config = {}; // Objet pour stocker la configuration\n\nkeys.forEach(key => {\n    // Ignore les clés qui commencent par \"$\"\n    if (!key.startsWith('$')) {\n        config[key] = global.get(key);\n    }\n});\n\n// Crée le payload final\nmsg.payload = {\n    action: \"update_config\",\n    config: config\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 200,
        "wires": [
            [
                "46b98c54eb680c2e"
            ]
        ]
    },
    {
        "id": "09ecc922fe2214a8",
        "type": "switch",
        "z": "35d7387466dd0bc0",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "7d28a539738ca73a",
                "bb2825f419cc6526"
            ],
            [
                "44c8ea6299e13784"
            ]
        ]
    },
    {
        "id": "44c8ea6299e13784",
        "type": "function",
        "z": "35d7387466dd0bc0",
        "name": "stop acquisition",
        "func": "\nmsg.payload = {\n    action: \"stop\"\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 240,
        "wires": [
            [
                "46b98c54eb680c2e"
            ]
        ]
    },
    {
        "id": "bb2825f419cc6526",
        "type": "function",
        "z": "35d7387466dd0bc0",
        "name": "start acquisition",
        "func": "const acq_interframe_volume = global.get(\"acq_interframe_volume\") || 0;\nconst acq_number_image_acquired = global.get(\"acq_number_image_acquired\") || 0;\n\n\n// Crée le payload final\nmsg.payload = {\n    action: \"image\",\n    pump_direction: \"FORWARD\",\n    volume: acq_interframe_volume,\n    nb_frame: acq_number_image_acquired,\n    sleep: 0.1\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 280,
        "wires": [
            [
                "ce5cca3b8fe34379"
            ]
        ]
    },
    {
        "id": "ce5cca3b8fe34379",
        "type": "delay",
        "z": "35d7387466dd0bc0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 920,
        "y": 280,
        "wires": [
            [
                "46b98c54eb680c2e"
            ]
        ]
    },
    {
        "id": "6109bcddfb9acab4",
        "type": "mqtt in",
        "z": "35d7387466dd0bc0",
        "name": "",
        "topic": "status/imager",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 460,
        "wires": [
            [
                "7ad06eb134e5f2b2"
            ]
        ]
    },
    {
        "id": "7ad06eb134e5f2b2",
        "type": "debug",
        "z": "35d7387466dd0bc0",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 620,
        "wires": []
    },
    {
        "id": "250979b4672d81b6",
        "type": "ui-event",
        "z": "0fd76ac156d78937",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "72421c36bb0418bc"
            ]
        ]
    },
    {
        "id": "72421c36bb0418bc",
        "type": "switch",
        "z": "0fd76ac156d78937",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "66d295cc27d69cec"
            ]
        ]
    },
    {
        "id": "66d295cc27d69cec",
        "type": "switch",
        "z": "0fd76ac156d78937",
        "name": "msg.payload.page.path === \"/segmentation\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/segmentation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "d4129bf3f5622aa6"
            ]
        ]
    },
    {
        "id": "61c2c281b1c6e055",
        "type": "ui-table",
        "z": "0fd76ac156d78937",
        "group": "bfd4acb7b243514f",
        "name": "",
        "label": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": false,
        "showSearch": false,
        "deselect": true,
        "selectionType": "click",
        "columns": [
            {
                "title": "Project name",
                "key": "project_name",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Sample ID",
                "key": "sample_id",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Acquisition ID",
                "key": "acquisition_id",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Operator Name",
                "key": "operator_name",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Image",
                "key": "image_acquired_count",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Path",
                "key": "path",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Segmented",
                "key": "is_segmented",
                "keyType": "key",
                "type": "tickcross",
                "width": "",
                "align": "start"
            }
        ],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 270,
        "y": 180,
        "wires": [
            [
                "cdb586337f186494"
            ]
        ]
    },
    {
        "id": "d4129bf3f5622aa6",
        "type": "list acquisitions",
        "z": "0fd76ac156d78937",
        "name": "",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "61c2c281b1c6e055"
            ]
        ]
    },
    {
        "id": "9e44bf9a44615e20",
        "type": "ui-template",
        "z": "0fd76ac156d78937",
        "group": "9f00807878a32dd5",
        "page": "",
        "ui": "",
        "name": "Navigation Bottom",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"acquisition\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Acquisition\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"visualization\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Visualization\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1290,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d11906e048438931",
        "type": "ui-template",
        "z": "0fd76ac156d78937",
        "group": "9b992ca6515ed058",
        "page": "",
        "ui": "",
        "name": "Navigation Top",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"acquisition\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Acquisition\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"visualization\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Visualization\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "26074b8d8ad8abf9",
        "type": "ui-template",
        "z": "0fd76ac156d78937",
        "group": "bfd4acb7b243514f",
        "page": "",
        "ui": "",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <!-- Dialog only -->\n  <v-dialog v-model=\"showDialog\" max-width=\"500\">\n    <v-card>\n      <v-card-title class=\"font-weight-bold\">\n        Segmentation Required\n      </v-card-title>\n\n      <v-card-text>\n        <p>\n          The selected sample has not been segmented yet.<br>\n          Do you want to start segmentation now?\n        </p>\n\n        <v-divider class=\"my-3\"></v-divider>\n\n        <v-list density=\"compact\">\n          <v-list-item>\n            <v-list-item-title><b>Project:</b> {{ payload.project_name }}</v-list-item-title>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-title><b>Sample:</b> {{ payload.sample_id }}</v-list-item-title>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-title><b>Acquisition:</b> {{ payload.acquisition_id }}</v-list-item-title>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-title><b>Operator:</b> {{ payload.operator_name }}</v-list-item-title>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-title><b>Images acquired:</b> {{ payload.image_acquired_count }}</v-list-item-title>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-title><b>Path:</b> {{ payload.path }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-card-text>\n\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"grey\" variant=\"tonal\" @click=\"showDialog = false\">\n          Cancel\n        </v-btn>\n        <v-btn color=\"primary\" variant=\"flat\" @click=\"sendSegment\">\n          Segment\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\n  export default {\n  data() {\n    return {\n      payload: {},\n      showDialog: false,\n    };\n  },\n  watch: {\n    msg: {\n      immediate: true,\n      handler(msg) {\n        if (!msg || !msg.payload) return;\n        this.payload = msg.payload;\n        this.showDialog = msg.payload.is_segmented === false;\n      },\n    },\n  },\n  methods: {\n    sendSegment() {\n      const outMsg = {\n        topic: \"segmenter/segment\",\n        payload: {\n          action: \"segment\",\n          path: [this.payload.path],\n          settings: {\n            force: false,\n            recursive: true,\n            ecotaxa: true,\n            keep: true,\n            process_id: 1,\n          },\n          // 👇 Inject dataset info cleanly under a new key\n          dataset: {\n            project_name: this.payload.project_name,\n            sample_id: this.payload.sample_id,\n            acquisition_id: this.payload.acquisition_id,\n            operator_name: this.payload.operator_name,\n            image_acquired_count: this.payload.image_acquired_count,\n            path: this.payload.path,\n          },\n        },\n      };\n\n      this.send(outMsg);\n      this.showDialog = false;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 180,
        "wires": [
            [
                "24c71b69e60e41bd"
            ]
        ]
    },
    {
        "id": "4bdd8a4afcdb704b",
        "type": "mqtt out",
        "z": "0fd76ac156d78937",
        "name": "MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "24c71b69e60e41bd",
        "type": "switch",
        "z": "0fd76ac156d78937",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "segmenter/segment",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 180,
        "wires": [
            [
                "4bdd8a4afcdb704b",
                "33c0d1b8251b5d00",
                "27628ed66c48096e"
            ]
        ]
    },
    {
        "id": "34f6f23f1a46da67",
        "type": "mqtt in",
        "z": "0fd76ac156d78937",
        "name": "",
        "topic": "status/segmenter",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 340,
        "wires": [
            [
                "33c0d1b8251b5d00",
                "27628ed66c48096e"
            ]
        ]
    },
    {
        "id": "27628ed66c48096e",
        "type": "debug",
        "z": "0fd76ac156d78937",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 500,
        "wires": []
    },
    {
        "id": "33c0d1b8251b5d00",
        "type": "ui-template",
        "z": "0fd76ac156d78937",
        "group": "402b3d24c87ab0d2",
        "page": "",
        "ui": "",
        "name": "",
        "order": 1,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template>\n      <!-- Dataset Info -->\n      <v-list density=\"compact\" v-if=\"segment.dataset\">\n        <v-list-item>\n          <v-list-item-title><b>Project:</b> {{ segment.dataset.project_name }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title><b>Sample:</b> {{ segment.dataset.sample_id }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title><b>Acquisition:</b> {{ segment.dataset.acquisition_id }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title><b>Operator:</b> {{ segment.dataset.operator_name }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title><b>Images acquired:</b> {{ segment.dataset.image_acquired_count }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title><b>Path:</b> {{ segment.dataset.path }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n\n      <v-divider class=\"my-4\"></v-divider>\n\n      <!-- Segmentation Settings -->\n      <v-list density=\"compact\">\n        <v-list-item>\n          <v-list-item-title><b>Action:</b> {{ segment.action }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title><b>Dataset Path:</b> {{ segment.path?.[0] }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title><b>Process ID:</b> {{ segment.settings?.process_id }}</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title>\n            <b>Options:</b>\n            Recursive: <strong>{{ segment.settings?.recursive ? \"Yes\" : \"No\" }}</strong> •\n            EcoTaxa: <strong>{{ segment.settings?.ecotaxa ? \"Yes\" : \"No\" }}</strong> •\n            Keep: <strong>{{ segment.settings?.keep ? \"Yes\" : \"No\" }}</strong>\n          </v-list-item-title>\n        </v-list-item>\n      </v-list>\n\n      <v-divider class=\"my-4\"></v-divider>\n\n      <!-- Progress Info -->\n      <div v-if=\"statusText\">\n        <div class=\"d-flex justify-space-between align-center mb-2\">\n          <span class=\"text-subtitle-1 font-weight-medium\">Progress</span>\n          <span class=\"text-caption\">{{ progressText }}</span>\n        </div>\n\n        <v-progress-linear\n          :model-value=\"progressPercent\"\n          height=\"10\"\n          color=\"primary\"\n          rounded\n          striped\n        ></v-progress-linear>\n\n        <p class=\"mt-3 mb-0 text-body-2\">\n          Currently segmenting:\n          <strong>{{ currentImage }}</strong>\n        </p>\n      </div>\n\n      <div v-else class=\"text-disabled mt-4\">\n        Awaiting segmentation status...\n      </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      segment: {\n        action: \"\",\n        path: [\"\"],\n        settings: {\n          recursive: false,\n          ecotaxa: false,\n          keep: false,\n          process_id: 0,\n        },\n        dataset: null,\n      },\n      statusText: \"\",\n      currentImage: \"\",\n      currentIndex: 0,\n      totalImages: 0,\n      progressPercent: 0,\n      progressText: \"\",\n    };\n  },\n  watch: {\n    msg: {\n      immediate: true,\n      handler(msg) {\n        if (!msg || !msg.topic || !msg.payload) return;\n\n        // 1️⃣ Capture segment configuration\n        if (msg.topic === \"segmenter/segment\") {\n          this.segment = msg.payload;\n        }\n\n        // 2️⃣ Capture segmentation progress\n        if (msg.topic === \"status/segmenter\") {\n          this.statusText = msg.payload.status;\n\n          const imgMatch = this.statusText.match(/image ([\\w\\-\\_\\.]+),/);\n          this.currentImage = imgMatch ? imgMatch[1] : \"\";\n\n          const progressMatch = this.statusText.match(/image (\\d+)\\/(\\d+)/);\n          if (progressMatch) {\n            this.currentIndex = Number(progressMatch[1]);\n            this.totalImages = Number(progressMatch[2]);\n            this.progressPercent = Math.round(\n              (this.currentIndex / this.totalImages) * 100\n            );\n            this.progressText = `${this.currentIndex} / ${this.totalImages} (${this.progressPercent}%)`;\n          }\n        }\n      },\n    },\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 940,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "cdb586337f186494",
        "type": "switch",
        "z": "0fd76ac156d78937",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "segmenter/segment",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "26074b8d8ad8abf9"
            ]
        ]
    },
    {
        "id": "77bb783e65c3ffd6",
        "type": "ui-event",
        "z": "14f8c9b5ce1235cc",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "55814595d9207e95"
            ]
        ]
    },
    {
        "id": "55814595d9207e95",
        "type": "switch",
        "z": "14f8c9b5ce1235cc",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "90c920ecdab16908"
            ]
        ]
    },
    {
        "id": "90c920ecdab16908",
        "type": "switch",
        "z": "14f8c9b5ce1235cc",
        "name": "msg.payload.page.path === \"/visualization\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/visualization",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "75b694eff7cf6747",
        "type": "ui-template",
        "z": "14f8c9b5ce1235cc",
        "group": "1d3abb201c51ff47",
        "page": "",
        "ui": "",
        "name": "Navigation Bottom",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"segmentation\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Segmentation\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"export\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Export\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1290,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fe2e976833fd41a9",
        "type": "ui-template",
        "z": "14f8c9b5ce1235cc",
        "group": "b570f76ef526af45",
        "page": "",
        "ui": "",
        "name": "Navigation Top",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"segmentation\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Segmentation\n        </v-btn>\n      </v-col>\n\n      <!-- Forward to Acquisition -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"export\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          Export\n          <v-icon end>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f530763503fdc7d1",
        "type": "mqtt in",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "name": "",
        "topic": "status/#",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 100,
        "y": 320,
        "wires": [
            [
                "f0313532a2b77337"
            ]
        ]
    },
    {
        "id": "e5a0432fc7b35b29",
        "type": "function",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "name": "Count objects segmented",
        "func": "var objectCount = global.get('objectCount') || 0;\n\nif (msg.payload.status === 'Done') {\n    msg.payload.objectCount = objectCount;\n    objectCount=0;\n    }\nelse if (msg.topic === 'status/segmenter/metric') {\n    objectCount++;\n}\n\nglobal.set('objectCount', objectCount);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "ba8045b3448d5bbf"
            ]
        ]
    },
    {
        "id": "ba8045b3448d5bbf",
        "type": "switch",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "name": "msg.payload.metadata.equivalent_diameter is not null",
        "property": "payload.metadata.equivalent_diameter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 320,
        "wires": [
            [
                "68fe28f50beb2add"
            ]
        ]
    },
    {
        "id": "f0313532a2b77337",
        "type": "switch",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status/segmenter/metric",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 320,
        "wires": [
            [
                "e5a0432fc7b35b29"
            ]
        ]
    },
    {
        "id": "e045f6939008f23f",
        "type": "ui-chart",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "bdcb68c6cff2da73",
        "name": "",
        "label": "Histogram - Equivalent Diameter",
        "order": 1,
        "chartType": "histogram",
        "category": "Equivalent Diameter (μm)",
        "categoryType": "str",
        "xAxisLabel": "Equivalent Diameter (μm)",
        "xAxisProperty": "payload.metadata.equivalent_diameter",
        "xAxisPropertyType": "msg",
        "xAxisType": "bins",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "20",
        "xmax": "100",
        "yAxisLabel": "Abundance",
        "yAxisProperty": "payload.metadata.equivalent_diameter",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": "80",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#00ff04",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1020,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "68fe28f50beb2add",
        "type": "function",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "name": "convert px to um",
        "func": "// Conversion factor from pixels to micrometers (µm)\nconst px_to_um = 0.75;\n\n// Convert relevant measurements\nmsg.payload.metadata.equivalent_diameter = Math.round(msg.payload.metadata.equivalent_diameter * px_to_um);\nmsg.payload.metadata.width = Math.round(msg.payload.metadata.width * px_to_um);\nmsg.payload.metadata.height = Math.round(msg.payload.metadata.height * px_to_um);\nmsg.payload.metadata.area = Math.round(msg.payload.metadata.area * (px_to_um ** 2)); // Area is in square units\nmsg.payload.metadata.area_exc = Math.round(msg.payload.metadata.area_exc * (px_to_um ** 2));\nmsg.payload.metadata.convex_area = Math.round(msg.payload.metadata.convex_area * (px_to_um ** 2));\nmsg.payload.metadata.major = Math.round(msg.payload.metadata.major * px_to_um);\nmsg.payload.metadata.minor = Math.round(msg.payload.metadata.minor * px_to_um);\nmsg.payload.metadata.perim = Math.round(msg.payload.metadata[\"perim.\"] * px_to_um); // Ensure proper key reference\nmsg.payload.metadata.bounding_box_area = Math.round(msg.payload.metadata.bounding_box_area * (px_to_um ** 2));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 520,
        "wires": [
            [
                "e045f6939008f23f",
                "693e1ad09770bdf5",
                "7433aae2400b7f78",
                "a90099cfe7a37a37",
                "df0dcb1175b8bd5f"
            ]
        ]
    },
    {
        "id": "a20376f0ac08af8e",
        "type": "ui-markdown",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "bdcb68c6cff2da73",
        "name": "Histogram of equivalent_diameter",
        "order": 3,
        "width": "3",
        "height": "6",
        "content": "### Distribution of Object Sizes  \nUnderstanding the size distribution of planktonic objects helps identify dominant size classes and detect anomalies. A skewed distribution might indicate specific biological trends, such as a bloom of a particular species or a technical issue in the acquisition process.  \n\n*In the graph:*  \n- A **peak in smaller sizes** suggests dominance of tiny plankton.  \n- A **broad distribution** indicates a mix of various size classes.  \n- A **skewed or bimodal pattern** may reflect biological or technical factors (e.g., species-specific blooms or imaging biases).\n",
        "className": "",
        "x": 1020,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "694187e7d85faec3",
        "type": "ui-markdown",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "bdcb68c6cff2da73",
        "name": "elongation vs. area",
        "order": 4,
        "width": "3",
        "height": "6",
        "content": "### Relationship Between Elongation and Object Area  \nThis scatter plot helps assess whether larger objects tend to be more elongated or compact. Certain plankton species have characteristic shapes, and identifying correlations between elongation and area can aid in distinguishing different taxa or understanding morphological variability.  \n\n*In the graph:*  \n- **Top-right**: Large and highly elongated objects (e.g., filamentous plankton).  \n- **Bottom-right**: Small but highly elongated objects (e.g., thin needle-like forms). \n- **Top-left**: Large but compact objects (e.g., rounded or clustered plankton). \n- **Bottom-left**: Small and compact objects (e.g., spherical or short structures).",
        "className": "",
        "x": 970,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "693e1ad09770bdf5",
        "type": "ui-chart",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "bdcb68c6cff2da73",
        "name": "elongation vs. area",
        "label": "elongation vs. area",
        "order": 2,
        "chartType": "scatter",
        "category": "elongation vs. area",
        "categoryType": "str",
        "xAxisLabel": "elongation (ratio of major to minor axis)",
        "xAxisProperty": "payload.metadata.elongation",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "area (μm²)",
        "yAxisProperty": "payload.metadata.area",
        "yAxisPropertyType": "msg",
        "ymin": "300",
        "ymax": "1500",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#ff0088",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 970,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "82a3257cd0a3815d",
        "type": "ui-markdown",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "fa6393a7d7e3b7d7",
        "name": "equivalent_diameter vs. MeanValue",
        "order": 3,
        "width": "3",
        "height": "6",
        "content": "### Variation of Mean Brightness with Equivalent Diameter  \nThis graph explores whether larger objects tend to be brighter or darker. This can reveal differences in pigmentation, transparency, or even imaging inconsistencies.  \n\n*In the graph:*   \n- **Top-right**: Large and bright objects.\n- **Top-left**: Small and bright objects.\n- **Bottom-right**: Large and dark objects.\n- **Bottom-left**: Small and dark objects.  ",
        "className": "",
        "x": 560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "44ef242ece9b6b4b",
        "type": "ui-markdown",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "fa6393a7d7e3b7d7",
        "name": "MeanSaturation vs. MeanValue",
        "order": 4,
        "width": "3",
        "height": "6",
        "content": "### Relationship Between Mean Saturation and Mean Brightness\nThis visualization helps understand how color properties vary with brightness. Some plankton groups exhibit distinct coloration, and saturation could be a useful feature for classification. A strong trend might suggest systematic differences in pigmentation or optical properties across plankton groups.\n\n*In the graph:*  \n- **Top-right**: Bright and highly saturated objects (vivid colors).  \n- **Top-left**: Bright but low-saturation objects (pale or near-white).  \n- **Bottom-right**: Dark but highly saturated objects (deep, rich colors).  \n- **Bottom-left**: Dark and low-saturation objects (grayish or faintly colored).",
        "className": "",
        "x": 550,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "7433aae2400b7f78",
        "type": "ui-chart",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "fa6393a7d7e3b7d7",
        "name": "equivalent_diameter vs. MeanValue",
        "label": "equivalent_diameter vs. MeanValue",
        "order": 1,
        "chartType": "scatter",
        "category": "equivalent_diameter vs. MeanValue",
        "categoryType": "str",
        "xAxisLabel": "Equivalent Diameter (μm)",
        "xAxisProperty": "payload.metadata.equivalent_diameter",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "MeanValue (0–255, grayscale value)",
        "yAxisProperty": "payload.metadata.MeanValue",
        "yAxisPropertyType": "msg",
        "ymin": "150",
        "ymax": "255",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#8c00ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 560,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "a90099cfe7a37a37",
        "type": "ui-chart",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "fa6393a7d7e3b7d7",
        "name": "MeanSaturation vs. MeanValue",
        "label": "MeanSaturation vs. MeanValue",
        "order": 2,
        "chartType": "scatter",
        "category": "MeanSaturation vs. MeanValue",
        "categoryType": "str",
        "xAxisLabel": "MeanSaturation (%)",
        "xAxisProperty": "payload.metadata.MeanSaturation",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "MeanValue (0–255, grayscale value)",
        "yAxisProperty": "payload.metadata.MeanValue",
        "yAxisPropertyType": "msg",
        "ymin": "150",
        "ymax": "255",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#ff9500",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 550,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "df0dcb1175b8bd5f",
        "type": "ui-chart",
        "z": "14f8c9b5ce1235cc",
        "g": "979647e2e34284fb",
        "group": "ed357f41cdf951bc",
        "name": "x vs. y",
        "label": "x vs. y",
        "order": 1,
        "chartType": "scatter",
        "category": "x vs. y",
        "categoryType": "str",
        "xAxisLabel": "x",
        "xAxisProperty": "payload.metadata.x",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "y",
        "yAxisProperty": "payload.metadata.y",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#2b00ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 930,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "64c27d4448d8f79f",
        "type": "ui-event",
        "z": "2d14eef8a9f51595",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "b47026c6196ae54f"
            ]
        ]
    },
    {
        "id": "b47026c6196ae54f",
        "type": "switch",
        "z": "2d14eef8a9f51595",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "5676b794b1a00c6a"
            ]
        ]
    },
    {
        "id": "5676b794b1a00c6a",
        "type": "switch",
        "z": "2d14eef8a9f51595",
        "name": "msg.payload.page.path === \"/export\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/export",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3cfcc4372e4a3fb2",
        "type": "ui-template",
        "z": "2d14eef8a9f51595",
        "group": "5d3c24612267b256",
        "page": "",
        "ui": "",
        "name": "Navigation Bottom",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"segmentation\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Segmentation\n        </v-btn>\n      </v-col>\n\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1290,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "32d0387ec0cb419f",
        "type": "ui-template",
        "z": "2d14eef8a9f51595",
        "group": "1c2cd2bf4d4ab815",
        "page": "",
        "ui": "",
        "name": "Navigation Top",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<template>\n  <v-container fluid class=\"ma-0 pa-0\">\n    <v-row align=\"center\" justify=\"space-between\" class=\"px-2\">\n      <!-- Back to Preview -->\n      <v-col cols=\"auto\">\n        <v-btn\n          to=\"segmentation\"\n          color=\"primary\"\n          rounded=\"lg\"\n          class=\"px-4\" variant=\"text\" size=\"large\"\n        >\n          <v-icon start>mdi-chevron-left</v-icon>\n          Segmentation\n        </v-btn>\n      </v-col>\n\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6521e33d1a35408e",
        "type": "ui-template",
        "z": "2d14eef8a9f51595",
        "group": "d1c2dcd580716d02",
        "page": "",
        "ui": "",
        "name": "Viewer",
        "order": 1,
        "width": "12",
        "height": "8",
        "head": "",
        "format": "  <iframe \n    src=\"http://pkscope-rich-kettle-10463/admin/fs/files/home/pi/data/\" \n    allowfullscreen>\n  </iframe>\n  <style>\n    iframe {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      border:none;\n      background:red;\n    }\n  </style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1330,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f142197f943e06c3",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "f9b137cda6a41cc8",
        "group": "0b938df814df6f89",
        "page": "",
        "ui": "",
        "name": "template with dialog",
        "order": 1,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div>\n    <v-text-field\n    type=\"number\"\n      label=\"Prepend inner\"\n      prepend-inner-icon=\"mdi-information-outline\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      @click:prepend-inner=\"showDialog = true\"\n    ></v-text-field>\n\n    <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title> Information </v-card-title>\n        <v-card-text>\n          This is some additional information displayed in a dialog.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn text @click=\"showDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n      }\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ba32092924c21704",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "f9b137cda6a41cc8",
        "group": "0b938df814df6f89",
        "name": "template with dialog",
        "order": 4,
        "width": "4",
        "height": "1",
        "content": "# Template with dialog\n```html\n<template>\n  <div>\n    <v-text-field\n      label=\"Prepend inner\"\n      prepend-inner-icon=\"mdi-information-outline\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      @click:prepend-inner=\"showDialog = true\"\n    ></v-text-field>\n\n    <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title> Information </v-card-title>\n        <v-card-text>\n          This is some additional information displayed in a dialog.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn text @click=\"showDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n      }\n    },\n  }\n</script>\n\n```",
        "className": "",
        "x": 200,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "09145421eca576b2",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "e42e71164274acdc",
        "group": "0b938df814df6f89",
        "page": "",
        "ui": "",
        "name": "template persistent hint",
        "order": 5,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      persistent-hint\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 470,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f467dd95ca327abe",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "a2eff4bb38731253",
        "group": "0b938df814df6f89",
        "page": "",
        "ui": "",
        "name": "template hidden hint",
        "order": 6,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "96d4f5ed69c26184",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "e42e71164274acdc",
        "group": "0b938df814df6f89",
        "name": "template persistent hint",
        "order": 2,
        "width": "4",
        "height": "1",
        "content": "# Template persistent hint\n```html\n<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      persistent-hint\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n</template>\n\n```",
        "className": "",
        "x": 470,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9460aed131d64851",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "a2eff4bb38731253",
        "group": "0b938df814df6f89",
        "name": "template hidden hint",
        "order": 3,
        "width": "4",
        "height": "1",
        "content": "# Template hidden hint\n```html\n<template>\n    <v-text-field\n    type=\"number\"\n      label=\"Label\"\n      variant=\"outlined\"\n      suffix=\"suffix\"\n      density=\"compact\"\n      clearable\n      hint=\"This is some additional information displayed in a hint.\"\n    ></v-text-field>\n</template>\n\n```",
        "className": "",
        "x": 740,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b82b3ee278d4bc",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "224fcab0880dd093",
        "group": "42ad8472e579096e",
        "page": "",
        "ui": "",
        "name": "Sliders",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card class=\"ma-20 pa-2\">\n    <v-row class=\"ma-20 pa-2\">\n      <v-col cols=\"12\" sm=\"10\">\n        <v-slider\n          v-model=\"slider\"\n          :max=\"max\"\n          :min=\"min\"\n          :step=\"0.2\"\n          class=\"align-center\"\n          hide-details\n          label=\"Label\"\n          :thumb-size=\"30\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"2\">\n        <v-text-field\n          v-model=\"slider\"\n          prepend-inner-icon=\"mdi-information-outline\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"suffix\"\n          density=\"compact\"\n          @click:prepend-inner=\"showDialog = true\"\n        />\n        <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n          <v-card>\n            <v-card-title>Information</v-card-title>\n            <v-card-text>\n              This is some additional information displayed in a dialog.\n            </v-card-text>\n            <v-card-actions>\n              <v-btn text @click=\"showDialog = false\">Close</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n        min: -50,\n        max: 90,\n        slider: 40,\n      }\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "cead53fe6d7fe793",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "224fcab0880dd093",
        "group": "42ad8472e579096e",
        "name": "Slides description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for slider\n```html\n<template>\n  <v-card class=\"ma-20 pa-2\">\n    <v-row class=\"ma-20 pa-2\">\n      <v-col cols=\"12\" sm=\"10\">\n        <v-slider\n          v-model=\"slider\"\n          :max=\"max\"\n          :min=\"min\"\n          :step=\"0.2\"\n          class=\"align-center\"\n          hide-details\n          label=\"Label\"\n          :thumb-size=\"30\"\n        />\n      </v-col>\n      <v-col cols=\"12\" sm=\"2\">\n        <v-text-field\n          v-model=\"slider\"\n          prepend-inner-icon=\"mdi-information-outline\"\n          type=\"number\"\n          variant=\"outlined\"\n          hide-details\n          suffix=\"suffix\"\n          density=\"compact\"\n          @click:prepend-inner=\"showDialog = true\"\n        />\n        <v-dialog v-model=\"showDialog\" max-width=\"500px\">\n          <v-card>\n            <v-card-title>Information</v-card-title>\n            <v-card-text>\n              This is some additional information displayed in a dialog.\n            </v-card-text>\n            <v-card-actions>\n              <v-btn text @click=\"showDialog = false\">Close</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        showDialog: false, // Controls dialog visibility\n        min: -50,\n        max: 90,\n        slider: 40,\n      }\n    },\n  }\n</script>\n```",
        "className": "",
        "x": 150,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7777baf58bd1bc87",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "951b589e9ecbbb70",
        "group": "e461e16bf6fe45b0",
        "page": "",
        "ui": "",
        "name": "Button toggles",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-btn-toggle\n    v-model=\"toggle_btn\"\n    color=\"primary\"\n    mandatory\n    shaped\n    class=\"d-flex justify-space-between\"\n      variant=\"outlined\" divided\n  >\n    <v-btn class=\"flex-grow-1\"> 1 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 2 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 3 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 4 </v-btn>\n  </v-btn-toggle>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        toggle_btn: 0,\n      }\n    },\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "a43e9d9c640f6a51",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "951b589e9ecbbb70",
        "group": "e461e16bf6fe45b0",
        "name": "Button toggles description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for btn group\n\n```html\n<template>\n  <v-btn-toggle\n    v-model=\"toggle_btn\"\n    color=\"primary\"\n    mandatory\n    shaped\n    class=\"d-flex justify-space-between\"\n  >\n    <v-btn class=\"flex-grow-1\"> 1 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 2 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 3 </v-btn>\n\n    <v-btn class=\"flex-grow-1\"> 4 </v-btn>\n  </v-btn-toggle>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        toggle_btn: 0,\n      }\n    },\n  }\n</script>\n\n```",
        "className": "",
        "x": 180,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "6d725e9d6e6752bd",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "0d9513e4fa8e671f",
        "group": "3496e96aaf509c63",
        "name": "Vuetify links",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "# Vuetify Resources and Examples\n\nThis document provides useful links and references for working with Vuetify components, icons, and examples.\n\n## Vuetify Documentation\n- **Component Usage**: Learn how to use components in Vuetify.  \n  [View Documentation](https://vuetifyjs.com/en/components/all/#containment)\n\n- **API Reference**: Explore the full API details for `v-field`.  \n  [View API](https://vuetifyjs.com/en/api/v-field/)\n\n## Icons\n- **Material Design Icons**: Access the Material Design Icons (MDI) library for Vuetify projects.  \n  [Explore Icons](https://pictogrammers.github.io/@mdi/font/2.0.46/)\n\n## Code Playground\n- **Vue Play**: Experiment with Vue.js and Vuetify components in an interactive playground.  \n  [Open Playground](https://play.vuetifyjs.com/#eNrFVdtu2kAQ/ZWV1UdsQ2jUyKIRacVDq6qNClIf4jws9hg2We9ae+HSKP/e2TUYQ0IUibaRAMvnzM7MOR7GNw+BVll8VVXRwkKQBAMDZcWpgctUEDJYhJkUhjIBihTcstzDnlByubnZxHGCX/0xDd6nQcN4TtvpHGgO6vJaQcFWpJCK5JJzqkhmlQKRrQdxO65JjChmPVLo4rCQgZUJCwY8J5xOgWPMVSmtMGlAFpRbQKDXjbpdvK98Kwi8wyyuzu7wkfLurlZ9mgljW2xNWAKbzc2/0v7LZ29pP7uotWvfAQJ8qt9QPZSUcRwEvIi/7MEOJo0dI1+O5rkCjbLbIVuDYEVx/GGfbNwazlyGKJNlO+DN7DOsBPJbCvgP3n1zVzLBmOeN650l/W7ihqvNmnXlSNfoEUuvx5NTvNwymx2FyCBubbCgExiNbMFm0Z2WAhfcgzuUBvgMK8ZB/agMkwKnISGecRzlXC6/eswoC50tns0hu38Gv9Mrh6EYHCxQC9TacIaqGaBnjh6Nv3v/GrKUuXXD9gL5E7Tk1vVYh32yIse2W3G+2y9lJZVhYjbRo5UBobeiXKMu8tHHpwFu+c8vSN+124/6/lwq8IM+Ml8hLGl14GRN7KfBKnW7c2MqncRxlgs8lgNnCxUJMLGoyniIYbHC7YzjEeIWGPaj86jXj3OmTRuPQJfhFB84motZWtoxgWHF+hW1NpFY4kN0XlfYQCGOuHYlnqSO/cNUIb6f8H/lTH+dpINje7IOuCfS9jznTNzrw8F1qyshNyfq9Wlu60KPHWE59z+3fwDtNYW9)\n\n",
        "className": "",
        "x": 130,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "eeeea47645f9daca",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "9ac62e47f20b26b7",
        "group": "c503a4c01451fec2",
        "name": "Preview description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for preview\n\n## Option 1 - ElevateZoom from jQuery\n\nUse the library depending on jQuery - [ElevateZoom](https://igorlino.github.io/elevatezoom-plus/)\n\n```html\n<script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/gh/igorlino/elevatezoom-plus@1.1.6/src/jquery.ez-plus.js\"></script>\n\n<div>\n  <img \n    id=\"zoom\" \n    src=\"http://90.28.148.199/ps/hal/camera/streams/preview.mjpg\" \n    data-zoom-image=\"http://90.28.148.199/ps/hal/camera/streams/preview.mjpg\" \n    alt=\"Live camera stream with zoom feature\" \n  />\n</div>\n\n<script>\n  $(document).ready(function () {\n    $('#zoom').ezPlus({\n      scrollZoom: true,      \n    });\n  });\n</script>\n```\n## Option 2 - ngx-image-zoom from AngularJS\n\nUse the pure Angular library - [ngx-image-zoom](https://www.npmjs.com/package/ngx-image-zoom)\n",
        "className": "",
        "x": 150,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "55bf230acc0db31a",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "9ac62e47f20b26b7",
        "group": "c503a4c01451fec2",
        "page": "",
        "ui": "",
        "name": "Preview",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<!-- Include jQuery and ElevateZoom-Plus -->\n<script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/gh/igorlino/elevatezoom-plus@1.1.6/src/jquery.ez-plus.js\"></script>\n\n<!-- Zoomable Image -->\n<template>\n  <v-row>\n    <v-col cols=\"8\">\n      <v-card variant=\"outlined\" width=\"auto\" height=\"800px\" class=\"pa-0 ma-0\"\n        >\n          <img\n          id=\"zoom\"\n          src=\"/ps/hal/camera/streams/preview.mjpg\"\n          data-zoom-image=\"http://90.28.148.199/ps/hal/camera/streams/preview.mjpg\"\n          alt=\"Live camera stream with zoom feature\"\n          style=\"\n            transform: rotate(-90deg);\n            margin-left: -100px;\n            margin-top: 100px;\n          \"\n          width=\"800px\"\n          height=\"600px\"\n      /></v-card>\n    </v-col>\n    <v-col cols=\"4\">\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n      <v-text-field\n        type=\"number\"\n        label=\"Label\"\n        variant=\"outlined\"\n        suffix=\"suffix\"\n        density=\"compact\"\n        clearable\n        hint=\"This is some additional information displayed in a hint.\"\n      ></v-text-field>\n    </v-col>\n  </v-row>\n</template>\n\n\n<!-- Activate Zoom -->\n<script>\n  $(document).ready(function () {\n    $('#zoom').ezPlus({\n      scrollZoom: true,       // Enable scroll zoom\n    });\n  });\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "ff04e338f28791c1",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "f6e28f1fc85830b2",
        "group": "9919d82f68c7a152",
        "name": "Textareas description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for Textareas\n\n```html\n<template>\n  <v-textarea\n    clearable\n    label=\"Label\"\n    variant=\"outlined\"\n    row-height=\"20\"\n    rows=\"2\"\n  ></v-textarea>\n</template>\n\n\n```",
        "className": "",
        "x": 160,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "a1de4783b40b22c7",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "f6e28f1fc85830b2",
        "group": "9919d82f68c7a152",
        "page": "",
        "ui": "",
        "name": "Textareas",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-textarea\n    clearable\n    label=\"Label\"\n    variant=\"outlined\"\n    row-height=\"20\"\n    rows=\"2\"\n  ></v-textarea>\n</template>\n\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "af21295c7ed58d76",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "c4dc9bdc60c02255",
        "group": "2ca4adc305fbadd5",
        "page": "",
        "ui": "",
        "name": "Home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-empty-state\n    headline=\"Welcome,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://vuetifyjs.com/introduction/why-vuetify/#feature-guides\"\n            prepend-icon=\"$vuetify\"\n            target=\"_blank\"\n            text=\"Start with our dedicated feature guides\"\n            title=\"Learn Vuetify\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://play.vuetifyjs.com\"\n            prepend-icon=\"$vuetify-play\"\n            target=\"_blank\"\n            text=\"Test Vuetify out in our playground\"\n            title=\"Create a Playground\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://bin.vuetifyjs.com\"\n            prepend-icon=\"mdi-delete\"\n            target=\"_blank\"\n            text=\"Create a new bin to store your code\"\n            title=\"Create a Bin\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://issues.vuetifyjs.com\"\n            prepend-icon=\"$warning\"\n            target=\"_blank\"\n            text=\"File a bug report for Vuetify\"\n            title=\"Report a Bug\"\n          ></v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-empty-state>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0666ca0a7a83550a",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "c4dc9bdc60c02255",
        "group": "2ca4adc305fbadd5",
        "name": "Home description",
        "order": 2,
        "width": "0",
        "height": "0",
        "content": "# Template for Home\n```html\n<template>\n  <v-empty-state\n    headline=\"Welcome,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://vuetifyjs.com/introduction/why-vuetify/#feature-guides\"\n            prepend-icon=\"$vuetify\"\n            target=\"_blank\"\n            text=\"Start with our dedicated feature guides\"\n            title=\"Learn Vuetify\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://play.vuetifyjs.com\"\n            prepend-icon=\"$vuetify-play\"\n            target=\"_blank\"\n            text=\"Test Vuetify out in our playground\"\n            title=\"Create a Playground\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://bin.vuetifyjs.com\"\n            prepend-icon=\"mdi-delete\"\n            target=\"_blank\"\n            text=\"Create a new bin to store your code\"\n            title=\"Create a Bin\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://issues.vuetifyjs.com\"\n            prepend-icon=\"$warning\"\n            target=\"_blank\"\n            text=\"File a bug report for Vuetify\"\n            title=\"Report a Bug\"\n          ></v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-empty-state>\n</template>\n```",
        "className": "",
        "x": 150,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bdd5061dc2808c7b",
        "type": "ui-event",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "ui": "e6ae26617c24c3ea",
        "name": "UI Event",
        "x": 120,
        "y": 1280,
        "wires": [
            [
                "c7af759e6348052a"
            ]
        ]
    },
    {
        "id": "c7af759e6348052a",
        "type": "switch",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "msg.topic === \"$pageview\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 1280,
        "wires": [
            [
                "05f282f697c8d264"
            ]
        ]
    },
    {
        "id": "f8450ada286a255f",
        "type": "debug",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "msg.payload.page.path",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.page.path",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1280,
        "wires": []
    },
    {
        "id": "05f282f697c8d264",
        "type": "switch",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "msg.payload.page.path === \"/home\"",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/load",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1280,
        "wires": [
            [
                "f8450ada286a255f"
            ]
        ]
    },
    {
        "id": "1c2b9fbce068ea00",
        "type": "ui-flowviewer",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "name": "",
        "group": "4b77e32bb8af68b1",
        "order": 1,
        "width": "0",
        "flow": "[     {         \"id\": \"f8450ada286a255f\",         \"type\": \"debug\",         \"z\": \"061f6587029fa891\",         \"name\": \"msg.payload.page.path\",         \"active\": true,         \"tosidebar\": true,         \"console\": false,         \"tostatus\": false,         \"complete\": \"payload.page.path\",         \"targetType\": \"msg\",         \"statusVal\": \"\",         \"statusType\": \"auto\",         \"x\": 1030,         \"y\": 40,         \"wires\": []     },     {         \"id\": \"05f282f697c8d264\",         \"type\": \"switch\",         \"z\": \"061f6587029fa891\",         \"name\": \"msg.payload.page.path === \\\"/home\\\"\",         \"property\": \"payload.page.path\",         \"propertyType\": \"msg\",         \"rules\": [             {                 \"t\": \"eq\",                 \"v\": \"/load\",                 \"vt\": \"str\"             }         ],         \"checkall\": \"true\",         \"repair\": false,         \"outputs\": 1,         \"x\": 690,         \"y\": 40,         \"wires\": [             [                 \"f8450ada286a255f\",                 \"328128b08bc72b65\"             ]         ]     },     {         \"id\": \"c7af759e6348052a\",         \"type\": \"switch\",         \"z\": \"061f6587029fa891\",         \"name\": \"msg.topic === \\\"$pageview\\\"\",         \"property\": \"topic\",         \"propertyType\": \"msg\",         \"rules\": [             {                 \"t\": \"eq\",                 \"v\": \"$pageview\",                 \"vt\": \"str\"             }         ],         \"checkall\": \"true\",         \"repair\": false,         \"outputs\": 1,         \"x\": 340,         \"y\": 40,         \"wires\": [             [                 \"05f282f697c8d264\"             ]         ]     },     {         \"id\": \"bdd5061dc2808c7b\",         \"type\": \"ui-event\",         \"z\": \"061f6587029fa891\",         \"ui\": \"e6ae26617c24c3ea\",         \"name\": \"UI Event\",         \"x\": 80,         \"y\": 40,         \"wires\": [             [                 \"c7af759e6348052a\"             ]         ]     },     {         \"id\": \"e6ae26617c24c3ea\",         \"type\": \"ui-base\",         \"name\": \"My Dashboard\",         \"path\": \"/dashboard\",         \"appIcon\": \"\",         \"includeClientData\": true,         \"acceptsClientConfig\": [             \"ui-notification\",             \"ui-control\"         ],         \"showPathInSidebar\": true,         \"showPageTitle\": false,         \"navigationStyle\": \"fixed\",         \"titleBarStyle\": \"fixed\",         \"showReconnectNotification\": true,         \"notificationDisplayTime\": \"1\",         \"showDisconnectNotification\": true     } ]",
        "height": "0",
        "x": 1030,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9496c5ceae312a6b",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "f8c01569bc2d2351",
        "group": "4b77e32bb8af68b1",
        "name": "Illustration of the Flow",
        "order": 2,
        "width": 0,
        "height": 0,
        "content": "\n\n## Illustration of the Flow\n\n### **1. UI Event**\n**Node Name**: `UI Event`  \n**Description**: Captures user events from the dashboard (e.g., page navigation).  \n**Connected Dashboard**: `My Dashboard`.\n\n```javascript\n// Emits messages with the topic and page path when an event occurs.\n```\n\n---\n\n### **2. Switch: `$pageview`**\n**Node Name**: `msg.topic === \"$pageview\"`  \n**Description**: Filters messages where `msg.topic` equals `$pageview`, ensuring only page navigation events are processed.\n\n**Rule**:\n```javascript\nmsg.topic === \"$pageview\";\n```\n\n---\n\n### **3. Switch: `/load`**\n**Node Name**: `msg.payload.page.path === \"/load\"`  \n**Description**: Filters messages to pass only those where the page path matches `/load`.\n\n**Rule**:\n```javascript\nmsg.payload.page.path === \"/load\";\n```\n\n---\n\n### **4. Debug**\n**Node Name**: `msg.payload.page.path`  \n**Description**: Outputs the value of `msg.payload.page.path` to the debug sidebar in Node-RED for monitoring purposes.\n\n```javascript\n// Outputs:\n// msg.payload.page.path\n```\n\n---\n\n## Supporting Details\n\n- **Dashboard Base**: `My Dashboard`  \n  - Accessible at `/dashboard`.  \n  - Includes navigation and notification configurations for seamless user interaction.\n\n---\n",
        "className": "",
        "x": 1060,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "bdef59faea812013",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "group": "72483a7aac978971",
        "page": "",
        "ui": "",
        "name": "",
        "order": 3,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template>\n  <v-text-field\n    v-model=\"variable\"\n    label=\"My variable\"\n    variant=\"outlined\"\n    hide-details=\"auto\"\n    @input=\"sendUpdate\"\n  />\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      variable: this.msg?.payload?.variable ?? ''\n    }\n  },\n  watch: {\n    // when a new message comes in with a variable, update the field\n    msg: {\n      handler(newMsg) {\n        if (newMsg?.payload?.variable !== undefined) {\n          this.variable = newMsg.payload.variable\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    sendUpdate() {\n      this.send({\n        topic: 'variable',\n        payload: this.variable\n      })\n    }\n  }\n}\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 1460,
        "wires": [
            [
                "fc73d6b9b216ac9c"
            ]
        ]
    },
    {
        "id": "5a9af1c11b3c3c31",
        "type": "function",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "name": "get global variable",
        "func": "const keys = global.keys(); // Get all global variable keys\nmsg.payload = {}; // Initialize the payload object\n\nkeys.forEach(key => {\n    // Ignore keys that start with \"$\"\n    if (!key.startsWith('$')) {\n        msg.payload[key] = global.get(key);\n    }\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 1460,
        "wires": [
            [
                "bdef59faea812013"
            ]
        ]
    },
    {
        "id": "fc73d6b9b216ac9c",
        "type": "function",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "name": "set global variable",
        "func": "// Set a value in the global context\nif (msg.topic) {\n    global.set(msg.topic, msg.payload);\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f11510712aac2d",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "group": "72483a7aac978971",
        "name": "Illustration of the Flow",
        "order": 2,
        "width": 0,
        "height": 0,
        "content": "## Illustration of the Flow\n\n### **1. Get Global Variable**\n**Node Name**: `get global variable`  \n**Description**: Retrieves a global variable (`variable`) stored in the Node-RED context.\n\n```javascript\nconst keys = global.keys(); // Get all global variable keys\nmsg.payload = {}; // Initialize the payload object\n\nkeys.forEach(key => {\n    // Ignore keys that start with \"$\"\n    if (!key.startsWith('$')) {\n        msg.payload[key] = global.get(key);\n    }\n});\n\nreturn msg;\n\n```\n\n---\n\n### **2. Template**\n**Node Name**: `template`  \n**Description**: Displays a Vue.js-based text field in the user interface, allowing the user to view and update the global variable.\n\n```html\n<template>\n  <v-text-field\n    v-model=\"variable\"\n    label=\"My variable\"\n    variant=\"outlined\"\n    hide-details=\"auto\"\n    @input=\"sendUpdate\"\n  />\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      variable: this.msg?.payload?.variable ?? ''\n    }\n  },\n  watch: {\n    // when a new message comes in with a variable, update the field\n    msg: {\n      handler(newMsg) {\n        if (newMsg?.payload?.variable !== undefined) {\n          this.variable = newMsg.payload.variable\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    sendUpdate() {\n      this.send({\n        topic: 'variable',\n        payload: this.variable\n      })\n    }\n  }\n}\n</script>\n\n```\n\n---\n\n### **3. Set Global Variable**\n**Node Name**: `set global variable`  \n**Description**: Updates the global variable (`variable`) with the value entered in the UI text field.\n\n```javascript\n// Set a value in the global context\nif (msg.topic) {\n    global.set(msg.topic, msg.payload);\n}\nreturn msg;\n\n```\n\n---\n\n## Supporting Details\n\n- **UI Group**: `Value and payloads`  \n  Groups the widgets under a dashboard section for better organization.\n\n- **UI Page**: `Data in global.json`  \n  Displays the group on a dashboard page accessible via the `/data` URL.\n\n- **Theme**: `FairScope Theme`  \n  Configures the visual style of the dashboard, using a clean and modern design with primary and background colors.\n",
        "className": "",
        "x": 620,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "be327c38d0d4571c",
        "type": "ui-flowviewer",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "name": "",
        "group": "72483a7aac978971",
        "order": 1,
        "width": "0",
        "flow": "[     {         \"id\": \"5a9af1c11b3c3c31\",         \"type\": \"function\",         \"z\": \"775111265b9951a8\",         \"name\": \"get global variable\",         \"func\": \"// Retrieve the global variable\\nmsg.variable = global.get('variable');\\n\\nreturn msg;\\n\",         \"outputs\": 1,         \"timeout\": 0,         \"noerr\": 0,         \"initialize\": \"\",         \"finalize\": \"\",         \"libs\": [],         \"x\": 290,         \"y\": 40,         \"wires\": [             [                 \"bdef59faea812013\"             ]         ]     },     {         \"id\": \"bdef59faea812013\",         \"type\": \"ui-template\",         \"z\": \"775111265b9951a8\",         \"group\": \"9db62e7f60daa367\",         \"page\": \"\",         \"ui\": \"\",         \"name\": \"\",         \"order\": 2,         \"width\": \"6\",         \"height\": \"1\",         \"head\": \"\",         \"format\": \"<template>\\n    <v-text-field\\n        label=\\\"My variable\\\"\\n        variant=\\\"outlined\\\"\\n        v-model=\\\"msg.variable\\\"\\n      hide-details=\\\"auto\\\"\\n        @update:model-value=\\\"send({ variable: msg.variable})\\\"\\n    ></v-text-field>\\n</template>\\n\",         \"storeOutMessages\": true,         \"passthru\": true,         \"resendOnRefresh\": true,         \"templateScope\": \"local\",         \"className\": \"\",         \"x\": 520,         \"y\": 40,         \"wires\": [             [                 \"fc73d6b9b216ac9c\"             ]         ]     },     {         \"id\": \"fc73d6b9b216ac9c\",         \"type\": \"function\",         \"z\": \"775111265b9951a8\",         \"name\": \"set global variable\",         \"func\": \"// Set a value in the global context\\nglobal.set('variable', msg.variable);\\n\\nreturn msg;\\n\",         \"outputs\": 1,         \"timeout\": 0,         \"noerr\": 0,         \"initialize\": \"\",         \"finalize\": \"\",         \"libs\": [],         \"x\": 750,         \"y\": 40,         \"wires\": [             []         ]     },     {         \"id\": \"9db62e7f60daa367\",         \"type\": \"ui-group\",         \"name\": \"Get and set variable in Global\",         \"page\": \"69706da10df85266\",         \"width\": \"12\",         \"height\": \"1\",         \"order\": 1,         \"showTitle\": true,         \"className\": \"\",         \"visible\": \"true\",         \"disabled\": \"false\",         \"groupType\": \"default\"     },     {         \"id\": \"69706da10df85266\",         \"type\": \"ui-page\",         \"name\": \"Data in global.json\",         \"ui\": \"e6ae26617c24c3ea\",         \"path\": \"/data\",         \"icon\": \"mdi-database\",         \"layout\": \"grid\",         \"theme\": \"acdf17df5536b1d3\",         \"breakpoints\": [             {                 \"name\": \"Default\",                 \"px\": \"0\",                 \"cols\": \"3\"             },             {                 \"name\": \"Tablet\",                 \"px\": \"576\",                 \"cols\": \"6\"             },             {                 \"name\": \"Small Desktop\",                 \"px\": \"768\",                 \"cols\": \"9\"             },             {                 \"name\": \"Desktop\",                 \"px\": \"1024\",                 \"cols\": \"12\"             }         ],         \"order\": 2,         \"className\": \"\",         \"visible\": \"true\",         \"disabled\": \"false\"     },     {         \"id\": \"e6ae26617c24c3ea\",         \"type\": \"ui-base\",         \"name\": \"My Dashboard\",         \"path\": \"/dashboard\",         \"appIcon\": \"\",         \"includeClientData\": true,         \"acceptsClientConfig\": [             \"ui-notification\",             \"ui-control\"         ],         \"showPathInSidebar\": true,         \"showPageTitle\": false,         \"navigationStyle\": \"fixed\",         \"titleBarStyle\": \"fixed\",         \"showReconnectNotification\": true,         \"notificationDisplayTime\": \"1\",         \"showDisconnectNotification\": true     },     {         \"id\": \"acdf17df5536b1d3\",         \"type\": \"ui-theme\",         \"name\": \"FairScope Theme\",         \"colors\": {             \"surface\": \"#ffffff\",             \"primary\": \"#0094ce\",             \"bgPage\": \"#eeeeee\",             \"groupBg\": \"#ffffff\",             \"groupOutline\": \"#cccccc\"         },         \"sizes\": {             \"density\": \"default\",             \"pagePadding\": \"10px\",             \"groupGap\": \"10px\",             \"groupBorderRadius\": \"0px\",             \"widgetGap\": \"10px\"         }     } ]",
        "height": "0",
        "x": 590,
        "y": 1500,
        "wires": []
    },
    {
        "id": "54d6eeb38d467c03",
        "type": "ui-template",
        "z": "ae92a0a869ca847f",
        "group": "1c1efabff5115209",
        "page": "",
        "ui": "",
        "name": "template number field",
        "order": 1,
        "width": "4",
        "height": "1",
        "head": "",
        "format": "<template>\n <v-number-input\n          label=\"Volume of the collector\"\n          variant=\"outlined\"\n          :max=\"50\"\n          :min=\"10\"\n          :step=\"2\"\n          :model-value=\"30\"\n          control-variant=\"hidden\"\n          :precision=\"2\"\n          suffix=\"mL\"\n          clearable\n          hint=\"The volume of water collected after sampling, measured in milliliters (ml).\"\n        ></v-number-input>\n\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 180,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "48666748de82f1a9",
        "type": "ui-markdown",
        "z": "ae92a0a869ca847f",
        "group": "1c1efabff5115209",
        "name": "template number field",
        "order": 2,
        "width": "4",
        "height": "1",
        "content": "# Template hidden hint\n```html\n<template>\n <v-number-input\n          label=\"Volume of the collector\"\n          variant=\"outlined\"\n          :max=\"50\"\n          :min=\"10\"\n          :step=\"2\"\n          :model-value=\"30\"\n          control-variant=\"hidden\"\n          :precision=\"2\"\n          suffix=\"mL\"\n          clearable\n          hint=\"The volume of water collected after sampling, measured in milliliters (ml).\"\n        ></v-number-input>\n</template>\n\n```",
        "className": "",
        "x": 180,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ade743e5b35d1353",
        "type": "inject",
        "z": "ae92a0a869ca847f",
        "g": "c0721ac2a3ae24b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "5a9af1c11b3c3c31"
            ]
        ]
    },
    {
        "id": "495e1733d60d5651",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "actuator/pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "imager/image/update_config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "imager/image/image",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "segmenter/segment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "restart/hardware_controller",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "restart/segmenter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "restart/planktoscope",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "purge",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 350,
        "y": 160,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ],
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ],
            [
                "0fdba9b9b11427db"
            ],
            [
                "8dc5b8c9bfd7cc87"
            ],
            [
                "019662c5bf05e430"
            ],
            [
                "5f5dec5ac53119ae"
            ],
            [
                "61dde05d9a3f805e"
            ],
            [
                "2a55ae214f1e7273"
            ],
            [
                "8447c9830c3aed1e"
            ]
        ]
    },
    {
        "id": "0fdba9b9b11427db",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "update_config command",
        "func": "const now = new Date();\n\nmsg.topic = \"imager/image\";\n\nconst pad = (n) => n.toString().padStart(2, '0');\n\nlet formattedDate = `${now.getUTCFullYear()}_${pad(now.getUTCMonth() + 1)}_${pad(now.getUTCDate())}_${pad(now.getUTCHours())}_${pad(now.getUTCMinutes())}_${pad(now.getUTCSeconds())}`;\n\nglobal.set(\"path\", `${now.toISOString().split('T')[0]}/S1/${formattedDate}`);\n\nmsg.payload = {\n    \"action\": \"update_config\",\n    \"config\": {\n        \"sample_project\": \"FairScope_TenEarth\",\n        \"sample_id\": \"S1\",\n        \"sample_operator\": \"Fairscope\",\n        \"sample_instrument\": \"PlanktoScope v2.6\",\n        \"sample_date\": now.toISOString().split('T')[0],\n        \"acq_id\": formattedDate,\n        \"acq_instrument\": \"PlanktoScope v2.6\",\n        \"acq_magnification\": \"1.2\",\n        \"acq_software\": \"PlanktoScope v2024.0.0-alpha.1\",\n        \"acq_resolution\": \"1080p\",\n        \"acq_time_between_frames\": 0.1,\n        \"acq_minimum_mesh\": 20,\n        \"acq_maximum_mesh\": 300,\n        \"acq_min_esd\": 20,\n        \"acq_max_esd\": 300,\n        \"acq_camera_name\": \"HQ Camera\",\n        \"process_pixel\": 0.75,\n        \"acq_local_datetime\": now.toISOString().split('.')[0] + 'Z',\n        \"object_date\": now.toISOString().split('T')[0],\n        \"object_time\": now.toISOString().split('T')[1].split('.')[0] + 'Z',\n        \"object_lat\": 48.587424697483556,\n        \"object_lon\": -3.8382606493497824\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 180,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "019662c5bf05e430",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "segment command",
        "func": "msg.payload = {\n  \"action\": \"segment\",\n  \"path\": global.get(\"path\"),\n  \"settings\": {\n    \"force\": false,\n    \"recursive\": true,\n    \"ecotaxa\": true,\n    \"keep\": true\n  }\n}\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 260,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "8dc5b8c9bfd7cc87",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "image command",
        "func": "msg.topic = \"imager/image\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 220,
        "wires": [
            [
                "1c782af30d1ff770",
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "1c782af30d1ff770",
        "type": "mqtt out",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 1270,
        "y": 100,
        "wires": []
    },
    {
        "id": "caf377d323526d14",
        "type": "mqtt in",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "",
        "topic": "status/#",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 100,
        "y": 800,
        "wires": [
            [
                "ff83a2795f988098"
            ]
        ]
    },
    {
        "id": "316dae6f231575b7",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "Count objects segmented",
        "func": "var objectCount = global.get('objectCount') || 0;\n\nif (msg.payload.status === 'Done') {\n    msg.payload.objectCount = objectCount;\n    objectCount=0;\n    }\nelse if (msg.topic === 'status/segmenter/metric') {\n    objectCount++;\n}\n\nglobal.set('objectCount', objectCount);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 860,
        "wires": [
            [
                "9e169af039fc8031"
            ]
        ]
    },
    {
        "id": "9e169af039fc8031",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "msg.payload.metadata.equivalent_diameter is not null",
        "property": "payload.metadata.equivalent_diameter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 880,
        "y": 860,
        "wires": [
            [
                "50629a570b41196e"
            ]
        ]
    },
    {
        "id": "1bc303a19fc9e38b",
        "type": "ui-template",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "7edf5f14f6ca0bdd",
        "page": "",
        "ui": "",
        "name": "Stream Pi Camera",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<center>\n  <img src=\"/ps/hal/camera/streams/preview.mjpg\"\n    alt=\"If you see this, there probably is an error either with your camera or with the python service. Please try restarting your machine.\"\n    width=\"100%\" height=\"100%\">\n</center>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ff83a2795f988098",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status/segmenter/metric",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 860,
        "wires": [
            [
                "316dae6f231575b7"
            ]
        ]
    },
    {
        "id": "fd3ae27267703c27",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "",
        "label": "Histogram - Equivalent Diameter",
        "order": 2,
        "chartType": "histogram",
        "category": "Equivalent Diameter (μm)",
        "categoryType": "str",
        "xAxisLabel": "Equivalent Diameter (μm)",
        "xAxisProperty": "payload.metadata.equivalent_diameter",
        "xAxisPropertyType": "msg",
        "xAxisType": "bins",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "20",
        "xmax": "100",
        "yAxisLabel": "Abundance",
        "yAxisProperty": "payload.metadata.equivalent_diameter",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": "80",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#00ff04",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1660,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5f5dec5ac53119ae",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "sudo systemctl restart planktoscope-org.controller.service",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart hardware controller",
        "x": 640,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "61dde05d9a3f805e",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "sudo systemctl restart planktoscope-org.segmenter.service",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart segmenter",
        "x": 610,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "527165cd7171fe26",
        "type": "ui-template",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "7edf5f14f6ca0bdd",
        "page": "",
        "ui": "",
        "name": "Actions Clock",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div class=\"clock-container\">\n        <canvas ref=\"clockCanvas\"></canvas>\n        <div class=\"legend\">\n            <div v-for=\"event in events\" :key=\"event.label\" class=\"legend-item\">\n                <span :style=\"{ backgroundColor: event.color }\" class=\"color-box\"></span>\n                {{ event.label }}\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            events: [\n                { start: 35, end: 36, label: \"Pump dead volume\", color: \"rgba(255, 0, 0, 0.3)\" },\n                { start: 36, end: 40, label: \"Acquisition\", color: \"rgba(0, 255, 0, 0.3)\" },\n                { start: 45, end: 8, label: \"Segmentation\", color: \"rgba(0, 0, 255, 0.3)\" },\n                { start: 18, end: 19, label: \"Purge data\", color: \"rgba(255, 0, 0, 0.3)\" },\n                { start: 34, end: 35, label: \"Agitation\", color: \"rgba(255, 255, 0, 0.3)\" },\n                { start: 25, end: 26, label: \"Restart segmenter\", color: \"rgba(255, 0, 255, 0.3)\" },\n                { start: 30, end: 31, label: \"Restart hardware controller\", color: \"rgba(0, 255, 255, 0.3)\" }\n            ],\n            currentMinute: null,\n            clockRadius: 100\n        };\n    },\n    mounted() {\n        this.updateClock();\n        setInterval(this.updateClock, 1000);\n    },\n    methods: {\n        updateClock() {\n            const now = new Date();\n            this.currentMinute = now.getMinutes() + now.getSeconds() / 60;\n            this.drawClock();\n        },\n        drawClock() {\n            const canvas = this.$refs.clockCanvas;\n            const ctx = canvas.getContext(\"2d\");\n            const size = this.clockRadius * 2;\n            canvas.width = size;\n            canvas.height = size;\n            ctx.clearRect(0, 0, size, size);\n            ctx.translate(this.clockRadius, this.clockRadius);\n\n            // Draw circle\n            ctx.beginPath();\n            ctx.arc(0, 0, this.clockRadius, 0, 2 * Math.PI);\n            ctx.stroke();\n\n            // Draw minute marks\n            for (let i = 0; i < 60; i += 10) {\n                const angle = (i / 60) * 2 * Math.PI - Math.PI / 2;\n                const x1 = Math.cos(angle) * (this.clockRadius - 5);\n                const y1 = Math.sin(angle) * (this.clockRadius - 5);\n                const x2 = Math.cos(angle) * (this.clockRadius - 15);\n                const y2 = Math.sin(angle) * (this.clockRadius - 15);\n                ctx.strokeStyle = \"black\";\n                ctx.lineWidth = 2;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n            }\n\n            // Draw event periods with colors\n            this.events.forEach(event => {\n                let startAngle = (event.start / 60) * 2 * Math.PI - Math.PI / 2;\n                let endAngle = (event.end / 60) * 2 * Math.PI - Math.PI / 2;\n                ctx.fillStyle = event.color;\n                ctx.beginPath();\n                ctx.moveTo(0, 0);\n                ctx.arc(0, 0, this.clockRadius - 10, startAngle, endAngle);\n                ctx.lineTo(0, 0);\n                ctx.fill();\n            });\n\n            // Draw current time hand\n            const angle = (this.currentMinute / 60) * 2 * Math.PI - Math.PI / 2;\n            const x = Math.cos(angle) * (this.clockRadius - 15);\n            const y = Math.sin(angle) * (this.clockRadius - 15);\n            ctx.strokeStyle = \"black\";\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(x, y);\n            ctx.stroke();\n        }\n    }\n};\n</script>\n\n<style scoped>\n.clock-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\ncanvas {\n    margin-right: 20px;\n}\n\n.legend {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.legend-item {\n    display: flex;\n    align-items: center;\n    margin: 5px 0;\n}\n\n.color-box {\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n    border-radius: 3px;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "50629a570b41196e",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "name": "convert px to um",
        "func": "// Conversion factor from pixels to micrometers (µm)\nconst px_to_um = 0.75;\n\n// Convert relevant measurements\nmsg.payload.metadata.equivalent_diameter = Math.round(msg.payload.metadata.equivalent_diameter * px_to_um);\nmsg.payload.metadata.width = Math.round(msg.payload.metadata.width * px_to_um);\nmsg.payload.metadata.height = Math.round(msg.payload.metadata.height * px_to_um);\nmsg.payload.metadata.area = Math.round(msg.payload.metadata.area * (px_to_um ** 2)); // Area is in square units\nmsg.payload.metadata.area_exc = Math.round(msg.payload.metadata.area_exc * (px_to_um ** 2));\nmsg.payload.metadata.convex_area = Math.round(msg.payload.metadata.convex_area * (px_to_um ** 2));\nmsg.payload.metadata.major = Math.round(msg.payload.metadata.major * px_to_um);\nmsg.payload.metadata.minor = Math.round(msg.payload.metadata.minor * px_to_um);\nmsg.payload.metadata.perim = Math.round(msg.payload.metadata[\"perim.\"] * px_to_um); // Ensure proper key reference\nmsg.payload.metadata.bounding_box_area = Math.round(msg.payload.metadata.bounding_box_area * (px_to_um ** 2));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 860,
        "wires": [
            [
                "fd3ae27267703c27",
                "60d1ad2a7e54e60e",
                "1997fd46811f0331",
                "5f091b11b5c9fa40",
                "0650e037776b3d8a"
            ]
        ]
    },
    {
        "id": "0aef9a09d59e574c",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "Histogram of equivalent_diameter",
        "order": 3,
        "width": "3",
        "height": "6",
        "content": "### Distribution of Object Sizes  \nUnderstanding the size distribution of planktonic objects helps identify dominant size classes and detect anomalies. A skewed distribution might indicate specific biological trends, such as a bloom of a particular species or a technical issue in the acquisition process.  \n\n*In the graph:*  \n- A **peak in smaller sizes** suggests dominance of tiny plankton.  \n- A **broad distribution** indicates a mix of various size classes.  \n- A **skewed or bimodal pattern** may reflect biological or technical factors (e.g., species-specific blooms or imaging biases).\n",
        "className": "",
        "x": 1660,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "a9701575d8df4ce1",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "elongation vs. area",
        "order": 6,
        "width": "3",
        "height": "6",
        "content": "### Relationship Between Elongation and Object Area  \nThis scatter plot helps assess whether larger objects tend to be more elongated or compact. Certain plankton species have characteristic shapes, and identifying correlations between elongation and area can aid in distinguishing different taxa or understanding morphological variability.  \n\n*In the graph:*  \n- **Top-right**: Large and highly elongated objects (e.g., filamentous plankton).  \n- **Bottom-right**: Small but highly elongated objects (e.g., thin needle-like forms). \n- **Top-left**: Large but compact objects (e.g., rounded or clustered plankton). \n- **Bottom-left**: Small and compact objects (e.g., spherical or short structures).",
        "className": "",
        "x": 1610,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "60d1ad2a7e54e60e",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "elongation vs. area",
        "label": "elongation vs. area",
        "order": 5,
        "chartType": "scatter",
        "category": "elongation vs. area",
        "categoryType": "str",
        "xAxisLabel": "elongation (ratio of major to minor axis)",
        "xAxisProperty": "payload.metadata.elongation",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "area (μm²)",
        "yAxisProperty": "payload.metadata.area",
        "yAxisPropertyType": "msg",
        "ymin": "300",
        "ymax": "1500",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#ff0088",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1610,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "f8df009e737eb044",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "equivalent_diameter vs. MeanValue",
        "order": 9,
        "width": "3",
        "height": "6",
        "content": "### Variation of Mean Brightness with Equivalent Diameter  \nThis graph explores whether larger objects tend to be brighter or darker. This can reveal differences in pigmentation, transparency, or even imaging inconsistencies.  \n\n*In the graph:*   \n- **Top-right**: Large and bright objects.\n- **Top-left**: Small and bright objects.\n- **Bottom-right**: Large and dark objects.\n- **Bottom-left**: Small and dark objects.  ",
        "className": "",
        "x": 1660,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "e6eb3b16a1d6bf22",
        "type": "ui-markdown",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "MeanSaturation vs. MeanValue",
        "order": 13,
        "width": "3",
        "height": "6",
        "content": "### Relationship Between Mean Saturation and Mean Brightness\nThis visualization helps understand how color properties vary with brightness. Some plankton groups exhibit distinct coloration, and saturation could be a useful feature for classification. A strong trend might suggest systematic differences in pigmentation or optical properties across plankton groups.\n\n*In the graph:*  \n- **Top-right**: Bright and highly saturated objects (vivid colors).  \n- **Top-left**: Bright but low-saturation objects (pale or near-white).  \n- **Bottom-right**: Dark but highly saturated objects (deep, rich colors).  \n- **Bottom-left**: Dark and low-saturation objects (grayish or faintly colored).",
        "className": "",
        "x": 1650,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "1997fd46811f0331",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "equivalent_diameter vs. MeanValue",
        "label": "equivalent_diameter vs. MeanValue",
        "order": 8,
        "chartType": "scatter",
        "category": "equivalent_diameter vs. MeanValue",
        "categoryType": "str",
        "xAxisLabel": "Equivalent Diameter (μm)",
        "xAxisProperty": "payload.metadata.equivalent_diameter",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "MeanValue (0–255, grayscale value)",
        "yAxisProperty": "payload.metadata.MeanValue",
        "yAxisPropertyType": "msg",
        "ymin": "150",
        "ymax": "255",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#8c00ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1660,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "5f091b11b5c9fa40",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "MeanSaturation vs. MeanValue",
        "label": "MeanSaturation vs. MeanValue",
        "order": 11,
        "chartType": "scatter",
        "category": "MeanSaturation vs. MeanValue",
        "categoryType": "str",
        "xAxisLabel": "MeanSaturation (%)",
        "xAxisProperty": "payload.metadata.MeanSaturation",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "MeanValue (0–255, grayscale value)",
        "yAxisProperty": "payload.metadata.MeanValue",
        "yAxisPropertyType": "msg",
        "ymin": "150",
        "ymax": "255",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#ff9500",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1650,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "b17728471bdfc61e",
        "type": "ui-template",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "group": "7edf5f14f6ca0bdd",
        "page": "",
        "ui": "",
        "name": "Table",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<table border=\"1\" style=\"width:100%; text-align:center;\">\n    <tr>\n        <th>Topic</th>\n        <th>Action</th>\n        <th>Status</th>\n    </tr>\n    <tr>\n        <td>light</td>\n        <td>{{msg.payload.light.action}}</td>\n        <td>{{msg.payload.light.status}}</td>\n    </tr>\n    <tr>\n        <td>actuator/pump</td>\n        <td>{{msg.payload[\"actuator/pump\"].action}}</td>\n        <td>{{msg.payload[\"actuator/pump\"].status}}</td>\n    </tr>\n    <tr>\n        <td>imager/image</td>\n        <td>{{msg.payload[\"imager/image\"].action}}</td>\n        <td>{{msg.payload[\"imager/image\"].status}}</td>\n    </tr>\n    <tr>\n        <td>segmenter/segment</td>\n        <td>{{msg.payload[\"segmenter/segment\"].action}}</td>\n        <td>{{msg.payload[\"segmenter/segment\"].status}}</td>\n    </tr>\n</table>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1330,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e4719fcedaa61149",
        "type": "switch",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status/light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/imager",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status/segmenter",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "67bcd7bd5a4c38cc"
            ],
            [
                "67bcd7bd5a4c38cc"
            ],
            [
                "67bcd7bd5a4c38cc"
            ],
            [
                "67bcd7bd5a4c38cc"
            ]
        ]
    },
    {
        "id": "9301eaa353ece507",
        "type": "mqtt in",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "topic": "status/#",
        "qos": "0",
        "datatype": "json",
        "broker": "8dc3722c.06efa8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 300,
        "y": 540,
        "wires": [
            [
                "e4719fcedaa61149"
            ]
        ]
    },
    {
        "id": "67bcd7bd5a4c38cc",
        "type": "function",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "save current actions & status",
        "func": "// Récupérer les données précédentes stockées dans le flow context\nvar storedData = flow.get(\"deviceData\") || {\n    light: { action: \"\", status: \"\" },\n    \"actuator/pump\": { action: \"\", status: \"\" },\n    \"imager/image\": { action: \"\", status: \"\" },\n    \"segmenter/segment\": { action: \"\", status: \"\" }\n};\n\n// Mettre à jour les valeurs en fonction du topic reçu\nif (msg.topic === \"light\") {\n    storedData.light.action = msg.payload.action;\n} else if (msg.topic === \"status/light\") {\n    storedData.light.status = msg.payload.status;\n} else if (msg.topic === \"actuator/pump\") {\n    storedData[\"actuator/pump\"].action = msg.payload;\n} else if (msg.topic === \"status/pump\") {\n    storedData[\"actuator/pump\"].status = msg.payload.status;\n} else if (msg.topic === \"imager/image\") {\n    storedData[\"imager/image\"].action = msg.payload.action;\n} else if (msg.topic === \"status/imager\") {\n    storedData[\"imager/image\"].status = msg.payload.status;\n} else if (msg.topic === \"segmenter/segment\") {\n    storedData[\"segmenter/segment\"].action = msg.payload.action;\n} else if (msg.topic === \"status/segmenter\") {\n    storedData[\"segmenter/segment\"].status = msg.payload.status;\n}\n\n// Sauvegarder les nouvelles valeurs\nflow.set(\"deviceData\", storedData);\n\n// Attacher les données mises à jour au message\nmsg.payload = storedData;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 320,
        "wires": [
            [
                "b17728471bdfc61e"
            ]
        ]
    },
    {
        "id": "2a55ae214f1e7273",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart PlanktoScope",
        "x": 620,
        "y": 440,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0650e037776b3d8a",
        "type": "ui-chart",
        "z": "83b2474231efac73",
        "g": "751429d7682830be",
        "group": "4a8738206c62b02e",
        "name": "x vs. y",
        "label": "x vs. y",
        "order": 12,
        "chartType": "scatter",
        "category": "x vs. y",
        "categoryType": "str",
        "xAxisLabel": "x",
        "xAxisProperty": "payload.metadata.x",
        "xAxisPropertyType": "msg",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "0",
        "xmax": "50",
        "yAxisLabel": "y",
        "yAxisProperty": "payload.metadata.y",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": "1",
        "showLegend": true,
        "removeOlder": "1",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "300",
        "colors": [
            "#2b00ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "3",
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 1570,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "8447c9830c3aed1e",
        "type": "exec",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "command": "rm -rf data/img/* data/clean/* data/objects/*",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Purge data",
        "x": 590,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a197bfa71c1761b4",
        "type": "cronplus",
        "z": "83b2474231efac73",
        "g": "910e195536aea223",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "purge",
                "topic": "purge",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 18 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule9",
                "topic": "restart/planktoscope",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 20 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "restart_segmenter",
                "topic": "restart/segmenter",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 25 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "restart_hardware_controller",
                "topic": "restart/hardware_controller",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 30 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "light_on",
                "topic": "light",
                "payloadType": "json",
                "payload": "{\"action\": \"on\"}",
                "expressionType": "cron",
                "expression": "0 35 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "update_config",
                "topic": "imager/image/update_config",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "1 35 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "pump",
                "topic": "actuator/pump",
                "payloadType": "json",
                "payload": "{\"action\": \"move\",\"direction\": \"FORWARD\",\"volume\": 3,\"flowrate\": 30}",
                "expressionType": "cron",
                "expression": "2 35 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "image",
                "topic": "imager/image/image",
                "payloadType": "json",
                "payload": "{\"action\": \"image\",\"pump_direction\": \"FORWARD\",\"volume\": 0.008,\"nb_frame\": 200,\"sleep\": 0.1}",
                "expressionType": "cron",
                "expression": "0 36 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "light_off",
                "topic": "light",
                "payloadType": "json",
                "payload": "{\"action\": \"off\"}",
                "expressionType": "cron",
                "expression": "0 45 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "segment",
                "topic": "segmenter/segment",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "1 45 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 100,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "64ae825a687fb054",
        "type": "ecotaxa",
        "z": "8555b76c53e789e0",
        "name": "Import to Ecotaxa Project",
        "api_url": "https://ecotaxa.obs-vlfr.fr/api/",
        "project_id": "30",
        "x": 830,
        "y": 300,
        "wires": [
            [
                "c21f20a7a9902ee4"
            ]
        ]
    },
    {
        "id": "af1ec6323cc00231",
        "type": "inject",
        "z": "8555b76c53e789e0",
        "name": "Lancer import",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "x": 310,
        "y": 300,
        "wires": [
            [
                "28f8eb0318735246"
            ]
        ]
    },
    {
        "id": "c21f20a7a9902ee4",
        "type": "debug",
        "z": "8555b76c53e789e0",
        "name": "Show import result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 300,
        "wires": []
    },
    {
        "id": "28f8eb0318735246",
        "type": "function",
        "z": "8555b76c53e789e0",
        "name": "Set file_path",
        "func": "msg.payload = {}\nmsg.payload.file_path = \"/home/pi/data/export/ecotaxa/ecotaxa_Project's_name_1_1.zip\"\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "64ae825a687fb054"
            ]
        ]
    },
    {
        "id": "8e11bb014b9664be",
        "type": "ui-template",
        "z": "8018bd5586fd4054",
        "group": "822cdc5b6ef13f39",
        "page": "",
        "ui": "",
        "name": "body",
        "order": 1,
        "width": "12",
        "height": "6",
        "head": "",
        "format": "<template>\n  <v-container>\n    <v-row>\n      <!-- Step 1: White Balance -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_saturation_level\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-eyedropper-variant</v-icon>\n          <v-card-title class=\"text-h6\">White Balance</v-card-title>\n          <v-card-text>\n            Use the color picker to measure the current color values and adjust the white balance accordingly.\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <!-- Step 2: Lightness -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_lightness\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-brightness-6</v-icon>\n          <v-card-title class=\"text-h6\">Lightness</v-card-title>\n          <v-card-text>\n            Measure the current lightness value and update the LED intensity or ISO if below optimal levels.\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <!-- Step 3: Pixel Size -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_pixel_size\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-ruler</v-icon>\n          <v-card-title class=\"text-h6\">Pixel Size</v-card-title>\n          <v-card-text>\n            Place markers on the micrometric ruler image to calculate the pixel size in microns per pixel.\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <!-- Step 4: Pump Calibration -->\n      <v-col cols=\"12\" md=\"3\">\n        <v-card\n          href=\"calibration_pump\"\n          class=\"text-center py-2\"\n        >\n          <v-icon size=\"64\" color=\"primary\">mdi-water-pump</v-icon>\n          <v-card-title class=\"text-h6\">Pump Calibration</v-card-title>\n          <v-card-text>\n            Measure the transferred volume and adjust pump steps to improve accuracy in fluid handling.\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "35d8e8e4b1e0ef7d",
        "type": "ui-template",
        "z": "8018bd5586fd4054",
        "group": "c29c835a70533b69",
        "page": "",
        "ui": "",
        "name": "header",
        "order": 1,
        "width": "12",
        "height": "6",
        "head": "",
        "format": "<template>\n  <v-empty-state\n    headline=\"Calibration steps\"\n    icon=\"$vuetify\"\n    title=\"Follow these steps to ensure optimal image quality and measurement accuracy\"\n  >\n  </v-empty-state>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "590ff706a46acf3a",
        "type": "ui-template",
        "z": "8018bd5586fd4054",
        "group": "518a4242f548c1f2",
        "page": "",
        "ui": "",
        "name": "links",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <v-row justify=\"center\" class=\"my-2\">\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://www.figma.com/design/KXH3qkalr7eeFbyGsutZKt/PlanktoScope-Dashboard-v2?node-id=6-2&m=dev&t=Nn2N1o9OJveQCSco-1\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"primary\" class=\"mr-1\">mdi-image</v-icon>Figma Design\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues/new?template=bug_report.md\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"red\" class=\"mr-1\">mdi-bug</v-icon>Report a Bug\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard/issues\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"orange\" class=\"mr-1\">mdi-information-outline</v-icon>Open\n        issues\n      </v-chip>\n      <v-chip\n        size=\"small\"\n        color=\"grey-darken-3\"\n        href=\"https://github.com/PlanktoScope/dashboard\"\n        target=\"_blank\"\n        class=\"mx-2\"\n      >\n        <v-icon color=\"black\" class=\"mr-1\">mdi-github</v-icon>View on GitHub\n      </v-chip>\n    </v-row>\n</template>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3829aff60cdc5be4",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "19c3570e48774bd0",
        "group": "297b9a8eaa0287e2",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "  <iframe \n    src=\"http://pkscope-rich-kettle-10463/preview\" \n    title=\"Page Node-RED\"\n    allowfullscreen>\n  </iframe>\n  <style>\n    iframe {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      border:none;\n      background:red;\n    }\n  </style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a99be895898a4f2f",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "2. Measure the Current Saturation Level",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"2. Measure the Current Saturation Level\">\n    <v-card-text>\n      Now, use the color picker to measure the current color at a random location on your streaming:\n      <input class=\"colorpicker\" type=\"color\" v-model=\"selectedColor\" @input=\"onColorInput\" />\n    </v-card-text>\n\n    <!-- Progress Bar for Saturation Level -->\n    <div class=\"progress-container\">\n      <div class=\"progress-bar\" :style=\"progressBarStyle\"></div>\n      <div v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"progress-scale-line\"></div>\n    </div>\n\n    <!-- Scale Labels -->\n    <div class=\"progress-scale\">\n      <span v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"scale-label\">\n        {{ label.value }}%\n      </span>\n    </div>\n\n    <v-card-text>\n      The current saturation level is <b>{{ hsl.s }}%</b>.\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    selectedColor: \"#000000\", // Default value for the color picker\n    hsl: { h: 0, s: 0, l: 0 }, // HSL value for the selected color\n    scaleLabels: [\n      { value: 1, position: 0 },\n      { value: 5, position: 0 },\n      { value: 10, position: 0 },\n      { value: 20, position: 0 },\n      { value: 50, position: 0 },\n      { value: 100, position: 0 }\n    ],\n    msg: {} // Store incoming message\n  }),\n  computed: {\n    progressBarStyle() {\n      const logScaleValue = this.calculateLogScale(this.hsl.s);\n      return {\n        width: `${logScaleValue}%`,\n        backgroundColor: this.hsl.s < 5 ? '#5cd65c' : '#ea5353',\n      };\n    }\n  },\n  methods: {\n    onColorInput(event) {\n      this.selectedColor = event.target.value;\n      this.hsl = this.hexToHsl(this.selectedColor);\n      this.sendHexColor(); // Send the hex color and saturation level to Node-RED\n    },\n    sendHexColor() {\n      // Send hex color and saturation level to Node-RED\n      this.send({ topic: \"change\", acq_wb_hex: this.selectedColor, acq_saturation_value: this.hsl.s });\n    },\n    hexToHsl(hex) {\n      // Convert hex to HSL\n      let r = 0,\n        g = 0,\n        b = 0;\n      if (hex.length === 7) {\n        r = parseInt(hex.slice(1, 3), 16);\n        g = parseInt(hex.slice(3, 5), 16);\n        b = parseInt(hex.slice(5, 7), 16);\n      } else if (hex.length === 4) {\n        r = parseInt(hex[1] + hex[1], 16);\n        g = parseInt(hex[2] + hex[2], 16);\n        b = parseInt(hex[3] + hex[3], 16);\n      }\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      const max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n      let h = 0,\n        s = 0,\n        l = (max + min) / 2;\n      if (max !== min) {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n      return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100), // Saturation value\n        l: Math.round(l * 100),\n      };\n    },\n    calculateLogScale(value) {\n      // Apply logarithmic scale to the saturation value\n      const logValue = Math.log10(value + 1);\n      const logMax = Math.log10(101);\n      return (logValue / logMax) * 100;\n    },\n    calculateScalePositions() {\n      // Calculate the position of each scale label\n      this.scaleLabels = this.scaleLabels.map(label => ({\n        value: label.value,\n        position: this.calculateLogScale(label.value),\n      }));\n    },\n    updateMessage(newMsg) {\n      // Update UI based on the incoming message\n      if (newMsg.acq_saturation_value !== undefined) {\n        this.hsl.s = newMsg.acq_saturation_value; // Update saturation level\n      }\n      if (newMsg.acq_wb_hex !== undefined) {\n        this.selectedColor = newMsg.acq_wb_hex; // Update the selected color\n        this.hsl = this.hexToHsl(this.selectedColor); // Convert hex to HSL\n      }\n    }\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        this.updateMessage(newMsg); // Watch for updates to msg and handle them\n      },\n      deep: true // Deep watch to catch nested changes in the msg object\n    }\n  },\n  mounted() {\n    this.calculateScalePositions(); // Calculate scale positions for the progress bar\n\n    // Listen for WebSocket messages (Node-RED or any backend)\n    this.$socket.on('msg-input:' + this.id, (msg) => {\n      this.msg = msg; // Update msg with the received message\n    });\n  }\n};\n</script>\n\n<style>\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}\n\n.colorpicker {\n  height: 2vw;\n  vertical-align: middle;\n  width: 5vw;\n  border: 1px solid;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 640,
        "wires": [
            [
                "6104a1880402810c"
            ]
        ]
    },
    {
        "id": "f3d25e1060563ac8",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "64fb52a5fc759893",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "3. Display White Balance Settings",
        "order": 4,
        "width": "4",
        "height": "10",
        "head": "",
        "format": "<template>\n  <v-card title=\"3. Observe the current White Balance Settings\">\n    <v-card-text>\n      <canvas id=\"wbChart\"></canvas>\n    </v-card-text>\n  </v-card>\n</template>\n\n\n\n<script>\nexport default {\n  data() {\n    return {\n      chart: null,\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.createChart(); // Initialize the chart after the component is fully mounted\n    });\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.destroy(); // Clean up the chart if the component is destroyed\n    }\n  },\n  methods: {\n    createChart(hexColor = '#000000') {\n      const canvas = document.getElementById('wbChart');\n      if (!canvas) {\n        console.error(\"Canvas element not found.\");\n        return;\n      }\n\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        console.error(\"Unable to get canvas context.\");\n        return;\n      }\n\n      const ratios = this.calculateRatiosFromHex(hexColor);\n\n      if (this.chart) {\n        this.chart.destroy(); // Ensure any existing chart is destroyed before creating a new one\n      }\n\n      this.chart = new Chart(ctx, {\n        type: 'scatter',\n        data: {\n          datasets: [\n            {\n              label: 'Current WB',\n              data: [{ x: ratios.bgRatio, y: ratios.rgRatio }],\n              backgroundColor: 'blue',\n              borderColor: 'black',\n              borderWidth: 1,\n              pointRadius: 10,\n              pointHoverRadius: 15,\n            },\n            {\n              label: 'Acceptable WB',\n              data: [{ x: 1, y: 1 }],\n              backgroundColor: '#5cd65c',\n              borderColor: 'black',\n              borderWidth: 1,\n              pointRadius: 50,\n              pointHoverRadius: 55,\n              pointStyle: 'circle',\n              fill: true,\n              showLine: false,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          scales: {\n            x: {\n              type: 'linear',\n              position: 'bottom',\n              title: {\n                display: true,\n                text: 'B/G Ratio',\n              },\n              min: 0.8,\n              max: 1.2,\n            },\n            y: {\n              type: 'linear',\n              title: {\n                display: true,\n                text: 'R/G Ratio',\n              },\n              min: 0.8,\n              max: 1.2,\n            },\n          },\n          plugins: {\n            legend: {\n              display: true,\n            },\n          },\n          animation: {\n            duration: 0, // Disabling animations might prevent some update issues\n          },\n        },\n      });\n    },\n    calculateRatiosFromHex(hex) {\n      const r = parseInt(hex.slice(1, 3), 16);\n      const g = parseInt(hex.slice(3, 5), 16);\n      const b = parseInt(hex.slice(5, 7), 16);\n\n      const rgRatio = r / g || 0;\n      const bgRatio = b / g || 0;\n\n      return { rgRatio, bgRatio };\n    },\n  },\n  watch: {\n    msg(newMsg) {\n      if (newMsg && newMsg.acq_wb_hex) {\n        this.createChart(newMsg.acq_wb_hex);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n#wbChart {\n  width: 100% !important;\n  height: 400px !important;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f13c467a5f891268",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "4. Adjust White Balance Settings",
        "order": 5,
        "width": "4",
        "height": "10",
        "head": "",
        "format": "<template>\n  <v-card title=\"4. Adjust White Balance Settings\">\n    <v-card-text>\n      Use the suggested values to adjust the white balance based on the color input.\n    </v-card-text>\n    <v-card-text>\n      <v-row>\n        <v-col cols=\"4\"></v-col>\n        <v-col cols=\"4\">Current</v-col>\n        <v-col cols=\"4\">Suggested</v-col>\n      </v-row>\n      <v-row>\n        <v-col cols=\"4\">AWRed</v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"currentAWRed\" disabled variant=\"outlined\"></v-text-field>\n        </v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"suggestedAWRed\" variant=\"outlined\"></v-text-field>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col cols=\"4\">AWBlue</v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"currentAWBlue\" disabled variant=\"outlined\"></v-text-field>\n        </v-col>\n        <v-col cols=\"4\">\n          <v-text-field v-model=\"suggestedAWBlue\" variant=\"outlined\"></v-text-field>\n        </v-col>\n      </v-row>\n    </v-card-text>\n    <v-card-actions>\n    <v-card-text>\n      We have calculated better values for your AWRed and AWBlue : \n    </v-card-text>\n      <v-btn color=\"primary\" @click=\"sendSettings\" variant=\"outlined\">Improve</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      currentAWRed: '',\n      currentAWBlue: '',\n      suggestedAWRed: '',\n      suggestedAWBlue: '',\n    };\n  },\n  mounted() {\n    this.setupSocketListeners();\n  },\n  methods: {\n    setupSocketListeners() {\n      if (this.$socket) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.acq_wb_red !== undefined) {\n            this.currentAWRed = msg.acq_wb_red;\n          }\n          if (msg.acq_wb_blue !== undefined) {\n            this.currentAWBlue = msg.acq_wb_blue;\n          }\n          if (msg.acq_wb_hex !== undefined) {\n            this.calculateSuggestedAW(msg.acq_wb_hex);\n          }\n        });\n      }\n    },\n    hexToRgb(hex) {\n      hex = hex.replace(/^#/, '');\n      let bigint = parseInt(hex, 16);\n      let r = (bigint >> 16) & 255;\n      let g = (bigint >> 8) & 255;\n      let b = bigint & 255;\n      return { r, g, b };\n    },\n    calculateSuggestedAW(hexColor) {\n      const { r, g, b } = this.hexToRgb(hexColor);\n      let redAdjustment = (g - r) + parseInt(this.currentAWRed, 10);\n      let blueAdjustment = (g - b) + parseInt(this.currentAWBlue, 10);\n      this.suggestedAWRed = Math.max(0, redAdjustment);\n      this.suggestedAWBlue = Math.max(0, blueAdjustment);\n    },\n    sendSettings() {\n      const payload = {\n        payload: {\n          action: \"settings\",\n          settings: {\n            white_balance_gain: {\n              blue: this.suggestedAWBlue,\n              red: this.suggestedAWRed,\n            },\n          },\n        },\n        acq_wb_blue:this.suggestedAWBlue,\n        acq_wb_red:this.suggestedAWRed,\n        \n        topic: \"imager/image\",\n        \n      };\n      this.send(payload);\n    },\n  },\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 900,
        "wires": [
            [
                "3574f41671e9c607",
                "0e406c9af3e5a51e",
                "801d9c0cb77d4caa"
            ]
        ]
    },
    {
        "id": "3b5d942eccbc14ba",
        "type": "mqtt out",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 630,
        "y": 840,
        "wires": []
    },
    {
        "id": "f7aececeb25feee2",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "set acq_wb_hex",
        "func": "global.set(\"acq_wb_hex\", msg.acq_wb_hex);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 640,
        "wires": [
            [
                "4a99ebbebc9e7d65"
            ]
        ]
    },
    {
        "id": "4a99ebbebc9e7d65",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "get acq_wb_red",
        "func": "msg.acq_wb_red = global.get(\"acq_wb_red\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "a6cfdc06c50e2b7c"
            ]
        ]
    },
    {
        "id": "a6cfdc06c50e2b7c",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "get acq_wb_blue",
        "func": "msg.acq_wb_blue = global.get(\"acq_wb_blue\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            [
                "69f90516888fb4c2"
            ]
        ]
    },
    {
        "id": "3574f41671e9c607",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "set acq_wb_red",
        "func": "global.set(\"acq_wb_red\", msg.acq_wb_red);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "0e406c9af3e5a51e",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "set acq_wb_blue",
        "func": "global.set(\"acq_wb_blue\", msg.acq_wb_blue);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "ea8c4596e202f964",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "1. Reset the value of the gains",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"1. Reset WB Values\">\n    <v-card-text>\n        <span>If needed, you can turn <b>ON</b> the LED that might be temporarly <b>OFF</b>. Just click on this button : </span>\n        <v-btn @click=\"on\" variant=\"outlined\">ON</v-btn>\n        <br>\n      <span>Then, it reset the values of the gains for Red and Blue to 100 :</span>\n      <v-btn @click=\"reset\" variant=\"outlined\">Reset WBBlue and WBRed</v-btn>\n      \n    \n    </v-card-text>\n    \n  </v-card>\n  \n</template>\n\n<script>\nexport default {\n  props: ['id'],\n  methods: {\n    reset() {\n      const payload = {\n        payload: {\n          action: \"settings\",\n          settings: {\n            white_balance_gain: {\n              blue: 100,\n              red: 100,\n            },\n          },\n        },\n        acq_wb_blue: 100,\n        acq_wb_red: 100,\n        topic: \"imager/image\",\n      };\n      this.send(payload);\n    }, \n    on() {\n       this.send({payload: {action: \"on\",led: 1},topic: 'light'});\n    },\n  },\n};\n\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "4c7717ee07b97e8b",
                "0fa68c34208c36d2",
                "958aac3964d0faf4",
                "857257c8697a3b76",
                "778ef58f071d9dc0"
            ]
        ]
    },
    {
        "id": "4c7717ee07b97e8b",
        "type": "mqtt out",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 430,
        "y": 400,
        "wires": []
    },
    {
        "id": "0fa68c34208c36d2",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "set acq_wb_red",
        "func": "global.set(\"acq_wb_red\", msg.acq_wb_red);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "958aac3964d0faf4",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "set acq_wb_blue",
        "func": "global.set(\"acq_wb_blue\", msg.acq_wb_blue);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "857257c8697a3b76",
        "type": "link out",
        "z": "6426e7bea6900426",
        "g": "631f3e38acec1bc6",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "6d6fdc0c504bbc26"
        ],
        "x": 395,
        "y": 540,
        "wires": []
    },
    {
        "id": "6d6fdc0c504bbc26",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "link in 1",
        "links": [
            "857257c8697a3b76"
        ],
        "x": 75,
        "y": 860,
        "wires": [
            [
                "f13c467a5f891268"
            ]
        ]
    },
    {
        "id": "69f90516888fb4c2",
        "type": "link out",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "cab52c68fd58220b",
            "45f2ad943cee341f"
        ],
        "x": 1435,
        "y": 640,
        "wires": []
    },
    {
        "id": "cab52c68fd58220b",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "link in 2",
        "links": [
            "69f90516888fb4c2"
        ],
        "x": 75,
        "y": 940,
        "wires": [
            [
                "f13c467a5f891268"
            ]
        ]
    },
    {
        "id": "45f2ad943cee341f",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "64fb52a5fc759893",
        "name": "link in 3",
        "links": [
            "69f90516888fb4c2"
        ],
        "x": 75,
        "y": 740,
        "wires": [
            [
                "f3d25e1060563ac8"
            ]
        ]
    },
    {
        "id": "062a3af5e12e8445",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "g": "f591255fbfc6c466",
        "group": "af8acdfe9afbad74",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"1\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\" class=\"selected-step\" color=\"primary\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\" color=\"primary\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\" color=\"primary\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\" color=\"primary\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "e5da27b9abdcb156"
            ]
        ]
    },
    {
        "id": "e5da27b9abdcb156",
        "type": "ui-control",
        "z": "6426e7bea6900426",
        "g": "f591255fbfc6c466",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c253d0e7e41137e5",
        "type": "ui-template",
        "z": "6426e7bea6900426",
        "group": "",
        "page": "803aa402d5c66b73",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bc2f402f6cdd8434",
        "type": "ui-control",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "224eba65a1a42b91"
            ]
        ]
    },
    {
        "id": "ec5d9fecc6b0cece",
        "type": "ui-event",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "ui": "e6ae26617c24c3ea",
        "name": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "5c444b714f250678"
            ]
        ]
    },
    {
        "id": "5c444b714f250678",
        "type": "switch",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/calibration_saturation_level",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "cb467ae07b125bcc",
                "aad16ea9eae8d3dd"
            ]
        ]
    },
    {
        "id": "cb467ae07b125bcc",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "get acq_wb_red",
        "func": "msg.acq_wb_red = global.get(\"acq_wb_red\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            [
                "97541b0d6dcf6747"
            ]
        ]
    },
    {
        "id": "aad16ea9eae8d3dd",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "get acq_wb_blue",
        "func": "msg.acq_wb_blue = global.get(\"acq_wb_blue\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            [
                "97541b0d6dcf6747"
            ]
        ]
    },
    {
        "id": "97541b0d6dcf6747",
        "type": "link out",
        "z": "6426e7bea6900426",
        "g": "f5929f8fbe9df063",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "06e4799523ede341"
        ],
        "x": 555,
        "y": 260,
        "wires": []
    },
    {
        "id": "06e4799523ede341",
        "type": "link in",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "link in 4",
        "links": [
            "97541b0d6dcf6747"
        ],
        "x": 75,
        "y": 900,
        "wires": [
            [
                "f13c467a5f891268"
            ]
        ]
    },
    {
        "id": "801d9c0cb77d4caa",
        "type": "switch",
        "z": "6426e7bea6900426",
        "g": "b04534747af369bb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "imager/image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "3b5d942eccbc14ba"
            ]
        ]
    },
    {
        "id": "6104a1880402810c",
        "type": "switch",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 640,
        "wires": [
            [
                "f7aececeb25feee2"
            ]
        ]
    },
    {
        "id": "224eba65a1a42b91",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "a885abc248b6ba6e",
        "name": "get acq_wb_hex",
        "func": "msg.acq_wb_hex = global.get(\"acq_wb_hex\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 640,
        "wires": [
            [
                "a99be895898a4f2f"
            ]
        ]
    },
    {
        "id": "778ef58f071d9dc0",
        "type": "debug",
        "z": "6426e7bea6900426",
        "name": "debug 71",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 420,
        "wires": []
    },
    {
        "id": "23a52935692ecb49",
        "type": "mqtt out",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 1510,
        "y": 260,
        "wires": []
    },
    {
        "id": "746c989af736cb33",
        "type": "ui-slider",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "group": "af8acdfe9afbad74",
        "name": "",
        "label": "red",
        "tooltip": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "red",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "1",
        "max": "5",
        "step": "0.05",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "7da6b39ccb75384c"
            ]
        ]
    },
    {
        "id": "7da6b39ccb75384c",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "name": "gain",
        "func": "msg.payload = {\n    \"action\":\"settings\", \n    \"settings\":{\"white_balance_gain\":{\n        [msg.topic]:Math.round(msg.payload*100)\n        }\n    }\n}\nmsg.topic = \"imager/image\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 160,
        "wires": [
            [
                "66756e43efce9726"
            ]
        ]
    },
    {
        "id": "2451da81a82f7915",
        "type": "ui-slider",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "group": "af8acdfe9afbad74",
        "name": "",
        "label": "blue",
        "tooltip": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "blue",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "1",
        "max": "5",
        "step": "0.05",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "7da6b39ccb75384c"
            ]
        ]
    },
    {
        "id": "66756e43efce9726",
        "type": "mqtt out",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "8dc3722c.06efa8",
        "x": 1510,
        "y": 160,
        "wires": []
    },
    {
        "id": "ac01daf9daeecf2a",
        "type": "ui-slider",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "group": "af8acdfe9afbad74",
        "name": "ISO",
        "label": "ISO",
        "tooltip": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "iso",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "50",
        "max": "500",
        "step": "50",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "4441ba5d435ed9d7"
            ]
        ]
    },
    {
        "id": "4441ba5d435ed9d7",
        "type": "function",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "name": "settings",
        "func": "msg.payload = {\n    \"action\":\"settings\", \n    \"settings\":{[msg.topic]:msg.payload}\n}\n\nmsg.topic = \"imager/image\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 260,
        "wires": [
            [
                "23a52935692ecb49"
            ]
        ]
    },
    {
        "id": "7cf9eaa2eb0776bf",
        "type": "ui-slider",
        "z": "6426e7bea6900426",
        "g": "239ace7a73b8b6df",
        "group": "af8acdfe9afbad74",
        "name": "Shutter Speed",
        "label": "Shutter Speed",
        "tooltip": "",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "shutter_speed",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "125",
        "max": "300",
        "step": "10",
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 1100,
        "y": 320,
        "wires": [
            [
                "4441ba5d435ed9d7"
            ]
        ]
    },
    {
        "id": "300c2d2496f1d12d",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "g": "0dcebaf2b57a4374",
        "group": "705156ec7eedfb1e",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "<template>\n  <div class=\"image-wrapper\">\n    <img :src=\"dynamicImageUrl\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5fbdba7e61973f9a",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "g": "426f6cef77fbb290",
        "group": "728c7ed3d63dfcee",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"2\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\" class=\"selected-step\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "25cb0163587aee15"
            ]
        ]
    },
    {
        "id": "25cb0163587aee15",
        "type": "ui-control",
        "z": "14c685bd04db8be5",
        "g": "426f6cef77fbb290",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a7d7736e2750578e",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "group": "",
        "page": "f22f627015431032",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": ".selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}\n\n\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "cf237f6cc8d0234d",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "group": "728c7ed3d63dfcee",
        "page": "",
        "ui": "",
        "name": "1. Check LED Lifetime",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"1. Check LED Lifetime\">\n    <v-card-text>\n      Before starting the calibration, it is important to check the remaining hours of use of the LED:\n      <br />\n    </v-card-text>\n    \n    <!-- Slider avec style similaire à la barre de progression -->\n    <div class=\"progress-container\">\n      <div class=\"progress-bar\" :style=\"progressBarStyle\"></div>\n      <div v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"progress-scale-line\"></div>\n    </div>\n    <div class=\"progress-scale\">\n      <span v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"scale-label\">\n        {{ label.value }}h\n      </span>\n    </div>\n    <v-card-text>\n      <span>The current LED duration of use is {{ acq_led_operating_hours }} hours.</span>\n    </v-card-text>\n\n    <!-- Banière affichée si acq_led_operating_hours < 200 -->\n    <v-card-text v-if=\"acq_led_operating_hours < 200\">\n      <span class=\"warning-banner\">\n        Seems like you need to replace your LED by following the provided instructions.\n      </span>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    acq_led_operating_hours: 0, // Valeur initiale par défaut\n    scaleLabels: [\n      { value: 0, position: 0 },\n      { value: 100, position: 16.67 },\n      { value: 200, position: 33.33 },\n      { value: 300, position: 50 },\n      { value: 400, position: 66.67 },\n      { value: 500, position: 83.33 },\n      { value: 600, position: 100 }\n    ],\n  }),\n  computed: {\n    progressBarStyle() {\n      return {\n        width: `${this.calculateLogScale(this.acq_led_operating_hours)}%`,\n        backgroundColor: this.acq_led_operating_hours < 200 ? 'red' : '#5cd65c',\n      };\n    }\n  },\n  methods: {\n    calculateLogScale(value) {\n      // Appliquer une échelle linéaire simple\n      return (value / 600) * 100;\n    },\n    updateMessage(newMsg) {\n      // Méthode appelée quand un nouveau message arrive\n      if (newMsg.acq_led_operating_hours !== undefined) {\n        this.acq_led_operating_hours = newMsg.acq_led_operating_hours;\n      }\n    }\n  },\n  watch: {\n    // Watch sur l'objet entier msg\n    msg: {\n      handler(newMsg) {\n        this.updateMessage(newMsg);\n      },\n      deep: true, // Pour capturer les changements dans les propriétés imbriquées de msg\n    }\n  },\n  mounted() {\n    // Simuler la réception d'un message en utilisant une fonction ou une API Node-RED\n    this.$watch('msg', (newMsg) => {\n      this.updateMessage(newMsg);\n    });\n  }\n};\n</script>\n\n<style>\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}\n\n.warning-banner {\n  color: red;\n  font-weight: bold;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e3be6250ef1fb928",
        "type": "inject",
        "z": "14c685bd04db8be5",
        "name": "150",
        "props": [
            {
                "p": "acq_led_operating_hours",
                "v": "150",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "cf237f6cc8d0234d"
            ]
        ]
    },
    {
        "id": "70566499a56d066d",
        "type": "inject",
        "z": "14c685bd04db8be5",
        "name": "350",
        "props": [
            {
                "p": "acq_led_operating_hours",
                "v": "350",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "cf237f6cc8d0234d"
            ]
        ]
    },
    {
        "id": "bcfea4e20bc583f1",
        "type": "ui-template",
        "z": "14c685bd04db8be5",
        "group": "728c7ed3d63dfcee",
        "page": "",
        "ui": "",
        "name": "2. Calibration of LED intensity and ISO",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card title=\"2. Calibration of LED intensity and ISO\">\n    <v-card-text>\n      Use the color picker to measure the current color value on the streaming:\n      <input class=\"colorpicker\" type=\"color\" v-model=\"selectedColor\" @input=\"onColorInput\" />\n      <br />\n    </v-card-text>\n\n    <!-- Affichage de la lightness -->\n    <v-card-text>\n      <span>The current lightness value is {{ hsl.l }}%.</span>\n    </v-card-text>\n\n    <v-card-text>\n      <span>Adjust the LED Intensity and the ISO if the current lightness value is between 80% and 90%. Redo the measurement if necessary.</span>\n    </v-card-text>\n\n    <!-- Champ pour sélectionner la nouvelle valeur ISO -->\n    <v-card-text>\n      <label for=\"iso-input\">Set ISO Value:</label>\n      <input type=\"number\" id=\"iso-input\" v-model=\"iso\" @input=\"onIsoInput\" min=\"100\" step=\"100\" />\n    </v-card-text>\n     \n    <!-- Slider pour lightness avec style similaire à la barre de progression -->\n    <div class=\"progress-container\">\n      <div class=\"progress-bar\" :style=\"lightnessProgressBarStyle\"></div>\n      <div v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"progress-scale-line\"></div>\n    </div>\n    <div class=\"progress-scale\">\n      <span v-for=\"(label, index) in scaleLabels\" :key=\"index\" :style=\"{ left: label.position + '%' }\" class=\"scale-label\">\n        {{ label.value }}%\n      </span>\n    </div>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    selectedColor: \"#000000\", // Default value for color picker\n    hsl: { h: 0, s: 0, l: 0 }, // Store HSL value of the selected color\n    iso: 100, // Default ISO value\n    scaleLabels: [\n      { value: 0, position: 0 },\n      { value: 20, position: 20 },\n      { value: 40, position: 40 },\n      { value: 60, position: 60 },\n      { value: 80, position: 80 },\n      { value: 100, position: 100 }\n    ],\n    msg: {} // Property to store the incoming message\n  }),\n  computed: {\n    lightnessProgressBarStyle() {\n      let backgroundColor;\n      if (this.hsl.l < 50) {\n        backgroundColor = 'red'; // Too low\n      } else if (this.hsl.l >= 80 && this.hsl.l <= 90) {\n        backgroundColor = '#5cd75d'; // Ideal\n      } else if (this.hsl.l >= 95) {\n        backgroundColor = 'red'; // Too high\n      } else {\n        backgroundColor = 'orange'; // Slightly high\n      }\n      return {\n        width: `${this.hsl.l}%`,\n        backgroundColor: backgroundColor\n      };\n    }\n  },\n  methods: {\n    onColorInput(event) {\n      this.selectedColor = event.target.value;\n      this.hsl = this.hexToHsl(this.selectedColor);\n      this.sendHexColor(); // Send the selected color and lightness value to Node-RED\n    },\n    sendHexColor() {\n      // Send the hex color and lightness value to Node-RED\n      this.send({ acq_wb_hex: this.selectedColor, acq_lightness_value: this.hsl.l });\n    },\n    hexToHsl(hex) {\n      // Convert hex to HSL\n      let r = 0,\n        g = 0,\n        b = 0;\n      if (hex.length === 7) {\n        r = parseInt(hex.slice(1, 3), 16);\n        g = parseInt(hex.slice(3, 5), 16);\n        b = parseInt(hex.slice(5, 7), 16);\n      } else if (hex.length === 4) {\n        r = parseInt(hex[1] + hex[1], 16);\n        g = parseInt(hex[2] + hex[2], 16);\n        b = parseInt(hex[3] + hex[3], 16);\n      }\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      const max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n      let h = 0,\n        s = 0,\n        l = (max + min) / 2;\n      if (max !== min) {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n      return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        l: Math.round(l * 100) // The lightness value is stored here\n      };\n    },\n    onIsoInput() {\n      // Send the new ISO value to Node-RED\n      const payload = {\n        action: \"settings\",\n        settings: {\n          iso: this.iso\n        }\n      };\n      this.send({ topic: \"imager/image\", payload });\n    },\n    updateMessage(newMsg) {\n      // Method to handle incoming messages\n      if (newMsg.acq_lightness_value !== undefined) {\n        this.hsl.l = newMsg.acq_lightness_value; // Update lightness value\n      }\n      if (newMsg.acq_wb_hex !== undefined) {\n        this.selectedColor = newMsg.acq_wb_hex; // Update the selected color\n        this.hsl = this.hexToHsl(this.selectedColor); // Update HSL based on the new hex value\n      }\n      if (newMsg.iso !== undefined) {\n        this.iso = newMsg.iso; // Update ISO value\n      }\n    }\n  },\n  watch: {\n    msg: {\n      handler(newMsg) {\n        this.updateMessage(newMsg); // Handle changes to `msg`\n      },\n      deep: true // Ensure deep watching of nested msg properties\n    }\n  },\n  mounted() {\n    // Listen for incoming WebSocket messages (for example, from Node-RED)\n    this.$socket.on('msg-input:' + this.id, (msg) => {\n      this.msg = msg; // Update msg with the incoming message\n    });\n  }\n};\n</script>\n\n<style>\n.progress-container {\n  position: relative;\n  width: 90%;\n  height: 30px;\n  background-color: #f4f5f6;\n  border-radius: 5px;\n  margin: 10px 5%;\n  border: 1px solid;\n}\n\n.progress-bar {\n  height: 100%;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-scale-line {\n  position: absolute;\n  height: 100%;\n  width: 1px;\n  top: 0;\n  background-color: #000;\n  pointer-events: none;\n}\n\n.progress-scale {\n  position: relative;\n  margin-top: 5px;\n  height: 20px;\n  width: 90%;\n  margin: 10px 5%;\n}\n\n.scale-label {\n  position: absolute;\n  bottom: 0;\n  font-size: 12px;\n  transform: translateX(-50%);\n  color: #000;\n}\n\n.colorpicker {\n  height: 2vw;\n  vertical-align: middle;\n  width: 5vw;\n  border: 1px solid;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 480,
        "wires": [
            [
                "611c04b01413daa7",
                "3dbdd07470fcf962",
                "891553cd325b644e"
            ]
        ]
    },
    {
        "id": "970fe623589bb304",
        "type": "debug",
        "z": "14c685bd04db8be5",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 240,
        "wires": []
    },
    {
        "id": "93de561b59a417b8",
        "type": "mqtt out",
        "z": "14c685bd04db8be5",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8dc3722c.06efa8",
        "x": 1190,
        "y": 500,
        "wires": []
    },
    {
        "id": "611c04b01413daa7",
        "type": "switch",
        "z": "14c685bd04db8be5",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "imager/image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 520,
        "wires": [
            [
                "93de561b59a417b8",
                "4c30687e204ba7d7"
            ]
        ]
    },
    {
        "id": "5d31d86812be386d",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "set acq_lightness_value",
        "func": "global.set(\"acq_lightness_value\", msg.acq_lightness_value);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f1ee9cfdfa49fd62",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "get acq_lightness_value",
        "func": "msg.acq_lightness_value = global.get(\"acq_lightness_value\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 400,
        "wires": [
            [
                "42c95761adb5cd38"
            ]
        ]
    },
    {
        "id": "55a5d26bd0e73ed4",
        "type": "ui-event",
        "z": "14c685bd04db8be5",
        "ui": "e6ae26617c24c3ea",
        "name": "",
        "x": 100,
        "y": 420,
        "wires": [
            [
                "2579f5467cf5920b"
            ]
        ]
    },
    {
        "id": "2579f5467cf5920b",
        "type": "switch",
        "z": "14c685bd04db8be5",
        "name": "",
        "property": "payload.page.path",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/calibration_lightness",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 110,
        "y": 540,
        "wires": [
            [
                "f1ee9cfdfa49fd62"
            ]
        ]
    },
    {
        "id": "6a687638c091a876",
        "type": "debug",
        "z": "14c685bd04db8be5",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 740,
        "wires": []
    },
    {
        "id": "3dbdd07470fcf962",
        "type": "switch",
        "z": "14c685bd04db8be5",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "$pageview",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 460,
        "wires": [
            [
                "5d31d86812be386d",
                "970fe623589bb304",
                "14b35bb2dd3f0c81"
            ]
        ]
    },
    {
        "id": "14b35bb2dd3f0c81",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "set acq_wb_hex",
        "func": "global.set(\"acq_wb_hex\", msg.acq_wb_hex);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "42c95761adb5cd38",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "get acq_wb_hex",
        "func": "msg.acq_wb_hex = global.get(\"acq_wb_hex\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 480,
        "wires": [
            [
                "bcfea4e20bc583f1",
                "6a687638c091a876"
            ]
        ]
    },
    {
        "id": "09141e4c94cc7e9f",
        "type": "function",
        "z": "14c685bd04db8be5",
        "name": "set acq_iso",
        "func": "global.set(\"acq_iso\", msg.acq_iso);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4c30687e204ba7d7",
        "type": "change",
        "z": "14c685bd04db8be5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "acq_iso",
                "pt": "msg",
                "to": "payload.settings.iso",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 760,
        "wires": [
            [
                "09141e4c94cc7e9f"
            ]
        ]
    },
    {
        "id": "891553cd325b644e",
        "type": "debug",
        "z": "14c685bd04db8be5",
        "name": "debug 69",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 160,
        "wires": []
    },
    {
        "id": "05a5a9c4530d07ea",
        "type": "ui-template",
        "z": "3afb1d2b21be9114",
        "g": "da1cb3ed0c90bb56",
        "group": "c966455a52d121c0",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"3\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\" class=\"selected-step\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "419cccaf23eb2548"
            ]
        ]
    },
    {
        "id": "419cccaf23eb2548",
        "type": "ui-control",
        "z": "3afb1d2b21be9114",
        "g": "da1cb3ed0c90bb56",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5b95342353581bba",
        "type": "ui-template",
        "z": "3afb1d2b21be9114",
        "g": "d7c2ea70e05a360f",
        "group": "c9933f7d77fc6f01",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "<template>\n  <div class=\"image-wrapper\">\n    <img :src=\"dynamicImageUrl\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c5dfb3fbc57fe27d",
        "type": "ui-template",
        "z": "3afb1d2b21be9114",
        "group": "",
        "page": "aa9ba6cedf56d2cd",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4ba9c6fbd3e2ce88",
        "type": "ui-template",
        "z": "d5b2c64b84f8ed4f",
        "group": "",
        "page": "48216bc1f7c53a75",
        "ui": "",
        "name": "CSS (Single Page)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c92cd7e25b01278d",
        "type": "ui-template",
        "z": "d5b2c64b84f8ed4f",
        "g": "0861054b07c3373d",
        "group": "6039d653304537af",
        "page": "",
        "ui": "",
        "name": "Step Bar",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"4\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item value=\"1\" editable @click=\"stepClicked(1)\">Saturation Level</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"2\" editable @click=\"stepClicked(2)\">Lightness</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"3\" editable @click=\"stepClicked(3)\">Pixel size</v-stepper-item>\n        <v-divider></v-divider>\n        <v-stepper-item value=\"4\" editable @click=\"stepClicked(4)\" class=\"selected-step\">Pump</v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        const stepMapping = {\n          1: { page: 'Calibration - Saturation Level' },\n          2: { page: 'Calibration - Lightness' },\n          3: { page: 'Calibration - Pixel size' },\n          4: { page: 'Calibration - Pump' }\n        };\n\n        const msgPayload = stepMapping[step] || {};\n        \n        this.send({ payload: msgPayload });\n      }\n    }\n  }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "f8db1578262f6bc8"
            ]
        ]
    },
    {
        "id": "f8db1578262f6bc8",
        "type": "ui-control",
        "z": "d5b2c64b84f8ed4f",
        "g": "0861054b07c3373d",
        "name": "",
        "ui": "e6ae26617c24c3ea",
        "events": "all",
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "71ba57a25304e08f",
        "type": "ui-template",
        "z": "d5b2c64b84f8ed4f",
        "g": "508d01c8283ee722",
        "group": "0c3ae4988f81c2ac",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "4",
        "height": "6",
        "head": "",
        "format": "<template>\n  <div class=\"image-wrapper\">\n    <img :src=\"dynamicImageUrl\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n  },\n};\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "508b0be07fd290ca",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 340,
        "wires": []
    },
    {
        "id": "7ccb5c8c66ad170a",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "inject",
        "props": [
            {
                "p": "payload.timezone",
                "v": "Europe/Paris",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "89c198d4d49eca98"
            ]
        ]
    },
    {
        "id": "882b8a7ce4992849",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 400,
        "wires": []
    },
    {
        "id": "7bf0f35f3f491657",
        "type": "set timezone",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "",
        "x": 340,
        "y": 380,
        "wires": [
            [
                "2fe0de4d0d304630",
                "3be16a3aa46029b1"
            ]
        ]
    },
    {
        "id": "89c198d4d49eca98",
        "type": "list timezones",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "508b0be07fd290ca",
                "7bf0f35f3f491657"
            ]
        ]
    },
    {
        "id": "2fe0de4d0d304630",
        "type": "get timezone",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "",
        "x": 540,
        "y": 400,
        "wires": [
            [
                "882b8a7ce4992849"
            ]
        ]
    },
    {
        "id": "3be16a3aa46029b1",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 360,
        "wires": []
    },
    {
        "id": "92b6d6d7a823b598",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 120,
        "wires": []
    },
    {
        "id": "abc662f31074fc22",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "inject",
        "props": [
            {
                "p": "payload.country",
                "v": "FR",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "d082d59bfaddcd80"
            ]
        ]
    },
    {
        "id": "a7eccf2fc3cf8bec",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "e3c230f24ea098cf",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 140,
        "wires": []
    },
    {
        "id": "d082d59bfaddcd80",
        "type": "list countries",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "92b6d6d7a823b598",
                "9f5061a034f606a3"
            ]
        ]
    },
    {
        "id": "9f5061a034f606a3",
        "type": "set country",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "e3c230f24ea098cf",
                "1f6f854383bffbc8"
            ]
        ]
    },
    {
        "id": "1f6f854383bffbc8",
        "type": "get country",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "a7eccf2fc3cf8bec"
            ]
        ]
    },
    {
        "id": "bb0c7a3f2e240756",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "3fe3efd04fb1a41a",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 760,
        "wires": []
    },
    {
        "id": "1433d7bb97c2b52e",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "3fe3efd04fb1a41a",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 700,
        "wires": [
            [
                "58b352badddb48f5"
            ]
        ]
    },
    {
        "id": "58b352badddb48f5",
        "type": "get hostname",
        "z": "a02961610bc3982a",
        "g": "3fe3efd04fb1a41a",
        "name": "",
        "x": 140,
        "y": 760,
        "wires": [
            [
                "bb0c7a3f2e240756"
            ]
        ]
    },
    {
        "id": "39cd9534b43ef484",
        "type": "get name",
        "z": "a02961610bc3982a",
        "g": "9c49d230dea06fdf",
        "name": "",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "bb7a7793827bb9d6"
            ]
        ]
    },
    {
        "id": "bb7a7793827bb9d6",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "9c49d230dea06fdf",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 920,
        "wires": []
    },
    {
        "id": "79d35d7ad73f89f9",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "9c49d230dea06fdf",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 860,
        "wires": [
            [
                "39cd9534b43ef484"
            ]
        ]
    },
    {
        "id": "959839bc2c390088",
        "type": "storage info",
        "z": "a02961610bc3982a",
        "g": "27e22d982f0bcb2f",
        "name": "",
        "x": 550,
        "y": 920,
        "wires": [
            [
                "221ce111a005980c"
            ]
        ]
    },
    {
        "id": "0d10e66bb2b9d1cc",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "27e22d982f0bcb2f",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 530,
        "y": 860,
        "wires": [
            [
                "959839bc2c390088"
            ]
        ]
    },
    {
        "id": "221ce111a005980c",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "27e22d982f0bcb2f",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 920,
        "wires": []
    },
    {
        "id": "29b3163c363f83d7",
        "type": "list hardware versions",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "28f8ab1b6c179786",
                "7acf590b123400aa"
            ]
        ]
    },
    {
        "id": "19da48e7c9119862",
        "type": "get hardware version",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "",
        "x": 660,
        "y": 600,
        "wires": [
            [
                "063d4a75b1911dfd"
            ]
        ]
    },
    {
        "id": "28f8ab1b6c179786",
        "type": "set hardware version",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "",
        "x": 420,
        "y": 580,
        "wires": [
            [
                "19da48e7c9119862",
                "6f03eb804423f73c"
            ]
        ]
    },
    {
        "id": "063d4a75b1911dfd",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "7acf590b123400aa",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 540,
        "wires": []
    },
    {
        "id": "6f03eb804423f73c",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "4966524cdc764174",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "inject",
        "props": [
            {
                "p": "payload.hardware_version",
                "v": "v3.0",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 500,
        "wires": [
            [
                "29b3163c363f83d7"
            ]
        ]
    },
    {
        "id": "0e1835e8b7c470ee",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "3bb20cd87e85a6b8",
        "name": "country",
        "info": "",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "bcdab829fb50bc57",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "153af3e4645145a8",
        "name": "timezone",
        "info": "",
        "x": 740,
        "y": 280,
        "wires": []
    },
    {
        "id": "f640495d00bb68b9",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "cef91df1f697848e",
        "name": "hardware version",
        "info": "",
        "x": 840,
        "y": 500,
        "wires": []
    },
    {
        "id": "1f1c86a14bf3ac61",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "3fe3efd04fb1a41a",
        "name": "hostname",
        "info": "",
        "x": 480,
        "y": 700,
        "wires": []
    },
    {
        "id": "7e293f564d4fbfc4",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "9c49d230dea06fdf",
        "name": "name",
        "info": "",
        "x": 290,
        "y": 860,
        "wires": []
    },
    {
        "id": "53516cda8e4f5a3c",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "27e22d982f0bcb2f",
        "name": "storage",
        "info": "",
        "x": 730,
        "y": 860,
        "wires": []
    },
    {
        "id": "c34bff0e83b45e68",
        "type": "poweroff",
        "z": "a02961610bc3982a",
        "g": "fc6b573a63d6dfaa",
        "name": "",
        "x": 1180,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "dc07c747a235da10",
        "type": "reboot",
        "z": "a02961610bc3982a",
        "g": "fc6b573a63d6dfaa",
        "name": "",
        "x": 1180,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f12fd63508bb1b63",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "fc6b573a63d6dfaa",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1030,
        "y": 140,
        "wires": [
            [
                "c34bff0e83b45e68"
            ]
        ]
    },
    {
        "id": "2babe27c1bf9d6ef",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "fc6b573a63d6dfaa",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "dc07c747a235da10"
            ]
        ]
    },
    {
        "id": "15f16463c05bb479",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "fc6b573a63d6dfaa",
        "name": "system ⚠️",
        "info": "",
        "x": 1200,
        "y": 80,
        "wires": []
    },
    {
        "id": "94a433cec8b54203",
        "type": "wake up",
        "z": "a02961610bc3982a",
        "g": "fc6b573a63d6dfaa",
        "name": "",
        "minutes": "2",
        "x": 1180,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b552ca516cc07737",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "fc6b573a63d6dfaa",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "94a433cec8b54203"
            ]
        ]
    },
    {
        "id": "61ebceb724041fb2",
        "type": "list acquisitions",
        "z": "a02961610bc3982a",
        "g": "dc792afbab434446",
        "name": "",
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "76fd33c347db95b0"
            ]
        ]
    },
    {
        "id": "50128147f802f133",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "dc792afbab434446",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1090,
        "y": 380,
        "wires": [
            [
                "61ebceb724041fb2"
            ]
        ]
    },
    {
        "id": "76fd33c347db95b0",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "dc792afbab434446",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 440,
        "wires": []
    },
    {
        "id": "b9c2e0abaad12bd9",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "dc792afbab434446",
        "name": "acquisitions",
        "info": "",
        "x": 1290,
        "y": 380,
        "wires": []
    },
    {
        "id": "300343e6b56f088e",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "dc307bb5d26c60f4",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1090,
        "y": 560,
        "wires": [
            [
                "7d1f9414be49d7c3"
            ]
        ]
    },
    {
        "id": "743aaf81267c0a04",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "dc307bb5d26c60f4",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 620,
        "wires": []
    },
    {
        "id": "da645aa8ebbed646",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "dc307bb5d26c60f4",
        "name": "segmentations",
        "info": "",
        "x": 1300,
        "y": 560,
        "wires": []
    },
    {
        "id": "7d1f9414be49d7c3",
        "type": "list segmentations",
        "z": "a02961610bc3982a",
        "g": "dc307bb5d26c60f4",
        "name": "",
        "x": 1130,
        "y": 620,
        "wires": [
            [
                "743aaf81267c0a04"
            ]
        ]
    },
    {
        "id": "f7c18ab2aa687120",
        "type": "get machine info",
        "z": "a02961610bc3982a",
        "g": "855d9ef468b5db0f",
        "name": "",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "389e0cdd7d3853b0"
            ]
        ]
    },
    {
        "id": "ede7a86fd97b5e1b",
        "type": "inject",
        "z": "a02961610bc3982a",
        "g": "855d9ef468b5db0f",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1020,
        "wires": [
            [
                "f7c18ab2aa687120"
            ]
        ]
    },
    {
        "id": "389e0cdd7d3853b0",
        "type": "debug",
        "z": "a02961610bc3982a",
        "g": "855d9ef468b5db0f",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1080,
        "wires": []
    },
    {
        "id": "af8ce4702c170449",
        "type": "comment",
        "z": "a02961610bc3982a",
        "g": "855d9ef468b5db0f",
        "name": "machine info",
        "info": "",
        "x": 330,
        "y": 1020,
        "wires": []
    }
]