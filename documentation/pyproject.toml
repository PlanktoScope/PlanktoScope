[tool.poetry]
name = "planktoscope-docs"
# Note: PEP 440 requires pre-releases to be formatted like "2023.7.0b0" rather than
# "2023.7.0-beta.0", which is different from the Semantic Versioning schema
version = "2024.0.0"
description = "Documentation for the PlanktoScope project"
# For simplicity, we follow the definition of "Maintainer" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Maintainers: Contributors who are responsible for driving the vision and managing the
# organizational aspects of the project".
# Here, we only list the current maintainers of the PlanktoScope documentation project.
maintainers = [
  "Thibaut Pollina <thibaut.pollina@gmail.com>",
  "Ethan Li <lietk12@gmail.com>",
]
# For simplicity, we follow the definition of "Author" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Author: The person/s or organization that created the project".
# Here, we only list the authors of the PlanktoScope documentation project.
authors = ["Thibaut Pollina <thibaut.pollina@gmail.com>"]
license = "CC-BY-SA-4.0"
readme = "README.md"
homepage = "https://www.planktoscope.org"
repository = "https://github.com/PlanktoScope/PlanktoScope"
documentation = "https://docs.planktoscope.community"
keywords = ["documentation", "planktoscope"]
classifiers = [
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Topic :: Scientific/Engineering",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.8"
mkdocs = "^1.4.3"
mkdocs-charts-plugin = "^0.0.12"
mkdocs-glightbox = "^0.4.0"
mkdocs-macros-plugin = "^1.3.7"
mkdocs-markdownextradata-plugin = "^0.2.6"
mkdocs-material = "^9.5.18"
mkdocs-minify-plugin = "^0.8.0"
mkdocs-redirects = "^1.2.2"
# Note: we do not allow the mkdocs-table-reader-plugin in this project because it pulls in a
# large number of dependencies, several of which (especially pandas) take an unacceptably long time
# to install.
Pygments = "^2.18.0"
pymdown-extensions = "^10.13"
LinkChecker = "^10.3.0"
poethepoet = "^0.30.0"
mkdocs-git-revision-date-localized-plugin = "^1.3.0"

[tool.poetry.group.imaging]
optional = true

[tool.poetry.group.imaging.dependencies]
mkdocs-material = { extras = ["imaging"], version = "^9.5.18" }
imgp = "^2.8"

[tool.poe.tasks]
# Assets from outside the documentation directory
clean-hardware-assets = "rm -rf docs/assets/hardware"
import-hardware-assets = "cp -r ../hardware docs/assets/hardware"
import-repo-assets = "cp ../software/CHANGELOG.md docs/reference/software/changelog.md"
import-external-assets = [
  "clean-hardware-assets",
  "import-hardware-assets",
  "import-repo-assets",
]

# Image optimization
optimize-png-photos = "imgp --convert --optimize --quality 95 --recurse --overwrite docs/images/assembly_guide/*.png"
optimize-widths = "imgp --res 1200x0 --optimize --quality 95 --recurse --overwrite docs/images"
optimize-compression = "imgp --eraseexif --optimize --progressive --quality 85 --recurse --overwrite docs/images"

# Previews and standard builds
preview = "mkdocs serve --dev-addr localhost:8000"
build = "mkdocs build --clean --strict"

# Release channels
set-edge-release-channel-header = "sed -i 's~ # poe(release-channels): substitute~ (development preview)~' mkdocs.yml"
set-edge-release-channel = ["set-edge-release-channel-header"]
set-beta-release-channel-header = "sed -i 's~ # poe(release-channels): substitute~ (beta preview)~' mkdocs.yml"
set-beta-release-channel = ["set-beta-release-channel-header"]

# Minimal builds
remove-hardware-setup-guides = "rm -rf docs/setup/hardware/v*"
replace-hardware-setup-index = "mv docs/setup/hardware/index-noguides.md docs/setup/hardware/index.md"
remove-nav-exclusions = "sed -i 's~^.* # poe(make-minimal): exclude$~~' mkdocs.yml"
# Warning: this command should be run in GitHub Actions, but not on a developer computer! This is 
# because it will delete files, and those deletions should never be committed to GitHub.
make-minimal = [
  "clean-hardware-assets",
  "remove-hardware-setup-guides",
  "replace-hardware-setup-index",
  "remove-nav-exclusions",
]

# Documentation checking
build-check = "mkdocs build --clean --strict --no-directory-urls"
check-links = "linkchecker --config .linkcheckerrc site"
check = ["build-check", "check-links"]
