[project]
name = "planktoscope-docs"
version = "0.0.1"
description = "Documentation for the PlanktoScope project"
requires-python = ">=3.13.5,<4.0"
readme = "README.md"
license = "CC-BY-SA-4.0"
keywords = [
    "documentation",
    "planktoscope",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "mkdocs>=1.4.3,<2",
    "mkdocs-charts-plugin>=0.0.13,<0.0.14",
    "mkdocs-glightbox>=0.5.1,<0.6",
    "mkdocs-macros-plugin>=1.4.0,<2",
    "mkdocs-markdownextradata-plugin>=0.2.6,<0.3",
    "mkdocs-material>=9.6.21,<10",
    "mkdocs-minify-plugin>=0.8.0,<0.9",
    "mkdocs-redirects>=1.2.2,<2",
    "Pygments>=2.19.2,<3",
    "pymdown-extensions~=10.16",
    "LinkChecker>=10.6.0,<11",
    "poethepoet>=0.37.0,<0.38",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7,<2",
]

[project.urls]
Homepage = "https://www.planktoscope.org"
Repository = "https://github.com/PlanktoScope/PlanktoScope"
Documentation = "https://docs.planktoscope.community"

[dependency-groups]
imaging = [
    "mkdocs-material[imaging]>=9.6.21,<10",
    "imgp~=2.8",
]

[tool.uv]
package = false
default-groups = ["imaging"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.poe.tasks]
clean-hardware-assets = "rm -rf docs/assets/hardware"

# Image optimization
optimize-png-photos = "imgp --convert --optimize --quality 95 --recurse --overwrite docs/images/assembly_guide/*.png"
optimize-widths = "imgp --res 1200x0 --optimize --quality 95 --recurse --overwrite docs/images"
optimize-compression = "imgp --eraseexif --optimize --progressive --quality 85 --recurse --overwrite docs/images"

# Previews and standard builds
preview = "mkdocs serve --dev-addr localhost:8000"
build = "mkdocs build --clean --strict"

# Release channels
set-edge-release-channel-header = "sed -i 's~ # poe(release-channels): substitute~ (development preview)~' mkdocs.yml"
set-edge-release-channel = ["set-edge-release-channel-header"]
set-beta-release-channel-header = "sed -i 's~ # poe(release-channels): substitute~ (beta preview)~' mkdocs.yml"
set-beta-release-channel = ["set-beta-release-channel-header"]

# Minimal builds
remove-hardware-setup-guides = "rm -rf docs/setup/hardware/v*"
replace-hardware-setup-index = "mv docs/setup/hardware/index-noguides.md docs/setup/hardware/index.md"
remove-nav-exclusions = "sed -i 's~^.* # poe(make-minimal): exclude$~~' mkdocs.yml"
# Warning: this command should be run in GitHub Actions, but not on a developer computer! This is
# because it will delete files, and those deletions should never be committed to GitHub.
make-minimal = [
  "clean-hardware-assets",
  "remove-hardware-setup-guides",
  "replace-hardware-setup-index",
  "remove-nav-exclusions",
]

# Documentation checking
build-check = "mkdocs build --clean --strict --no-directory-urls"
check-links = "linkchecker site"
check = ["build-check", "check-links"]
