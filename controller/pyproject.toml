[tool.poetry]
package-mode = false
name = "planktoscope-controller"
description = "Controller of PlanktoScope hardware"
# For simplicity, we follow the definition of "Maintainer" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Maintainers: Contributors who are responsible for driving the vision and managing the
# organizational aspects of the project".
# Here, we only list the current maintainers of the PlanktoScope backend software.
maintainers = [
  "Ethan Li <lietk12@gmail.com>",
  "Sonny Piers <sonny@fairscope.com",
]
# For simplicity, we follow the definition of "Author" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Author: The person/s or organization that created the project".
# Here, we only list the authors of the PlanktoScope backend software.
authors = ["Romain Bazile <romain@oceantrotter.org>"]
license = "GPL-3.0-or-later"
readme = "README.md"
homepage = "https://www.planktoscope.org"
repository = "https://github.com/PlanktoScope/PlanktoScope/tree/main/controller"
documentation = "https://docs.planktoscope.community/"
keywords = ["planktoscope"]
classifiers = [
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Topic :: Scientific/Engineering",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.11.2,<4.0"
paho-mqtt = "^2.1.0"
loguru = "^0.7.3"
readerwriterlock = "^1.0.9"
picamera2 = "^0.3.31"

[tool.poetry.group.hw.dependencies]
rpi-gpio = "^0.7.0"
adafruit-blinka = "^8.66.2"
adafruit-circuitpython-motorkit = "^1.6.18"
adafruit-circuitpython-motor = "^3.4.17"
adafruit-ssd1306 = "^1.6.2"
adafruit-platformdetect = "^3.84.0"
smbus2 = "^0.5.0"
spidev = "^3.5"
gpiozero = "^2.0.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.37.0"
mypy = "^1.18.1"
types-paho-mqtt = "^1.6.0.20240106"
picamera2 = "^0.3.31"
ruff = "^0.13.3"

[tool.ruff]
line-length = 100

[tool.mypy]
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
# We are gradually introducing type-checking as we rewrite each module; we have to rewrite some
# modules before we can enable these flags:
# disallow_untyped_calls = true
# disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true
# We are gradually introducing type-checking as we rewrite each module; we haven't rewritten the
# following files yet:
exclude = [
  'main.py',
  'adafruithat/stepper.py',
  'adafruithat/display.py',
  'planktoscopehat/light.py',
]
follow_imports = "silent" # required for exclude

[tool.poe.tasks]
fmt = "ruff format"
lint-mypy = "poetry run mypy --explicit-package-bases ."
lint-ruff = "ruff check"
lint = ["lint-ruff", "lint-mypy"]
fmt-check = "ruff format --check"
check = ["fmt-check", "lint"]
